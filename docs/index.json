{"repository_name":"dynfork","body":"<div align=\"center\">\n  <p align=\"center\">\n    <a href=\"https://github.com/kebasyaty/dynfork\">\n      <img\n        alt=\"Logo\"\n        src=\"https://raw.githubusercontent.com/kebasyaty/dynfork/main/logo/logo.svg\">\n    </a>\n  </p>\n  <p>\n    <h1>DynFork</h1>\n    <h3>ORM-like API MongoDB for Crystal language.</h3>\n    <p align=\"center\">\n      <a href=\"https://github.com/kebasyaty/dynfork/actions/workflows/specs.yml\" alt=\"Build Status\"><img src=\"https://github.com/kebasyaty/dynfork/actions/workflows/specs.yml/badge.svg\" alt=\"Build Status\"></a>\n      <a href=\"https://kebasyaty.github.io/dynfork/\" alt=\"Docs\"><img src=\"https://img.shields.io/badge/docs-available-brightgreen.svg\" alt=\"Docs\"></a>\n      <a href=\"https://crystal-lang.org/\" alt=\"Crysta\"><img src=\"https://img.shields.io/badge/crystal-v1.11.2%2B-CC342D\" alt=\"Crysta\"></a>\n      <a href=\"https://github.com/kebasyaty/dynfork/releases/\" alt=\"GitHub release\"><img src=\"https://img.shields.io/github/release/kebasyaty/dynfork\" alt=\"GitHub release\"></a>\n      <a href=\"https://github.com/kebasyaty/dynfork/blob/main/LICENSE\" alt=\"GitHub license\"><img src=\"https://img.shields.io/github/license/kebasyaty/dynfork\" alt=\"GitHub license\"></a>\n      <a href=\"https://github.com/kebasyaty/dynfork\" alt=\"GitHub repository\"><img src=\"https://img.shields.io/badge/--ecebeb?logo=github&logoColor=000000\" alt=\"GitHub repository\"></a>\n    </p>\n    <div align=\"center\">\n      DynFork is built around <a href=\"https://github.com/elbywan/cryomongo\" alt=\"Cryomongo\">Cryomongo</a> and is more focused on web development.\n      <br>\n      For simulate relationship Many-to-One and Many-to-Many,\n      <br>\n      a simplified alternative (Types of selective fields with dynamic addition of elements) is used.\n      <br>\n      The project is focused on web development.\n    </div>\n  </p>\n</div>\n\n<hr>\n\n<p>\n  <a href=\"https://github.com/kebasyaty/dynfork\" alt=\"Status Project\">\n    <img src=\"https://raw.githubusercontent.com/kebasyaty/dynfork/main/pictures/status_project/Status_Project-Beta-.svg\"\n      alt=\"Status Project\">\n  </a>\n</p>\n\n_Compatible with MongoDB 3.6+. Tested against: 4.4, 7.0_\n<br>\n_For more information see [Cryomongo](https://github.com/elbywan/cryomongo \"Cryomongo\")_.\n\n## Documentation\n\nOnline browsable documentation is available at [https://kebasyaty.github.io/dynfork/](https://kebasyaty.github.io/dynfork/ \"Documentation\").\n\n## Requirements\n\n[View the list of requirements.](https://github.com/kebasyaty/dynfork/blob/main/REQUIREMENTS.md \"View the list of requirements.\")\n\n## Installation\n\n1. Install MongoDB (if not installed):<br>\n   [![Fedora](https://img.shields.io/badge/Fedora-294172?style=for-the-badge&logo=fedora&logoColor=white)](https://github.com/kebasyaty/dynfork/blob/main/FEDORA_INSTALL_MONGODB.md)\n   [![Debian](https://img.shields.io/badge/Debian-880E4F?style=for-the-badge&logo=debian&logoColor=white)](https://github.com/kebasyaty/dynfork/blob/main/DEBIAN_INSTALL_MONGODB.md)\n   [![Ubuntu](https://img.shields.io/badge/Ubuntu-E65100?style=for-the-badge&logo=ubuntu&logoColor=white)](https://github.com/kebasyaty/dynfork/blob/main/UBUNTU_INSTALL_MONGODB.md)\n   [![Linux Mint](https://img.shields.io/badge/Linux_Mint-5e902b?style=for-the-badge&logo=linux-mint&logoColor=white)](https://github.com/kebasyaty/dynfork/blob/main/UBUNTU_INSTALL_MONGODB.md)\n\n2. Install additional libraries (if not installed):<br>\n   [![Fedora](https://img.shields.io/badge/Fedora-294172?style=for-the-badge&logo=fedora&logoColor=white)](https://github.com/kebasyaty/dynfork/blob/main/FEDORA_ADDITIONAL_LIBRARIES.md)\n   [![Debian](https://img.shields.io/badge/Debian-880E4F?style=for-the-badge&logo=debian&logoColor=white)](https://github.com/kebasyaty/dynfork/blob/main/DEBIAN_ADDITIONAL_LIBRARIES.md)\n   [![Ubuntu](https://img.shields.io/badge/Ubuntu-E65100?style=for-the-badge&logo=ubuntu&logoColor=white)](https://github.com/kebasyaty/dynfork/blob/main/UBUNTU_ADDITIONAL_LIBRARIES.md)\n   [![Linux Mint](https://img.shields.io/badge/Linux_Mint-5e902b?style=for-the-badge&logo=linux-mint&logoColor=white)](https://github.com/kebasyaty/dynfork/blob/main/UBUNTU_ADDITIONAL_LIBRARIES.md)\n\n3. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     dynfork:\n       github: kebasyaty/dynfork\n       version: ~> 0.7.15\n   ```\n\n4. Run `shards install`\n\n## Usage\n\nIt is recommended to look at examples [here](https://github.com/kebasyaty/dynfork/tree/main/examples \"here\").\n\n```crystal\nrequire \"dynfork\"\n\n# Create your model.\n@[DynFork::Meta(service_name: \"Accounts\")]\nstruct User < DynFork::Model\n  getter username = DynFork::Fields::TextField.new\n  getter email = DynFork::Fields::EmailField.new\n  getter birthday = DynFork::Fields::DateField.new\nend\n\n# Initialize locale.\n# https://github.com/crystal-i18n/i18n\nI18n.config.loaders << I18n::Loader::YAML.new(\"config/locales\")\nI18n.config.default_locale = :en\nI18n.init\n\n# Run migration.\n# https://elbywan.github.io/cryomongo/Mongo/Client.html\nDynFork::Migration::Monitor.new(\n  app_name: \"AppName\",\n  unique_app_key: \"Towr5kKQM5H3Lb0b\",\n  mongo_client: Mongo::Client.new(\"mongodb://localhost:27017\")\n).migrat\n\n# Create a user.\nuser = User.new\n\n# Add user data.\nuser.username.value = \"username\"\nuser.email.value = \"user@noreaply.net\"\nuser.birthday.value = \"1970-01-01\"\n\n# Save user.\n# Hint: print_err - convenient for development.\nuser.print_err unless user.save\n\n# Print user details.\nputs \"User details:\"\nif id = user.object_id\n  pp User.find_one_to_hash({_id: id})\nend\n\nputs \"Documwnt count: #{User.estimated_document_count}\"\n\nputs \"Deleting a document.\"\nuser.delete\n\nputs \"Documwnt count: #{User.count_documents}\"\n```\n\n### [See more examples here.](https://github.com/kebasyaty/dynfork/tree/main/examples \"See more examples here.\")\n\n## Model Parameters\n\nSee the documentation [here](https://kebasyaty.github.io/dynfork/DynFork/Meta.html \"here\").\n\n###### ( only `service_name` is a required parameter )\n\n<div>\n   <table>\n     <tr>\n       <th align=\"left\">Parameter</th>\n       <th align=\"left\">Default</th>\n       <th align=\"left\">Description</th>\n     </tr>\n     <tr>\n       <td align=\"left\">service_name</td>\n       <td align=\"left\">no</td>\n       <td align=\"left\"><b>Examples:</b> Accounts | Smartphones | Washing machines | etc ... </td>\n     </tr>\n     <tr>\n       <td align=\"left\">fixture_name</td>\n       <td align=\"left\">no</td>\n       <td align=\"left\">\n         The name of the fixture in the <b>config/fixtures</b> directory (without extension).\n         <br>\n         <b>Examples:</b> SiteSettings | AppSettings | etc ...\n       </td>\n     </tr>\n     <tr>\n       <td align=\"left\">db_query_docs_limit</td>\n       <td align=\"left\">1000</td>\n       <td align=\"left\">limiting query results.</td>\n     </tr>\n     <tr>\n       <td align=\"left\">migrat_model?</td>\n       <td align=\"left\">true</td>\n       <td align=\"left\">\n         Set to <b>false</b> if you do not need to migrate the Model to the database.<br>\n         This can be use to validate a web forms - Search form, Contact form, etc.\n       </td>\n     </tr>\n     <tr>\n       <td align=\"left\">create_doc?</td>\n       <td align=\"left\">true</td>\n       <td align=\"left\">\n         Can a Model create new documents in a collection?<br>\n         Set to <b>false</b> if you only need one document in the collection and the Model is using a fixture.\n       </td>\n     </tr>\n     <tr>\n       <td align=\"left\">update_doc?</td>\n       <td align=\"left\">true</td>\n       <td align=\"left\">Can a Model update documents in a collection?</td>\n     </tr>\n     <tr>\n       <td align=\"left\">delete_doc?</td>\n       <td align=\"left\">true</td>\n       <td align=\"left\">Can a Model remove documents from a collection?</td>\n     </tr>\n   </table>\n</div>\n\n<br>\n\n**Example:**\n\n```crystal\n  @[DynFork::Meta(\n    service_name: \"ServiceName\",\n    fixture_name: \"FixtureName\",\n    db_query_docs_limit: 1000,\n    migrat_model?: true,\n    create_doc?: true,\n    update_doc?: true,\n    delete_doc?: true,\n  )]\n  struct User < DynFork::Model\n    getter username = DynFork::Fields::TextField.new\n    getter birthday = DynFork::Fields::DateField.new\n  end\n```\n\n## Methods for developers\n\n_Links to documentation._\n\n**[Model:](https://kebasyaty.github.io/dynfork/DynFork/Model.html \"Model:\")**\n\n- full_model_name\n- meta\n- subclasses\n- object_id\n\n**[Extra:](https://kebasyaty.github.io/dynfork/DynFork/Extra.html \"Extra:\")**\n\n- add_validation\n- indexing\n- pre_create\n- post_create\n- pre_update\n- post_update\n- pre_delete\n- post_delete\n\n**[Migration:](https://kebasyaty.github.io/dynfork/DynFork/Migration.html \"Migration:\")**\n\n- migrat\n\n**[QPaladins:](https://kebasyaty.github.io/dynfork/DynFork/QPaladins.html \"QPaladins:\")**\n\n- valid?\n- save\n- print_err\n- delete\n- verify_password\n- update_password\n\n**[QCommons:](https://kebasyaty.github.io/dynfork/DynFork/QCommons.html \"QCommons:\")**\n\n- aggregate\n- collection_name\n- count_documents\n- distinct\n- estimated_document_count\n- stats\n- find_many_to_hash_list\n- find_many_to_json\n- find_one_to_hash\n- find_one_to_instance\n- find_one_to_json\n- find_one_and_delete\n- unit_manager\n- delete_many\n- delete_one\n- bulk\n- bulk_write\n- create_index\n- create_indexes\n- drop_index\n- drop_indexes\n- list_indexes\n\n**[F64Field:](https://kebasyaty.github.io/dynfork/DynFork/Fields/F64Field.html \"F64Field:\")**\n\n- finance_plus\n- finance_minus\n- finance_divide\n- finance_multiply\n\nFor currencies, use the <a href=\"https://github.com/crystal-money/money\" target=\"_blank\">Money</a> shard.\n\n## Contributing\n\n1. Fork it (<https://github.com/kebasyaty/dynfork/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [kebasyaty](https://github.com/kebasyaty) Gennady Kostyunin - creator and maintainer\n\n## Changelog\n\n[View the change history.](https://github.com/kebasyaty/dynfork/blob/main/CHANGELOG.md \"Changelog\")\n\n## License\n\n**This project is licensed under the** [MIT](https://github.com/kebasyaty/dynfork/blob/main/LICENSE \"MIT\")**.**\n\n<br>\n<br>\n<div>\n  <a href=\"https://crystal-lang.org/\" alt=\"Made with Crystal\">\n    <img width=\"100%\" src=\"https://raw.githubusercontent.com/kebasyaty/dynfork/main/pictures/made-with-crystal.svg\"\n      alt=\"Made with Crystal\">\n  </a>\n</div>\n","program":{"html_id":"dynfork/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"dynfork","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"dynfork/DynFork","path":"DynFork.html","kind":"module","full_name":"DynFork","name":"DynFork","abstract":false,"locations":[{"filename":"src/dynfork.cr","line_number":53,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork.cr#L53"},{"filename":"src/dynfork/errors/root.cr","line_number":2,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/root.cr#L2"},{"filename":"src/dynfork/extra.cr","line_number":1,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/extra.cr#L1"},{"filename":"src/dynfork/meta.cr","line_number":1,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/meta.cr#L1"},{"filename":"src/dynfork/model.cr","line_number":5,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/model.cr#L5"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.7.15\""}],"doc":"██████╗░██╗░░░██╗███╗░░██╗███████╗░█████╗░██████╗░██╗░░██╗<br>\n██╔══██╗╚██╗░██╔╝████╗░██║██╔════╝██╔══██╗██╔══██╗██║░██╔╝<br>\n██║░░██║░╚████╔╝░██╔██╗██║█████╗░░██║░░██║██████╔╝█████═╝░<br>\n██║░░██║░░╚██╔╝░░██║╚████║██╔══╝░░██║░░██║██╔══██╗██╔═██╗░<br>\n██████╔╝░░░██║░░░██║░╚███║██║░░░░░╚█████╔╝██║░░██║██║░╚██╗<br>\n╚═════╝░░░░╚═╝░░░╚═╝░░╚══╝╚═╝░░░░░░╚════╝░╚═╝░░╚═╝╚═╝░░╚═╝\n<br>\n<br>\nORM-like API MongoDB for Crystal.\n<br>\nFor simulate relationship Many-to-One and Many-to-Many,\n<br>\na simplified alternative (Types of selective fields with dynamic addition of elements) is used.\n<br>\nThe project is focused on web development.\n<br>\n<br>\n_Compatible with MongoDB 3.6+. Tested against: 4.4, 7.0_\n<br>\n_For more information see [Cryomongo](https://github.com/elbywan/cryomongo \"Cryomongo\")_.\n<br>\n<br>\n Copyright (c) 2023 kebasyaty - Gennady Kostyunin\n<br>\n DynFork is free software under terms of the MIT License.","summary":"<p>██████╗░██╗░░░██╗███╗░░██╗███████╗░█████╗░██████╗░██╗░░██╗<br> ██╔══██╗╚██╗░██╔╝████╗░██║██╔════╝██╔══██╗██╔══██╗██║░██╔╝<br> ██║░░██║░╚████╔╝░██╔██╗██║█████╗░░██║░░██║██████╔╝█████═╝░<br> ██║░░██║░░╚██╔╝░░██║╚████║██╔══╝░░██║░░██║██╔══██╗██╔═██╗░<br> ██████╔╝░░░██║░░░██║░╚███║██║░░░░░╚█████╔╝██║░░██║██║░╚██╗<br> ╚═════╝░░░░╚═╝░░░╚═╝░░╚══╝╚═╝░░░░░░╚════╝░╚═╝░░╚═╝╚═╝░░╚═╝ <br> <br> ORM-like API MongoDB for Crystal.</p>","types":[{"html_id":"dynfork/DynFork/Errors","path":"DynFork/Errors.html","kind":"module","full_name":"DynFork::Errors","name":"Errors","abstract":false,"locations":[{"filename":"src/dynfork/errors/root.cr","line_number":2,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/root.cr#L2"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork","kind":"module","full_name":"DynFork","name":"DynFork"},"doc":"A set of custom exceptions for DynFork.","summary":"<p>A set of custom exceptions for DynFork.</p>","types":[{"html_id":"dynfork/DynFork/Errors/Cache","path":"DynFork/Errors/Cache.html","kind":"module","full_name":"DynFork::Errors::Cache","name":"Cache","abstract":false,"locations":[{"filename":"src/dynfork/errors/cache.cr","line_number":4,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/cache.cr#L4"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Errors","kind":"module","full_name":"DynFork::Errors","name":"Errors"},"doc":"Errors associated with the caching.","summary":"<p>Errors associated with the caching.</p>","types":[{"html_id":"dynfork/DynFork/Errors/Cache/SettingsExcessChars","path":"DynFork/Errors/Cache/SettingsExcessChars.html","kind":"class","full_name":"DynFork::Errors::Cache::SettingsExcessChars","name":"SettingsExcessChars","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},"ancestors":[{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},{"html_id":"dynfork/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"dynfork/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/errors/cache.cr","line_number":6,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/cache.cr#L6"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Errors/Cache","kind":"module","full_name":"DynFork::Errors::Cache","name":"Cache"},"doc":"The allowed number of characters in global settings has been exceeded.","summary":"<p>The allowed number of characters in global settings has been exceeded.</p>","constructors":[{"html_id":"new(parameter_name:String,limit_size:UInt32)-class-method","name":"new","abstract":false,"args":[{"name":"parameter_name","external_name":"parameter_name","restriction":"String"},{"name":"limit_size","external_name":"limit_size","restriction":"UInt32"}],"args_string":"(parameter_name : String, limit_size : UInt32)","args_html":"(parameter_name : String, limit_size : UInt32)","location":{"filename":"src/dynfork/errors/cache.cr","line_number":7,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/cache.cr#L7"},"def":{"name":"new","args":[{"name":"parameter_name","external_name":"parameter_name","restriction":"String"},{"name":"limit_size","external_name":"limit_size","restriction":"UInt32"}],"visibility":"Public","body":"_ = allocate\n_.initialize(parameter_name, limit_size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}]},{"html_id":"dynfork/DynFork/Errors/Cache/SettingsRegexFails","path":"DynFork/Errors/Cache/SettingsRegexFails.html","kind":"class","full_name":"DynFork::Errors::Cache::SettingsRegexFails","name":"SettingsRegexFails","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},"ancestors":[{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},{"html_id":"dynfork/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"dynfork/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/errors/cache.cr","line_number":19,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/cache.cr#L19"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Errors/Cache","kind":"module","full_name":"DynFork::Errors::Cache","name":"Cache"},"doc":"The global settings fails regular expression validation.","summary":"<p>The global settings fails regular expression validation.</p>","constructors":[{"html_id":"new(parameter_name:String,regex_str:String)-class-method","name":"new","abstract":false,"args":[{"name":"parameter_name","external_name":"parameter_name","restriction":"String"},{"name":"regex_str","external_name":"regex_str","restriction":"String"}],"args_string":"(parameter_name : String, regex_str : String)","args_html":"(parameter_name : String, regex_str : String)","location":{"filename":"src/dynfork/errors/cache.cr","line_number":20,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/cache.cr#L20"},"def":{"name":"new","args":[{"name":"parameter_name","external_name":"parameter_name","restriction":"String"},{"name":"regex_str","external_name":"regex_str","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(parameter_name, regex_str)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}]}]},{"html_id":"dynfork/DynFork/Errors/Date","path":"DynFork/Errors/Date.html","kind":"module","full_name":"DynFork::Errors::Date","name":"Date","abstract":false,"locations":[{"filename":"src/dynfork/errors/date.cr","line_number":4,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/date.cr#L4"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Errors","kind":"module","full_name":"DynFork::Errors","name":"Errors"},"doc":"Errors associated with the date and time.","summary":"<p>Errors associated with the date and time.</p>","types":[{"html_id":"dynfork/DynFork/Errors/Date/InvalidDate","path":"DynFork/Errors/Date/InvalidDate.html","kind":"class","full_name":"DynFork::Errors::Date::InvalidDate","name":"InvalidDate","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},"ancestors":[{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},{"html_id":"dynfork/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"dynfork/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/errors/date.cr","line_number":6,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/date.cr#L6"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Errors/Date","kind":"module","full_name":"DynFork::Errors::Date","name":"Date"},"doc":"Invalid date.","summary":"<p>Invalid date.</p>","constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/dynfork/errors/date.cr","line_number":7,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/date.cr#L7"},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}]},{"html_id":"dynfork/DynFork/Errors/Date/InvalidDateTime","path":"DynFork/Errors/Date/InvalidDateTime.html","kind":"class","full_name":"DynFork::Errors::Date::InvalidDateTime","name":"InvalidDateTime","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},"ancestors":[{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},{"html_id":"dynfork/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"dynfork/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/errors/date.cr","line_number":13,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/date.cr#L13"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Errors/Date","kind":"module","full_name":"DynFork::Errors::Date","name":"Date"},"doc":"Invalid date and time.","summary":"<p>Invalid date and time.</p>","constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/dynfork/errors/date.cr","line_number":14,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/date.cr#L14"},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}]}]},{"html_id":"dynfork/DynFork/Errors/DynForkException","path":"DynFork/Errors/DynForkException.html","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException","abstract":false,"superclass":{"html_id":"dynfork/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"dynfork/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"dynfork/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/errors/root.cr","line_number":4,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/root.cr#L4"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"dynfork/DynFork/Errors/Cache/SettingsExcessChars","kind":"class","full_name":"DynFork::Errors::Cache::SettingsExcessChars","name":"SettingsExcessChars"},{"html_id":"dynfork/DynFork/Errors/Cache/SettingsRegexFails","kind":"class","full_name":"DynFork::Errors::Cache::SettingsRegexFails","name":"SettingsRegexFails"},{"html_id":"dynfork/DynFork/Errors/Date/InvalidDate","kind":"class","full_name":"DynFork::Errors::Date::InvalidDate","name":"InvalidDate"},{"html_id":"dynfork/DynFork/Errors/Date/InvalidDateTime","kind":"class","full_name":"DynFork::Errors::Date::InvalidDateTime","name":"InvalidDateTime"},{"html_id":"dynfork/DynFork/Errors/Fields/InvalidInputType","kind":"class","full_name":"DynFork::Errors::Fields::InvalidInputType","name":"InvalidInputType"},{"html_id":"dynfork/DynFork/Errors/Fields/NotCorrectDefaultDate","kind":"class","full_name":"DynFork::Errors::Fields::NotCorrectDefaultDate","name":"NotCorrectDefaultDate"},{"html_id":"dynfork/DynFork/Errors/Fields/NotCorrectMinDate","kind":"class","full_name":"DynFork::Errors::Fields::NotCorrectMinDate","name":"NotCorrectMinDate"},{"html_id":"dynfork/DynFork/Errors/Fields/SlugSourceNameInvalid","kind":"class","full_name":"DynFork::Errors::Fields::SlugSourceNameInvalid","name":"SlugSourceNameInvalid"},{"html_id":"dynfork/DynFork/Errors/Fields/SlugSourceNotRequired","kind":"class","full_name":"DynFork::Errors::Fields::SlugSourceNotRequired","name":"SlugSourceNotRequired"},{"html_id":"dynfork/DynFork/Errors/Fields/SlugSourceNotUnique","kind":"class","full_name":"DynFork::Errors::Fields::SlugSourceNotUnique","name":"SlugSourceNotUnique"},{"html_id":"dynfork/DynFork/Errors/Fields/SlugSourceTypeInvalid","kind":"class","full_name":"DynFork::Errors::Fields::SlugSourceTypeInvalid","name":"SlugSourceTypeInvalid"},{"html_id":"dynfork/DynFork/Errors/Meta/ForbiddenDeletingDocs","kind":"class","full_name":"DynFork::Errors::Meta::ForbiddenDeletingDocs","name":"ForbiddenDeletingDocs"},{"html_id":"dynfork/DynFork/Errors/Meta/InvalidParamName","kind":"class","full_name":"DynFork::Errors::Meta::InvalidParamName","name":"InvalidParamName"},{"html_id":"dynfork/DynFork/Errors/Meta/ParameterMissing","kind":"class","full_name":"DynFork::Errors::Meta::ParameterMissing","name":"ParameterMissing"},{"html_id":"dynfork/DynFork/Errors/Meta/ParamExcessChars","kind":"class","full_name":"DynFork::Errors::Meta::ParamExcessChars","name":"ParamExcessChars"},{"html_id":"dynfork/DynFork/Errors/Meta/ParamRegexFails","kind":"class","full_name":"DynFork::Errors::Meta::ParamRegexFails","name":"ParamRegexFails"},{"html_id":"dynfork/DynFork/Errors/Model/FailedGenerateUniqueID","kind":"class","full_name":"DynFork::Errors::Model::FailedGenerateUniqueID","name":"FailedGenerateUniqueID"},{"html_id":"dynfork/DynFork/Errors/Model/FieldsMissing","kind":"class","full_name":"DynFork::Errors::Model::FieldsMissing","name":"FieldsMissing"},{"html_id":"dynfork/DynFork/Errors/Model/InvalidGroupNumber","kind":"class","full_name":"DynFork::Errors::Model::InvalidGroupNumber","name":"InvalidGroupNumber"},{"html_id":"dynfork/DynFork/Errors/Model/ModelNameExcessChars","kind":"class","full_name":"DynFork::Errors::Model::ModelNameExcessChars","name":"ModelNameExcessChars"},{"html_id":"dynfork/DynFork/Errors/Model/ModelNameRegexFails","kind":"class","full_name":"DynFork::Errors::Model::ModelNameRegexFails","name":"ModelNameRegexFails"},{"html_id":"dynfork/DynFork/Errors/Panic","kind":"class","full_name":"DynFork::Errors::Panic","name":"Panic"},{"html_id":"dynfork/DynFork/Errors/Password/OldPassNotMatch","kind":"class","full_name":"DynFork::Errors::Password::OldPassNotMatch","name":"OldPassNotMatch"},{"html_id":"dynfork/DynFork/Errors/Types/InvalidType","kind":"class","full_name":"DynFork::Errors::Types::InvalidType","name":"InvalidType"}],"namespace":{"html_id":"dynfork/DynFork/Errors","kind":"module","full_name":"DynFork::Errors","name":"Errors"},"doc":"Root custom exception.","summary":"<p>Root custom exception.</p>"},{"html_id":"dynfork/DynFork/Errors/Fields","path":"DynFork/Errors/Fields.html","kind":"module","full_name":"DynFork::Errors::Fields","name":"Fields","abstract":false,"locations":[{"filename":"src/dynfork/errors/fields.cr","line_number":4,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/fields.cr#L4"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Errors","kind":"module","full_name":"DynFork::Errors","name":"Errors"},"doc":"Errors associated with the fields.","summary":"<p>Errors associated with the fields.</p>","types":[{"html_id":"dynfork/DynFork/Errors/Fields/InvalidInputType","path":"DynFork/Errors/Fields/InvalidInputType.html","kind":"class","full_name":"DynFork::Errors::Fields::InvalidInputType","name":"InvalidInputType","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},"ancestors":[{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},{"html_id":"dynfork/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"dynfork/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/errors/fields.cr","line_number":90,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/fields.cr#L90"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Errors/Fields","kind":"module","full_name":"DynFork::Errors::Fields","name":"Fields"},"doc":"Invalid input type.","summary":"<p>Invalid input type.</p>","constructors":[{"html_id":"new(input_type:String)-class-method","name":"new","abstract":false,"args":[{"name":"input_type","external_name":"input_type","restriction":"String"}],"args_string":"(input_type : String)","args_html":"(input_type : String)","location":{"filename":"src/dynfork/errors/fields.cr","line_number":91,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/fields.cr#L91"},"def":{"name":"new","args":[{"name":"input_type","external_name":"input_type","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(input_type)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}]},{"html_id":"dynfork/DynFork/Errors/Fields/NotCorrectDefaultDate","path":"DynFork/Errors/Fields/NotCorrectDefaultDate.html","kind":"class","full_name":"DynFork::Errors::Fields::NotCorrectDefaultDate","name":"NotCorrectDefaultDate","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},"ancestors":[{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},{"html_id":"dynfork/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"dynfork/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/errors/fields.cr","line_number":79,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/fields.cr#L79"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Errors/Fields","kind":"module","full_name":"DynFork::Errors::Fields","name":"Fields"},"doc":"If the default date does not match the minimum or maximum value.","summary":"<p>If the default date does not match the minimum or maximum value.</p>","constructors":[{"html_id":"new(model_name:String,field_name:String,msg_err:String)-class-method","name":"new","abstract":false,"args":[{"name":"model_name","external_name":"model_name","restriction":"String"},{"name":"field_name","external_name":"field_name","restriction":"String"},{"name":"msg_err","external_name":"msg_err","restriction":"String"}],"args_string":"(model_name : String, field_name : String, msg_err : String)","args_html":"(model_name : String, field_name : String, msg_err : String)","location":{"filename":"src/dynfork/errors/fields.cr","line_number":80,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/fields.cr#L80"},"def":{"name":"new","args":[{"name":"model_name","external_name":"model_name","restriction":"String"},{"name":"field_name","external_name":"field_name","restriction":"String"},{"name":"msg_err","external_name":"msg_err","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(model_name, field_name, msg_err)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}]},{"html_id":"dynfork/DynFork/Errors/Fields/NotCorrectMinDate","path":"DynFork/Errors/Fields/NotCorrectMinDate.html","kind":"class","full_name":"DynFork::Errors::Fields::NotCorrectMinDate","name":"NotCorrectMinDate","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},"ancestors":[{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},{"html_id":"dynfork/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"dynfork/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/errors/fields.cr","line_number":66,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/fields.cr#L66"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Errors/Fields","kind":"module","full_name":"DynFork::Errors::Fields","name":"Fields"},"doc":"If the max date is not greater than the min date.","summary":"<p>If the max date is not greater than the min date.</p>","constructors":[{"html_id":"new(model_name:String,field_name:String)-class-method","name":"new","abstract":false,"args":[{"name":"model_name","external_name":"model_name","restriction":"String"},{"name":"field_name","external_name":"field_name","restriction":"String"}],"args_string":"(model_name : String, field_name : String)","args_html":"(model_name : String, field_name : String)","location":{"filename":"src/dynfork/errors/fields.cr","line_number":67,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/fields.cr#L67"},"def":{"name":"new","args":[{"name":"model_name","external_name":"model_name","restriction":"String"},{"name":"field_name","external_name":"field_name","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(model_name, field_name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}]},{"html_id":"dynfork/DynFork/Errors/Fields/SlugSourceNameInvalid","path":"DynFork/Errors/Fields/SlugSourceNameInvalid.html","kind":"class","full_name":"DynFork::Errors::Fields::SlugSourceNameInvalid","name":"SlugSourceNameInvalid","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},"ancestors":[{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},{"html_id":"dynfork/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"dynfork/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/errors/fields.cr","line_number":6,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/fields.cr#L6"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Errors/Fields","kind":"module","full_name":"DynFork::Errors::Fields","name":"Fields"},"doc":"If the slug source does not match any field name in the Model.","summary":"<p>If the slug source does not match any field name in the Model.</p>","constructors":[{"html_id":"new(model_name:String,field_name:String,source_name:String)-class-method","name":"new","abstract":false,"args":[{"name":"model_name","external_name":"model_name","restriction":"String"},{"name":"field_name","external_name":"field_name","restriction":"String"},{"name":"source_name","external_name":"source_name","restriction":"String"}],"args_string":"(model_name : String, field_name : String, source_name : String)","args_html":"(model_name : String, field_name : String, source_name : String)","location":{"filename":"src/dynfork/errors/fields.cr","line_number":7,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/fields.cr#L7"},"def":{"name":"new","args":[{"name":"model_name","external_name":"model_name","restriction":"String"},{"name":"field_name","external_name":"field_name","restriction":"String"},{"name":"source_name","external_name":"source_name","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(model_name, field_name, source_name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}]},{"html_id":"dynfork/DynFork/Errors/Fields/SlugSourceNotRequired","path":"DynFork/Errors/Fields/SlugSourceNotRequired.html","kind":"class","full_name":"DynFork::Errors::Fields::SlugSourceNotRequired","name":"SlugSourceNotRequired","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},"ancestors":[{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},{"html_id":"dynfork/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"dynfork/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/errors/fields.cr","line_number":37,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/fields.cr#L37"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Errors/Fields","kind":"module","full_name":"DynFork::Errors::Fields","name":"Fields"},"doc":"For slug sources, all fields except the `hash` field must be required.","summary":"<p>For slug sources, all fields except the <code>hash</code> field must be required.</p>","constructors":[{"html_id":"new(model_name:String,slug_field:String,source_field:String)-class-method","name":"new","abstract":false,"args":[{"name":"model_name","external_name":"model_name","restriction":"String"},{"name":"slug_field","external_name":"slug_field","restriction":"String"},{"name":"source_field","external_name":"source_field","restriction":"String"}],"args_string":"(model_name : String, slug_field : String, source_field : String)","args_html":"(model_name : String, slug_field : String, source_field : String)","location":{"filename":"src/dynfork/errors/fields.cr","line_number":38,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/fields.cr#L38"},"def":{"name":"new","args":[{"name":"model_name","external_name":"model_name","restriction":"String"},{"name":"slug_field","external_name":"slug_field","restriction":"String"},{"name":"source_field","external_name":"source_field","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(model_name, slug_field, source_field)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}]},{"html_id":"dynfork/DynFork/Errors/Fields/SlugSourceNotUnique","path":"DynFork/Errors/Fields/SlugSourceNotUnique.html","kind":"class","full_name":"DynFork::Errors::Fields::SlugSourceNotUnique","name":"SlugSourceNotUnique","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},"ancestors":[{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},{"html_id":"dynfork/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"dynfork/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/errors/fields.cr","line_number":52,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/fields.cr#L52"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Errors/Fields","kind":"module","full_name":"DynFork::Errors::Fields","name":"Fields"},"doc":"If the slug source does not have unique fields.","summary":"<p>If the slug source does not have unique fields.</p>","constructors":[{"html_id":"new(model_name:String,slug_field:String)-class-method","name":"new","abstract":false,"args":[{"name":"model_name","external_name":"model_name","restriction":"String"},{"name":"slug_field","external_name":"slug_field","restriction":"String"}],"args_string":"(model_name : String, slug_field : String)","args_html":"(model_name : String, slug_field : String)","location":{"filename":"src/dynfork/errors/fields.cr","line_number":53,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/fields.cr#L53"},"def":{"name":"new","args":[{"name":"model_name","external_name":"model_name","restriction":"String"},{"name":"slug_field","external_name":"slug_field","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(model_name, slug_field)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}]},{"html_id":"dynfork/DynFork/Errors/Fields/SlugSourceTypeInvalid","path":"DynFork/Errors/Fields/SlugSourceTypeInvalid.html","kind":"class","full_name":"DynFork::Errors::Fields::SlugSourceTypeInvalid","name":"SlugSourceTypeInvalid","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},"ancestors":[{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},{"html_id":"dynfork/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"dynfork/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/errors/fields.cr","line_number":20,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/fields.cr#L20"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Errors/Fields","kind":"module","full_name":"DynFork::Errors::Fields","name":"Fields"},"doc":"Invalid field type for slug source.","summary":"<p>Invalid field type for slug source.</p>","constructors":[{"html_id":"new(model_name:String,slug_field:String,source_field:String)-class-method","name":"new","abstract":false,"args":[{"name":"model_name","external_name":"model_name","restriction":"String"},{"name":"slug_field","external_name":"slug_field","restriction":"String"},{"name":"source_field","external_name":"source_field","restriction":"String"}],"args_string":"(model_name : String, slug_field : String, source_field : String)","args_html":"(model_name : String, slug_field : String, source_field : String)","location":{"filename":"src/dynfork/errors/fields.cr","line_number":21,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/fields.cr#L21"},"def":{"name":"new","args":[{"name":"model_name","external_name":"model_name","restriction":"String"},{"name":"slug_field","external_name":"slug_field","restriction":"String"},{"name":"source_field","external_name":"source_field","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(model_name, slug_field, source_field)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}]}]},{"html_id":"dynfork/DynFork/Errors/Meta","path":"DynFork/Errors/Meta.html","kind":"module","full_name":"DynFork::Errors::Meta","name":"Meta","abstract":false,"locations":[{"filename":"src/dynfork/errors/meta.cr","line_number":4,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/meta.cr#L4"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Errors","kind":"module","full_name":"DynFork::Errors","name":"Errors"},"doc":"Errors associated with the metadata.","summary":"<p>Errors associated with the metadata.</p>","types":[{"html_id":"dynfork/DynFork/Errors/Meta/ForbiddenDeletingDocs","path":"DynFork/Errors/Meta/ForbiddenDeletingDocs.html","kind":"class","full_name":"DynFork::Errors::Meta::ForbiddenDeletingDocs","name":"ForbiddenDeletingDocs","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},"ancestors":[{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},{"html_id":"dynfork/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"dynfork/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/errors/meta.cr","line_number":60,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/meta.cr#L60"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Errors/Meta","kind":"module","full_name":"DynFork::Errors::Meta","name":"Meta"},"doc":"If deleting documents is prohibited.","summary":"<p>If deleting documents is prohibited.</p>","constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/dynfork/errors/meta.cr","line_number":61,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/meta.cr#L61"},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}]},{"html_id":"dynfork/DynFork/Errors/Meta/InvalidParamName","path":"DynFork/Errors/Meta/InvalidParamName.html","kind":"class","full_name":"DynFork::Errors::Meta::InvalidParamName","name":"InvalidParamName","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},"ancestors":[{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},{"html_id":"dynfork/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"dynfork/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/errors/meta.cr","line_number":19,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/meta.cr#L19"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Errors/Meta","kind":"module","full_name":"DynFork::Errors::Meta","name":"Meta"},"doc":"Invalid parameter name.","summary":"<p>Invalid parameter name.</p>","constructors":[{"html_id":"new(model_name:String,parameter_name:String)-class-method","name":"new","abstract":false,"args":[{"name":"model_name","external_name":"model_name","restriction":"String"},{"name":"parameter_name","external_name":"parameter_name","restriction":"String"}],"args_string":"(model_name : String, parameter_name : String)","args_html":"(model_name : String, parameter_name : String)","location":{"filename":"src/dynfork/errors/meta.cr","line_number":20,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/meta.cr#L20"},"def":{"name":"new","args":[{"name":"model_name","external_name":"model_name","restriction":"String"},{"name":"parameter_name","external_name":"parameter_name","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(model_name, parameter_name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}]},{"html_id":"dynfork/DynFork/Errors/Meta/ParameterMissing","path":"DynFork/Errors/Meta/ParameterMissing.html","kind":"class","full_name":"DynFork::Errors::Meta::ParameterMissing","name":"ParameterMissing","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},"ancestors":[{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},{"html_id":"dynfork/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"dynfork/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/errors/meta.cr","line_number":6,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/meta.cr#L6"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Errors/Meta","kind":"module","full_name":"DynFork::Errors::Meta","name":"Meta"},"doc":"Missing parameter for Metadata.","summary":"<p>Missing parameter for Metadata.</p>","constructors":[{"html_id":"new(model_name:String,parameter_name:String)-class-method","name":"new","abstract":false,"args":[{"name":"model_name","external_name":"model_name","restriction":"String"},{"name":"parameter_name","external_name":"parameter_name","restriction":"String"}],"args_string":"(model_name : String, parameter_name : String)","args_html":"(model_name : String, parameter_name : String)","location":{"filename":"src/dynfork/errors/meta.cr","line_number":7,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/meta.cr#L7"},"def":{"name":"new","args":[{"name":"model_name","external_name":"model_name","restriction":"String"},{"name":"parameter_name","external_name":"parameter_name","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(model_name, parameter_name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}]},{"html_id":"dynfork/DynFork/Errors/Meta/ParamExcessChars","path":"DynFork/Errors/Meta/ParamExcessChars.html","kind":"class","full_name":"DynFork::Errors::Meta::ParamExcessChars","name":"ParamExcessChars","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},"ancestors":[{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},{"html_id":"dynfork/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"dynfork/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/errors/meta.cr","line_number":32,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/meta.cr#L32"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Errors/Meta","kind":"module","full_name":"DynFork::Errors::Meta","name":"Meta"},"doc":"The allowed number of characters in the metadata parameters has been exceeded.","summary":"<p>The allowed number of characters in the metadata parameters has been exceeded.</p>","constructors":[{"html_id":"new(model_name:String,parameter_name:String,limit_size:UInt32)-class-method","name":"new","abstract":false,"args":[{"name":"model_name","external_name":"model_name","restriction":"String"},{"name":"parameter_name","external_name":"parameter_name","restriction":"String"},{"name":"limit_size","external_name":"limit_size","restriction":"UInt32"}],"args_string":"(model_name : String, parameter_name : String, limit_size : UInt32)","args_html":"(model_name : String, parameter_name : String, limit_size : UInt32)","location":{"filename":"src/dynfork/errors/meta.cr","line_number":33,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/meta.cr#L33"},"def":{"name":"new","args":[{"name":"model_name","external_name":"model_name","restriction":"String"},{"name":"parameter_name","external_name":"parameter_name","restriction":"String"},{"name":"limit_size","external_name":"limit_size","restriction":"UInt32"}],"visibility":"Public","body":"_ = allocate\n_.initialize(model_name, parameter_name, limit_size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}]},{"html_id":"dynfork/DynFork/Errors/Meta/ParamRegexFails","path":"DynFork/Errors/Meta/ParamRegexFails.html","kind":"class","full_name":"DynFork::Errors::Meta::ParamRegexFails","name":"ParamRegexFails","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},"ancestors":[{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},{"html_id":"dynfork/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"dynfork/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/errors/meta.cr","line_number":46,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/meta.cr#L46"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Errors/Meta","kind":"module","full_name":"DynFork::Errors::Meta","name":"Meta"},"doc":"The metadata parameter fails regular expression validation.","summary":"<p>The metadata parameter fails regular expression validation.</p>","constructors":[{"html_id":"new(model_name:String,parameter_name:String,regex_str:String)-class-method","name":"new","abstract":false,"args":[{"name":"model_name","external_name":"model_name","restriction":"String"},{"name":"parameter_name","external_name":"parameter_name","restriction":"String"},{"name":"regex_str","external_name":"regex_str","restriction":"String"}],"args_string":"(model_name : String, parameter_name : String, regex_str : String)","args_html":"(model_name : String, parameter_name : String, regex_str : String)","location":{"filename":"src/dynfork/errors/meta.cr","line_number":47,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/meta.cr#L47"},"def":{"name":"new","args":[{"name":"model_name","external_name":"model_name","restriction":"String"},{"name":"parameter_name","external_name":"parameter_name","restriction":"String"},{"name":"regex_str","external_name":"regex_str","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(model_name, parameter_name, regex_str)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}]}]},{"html_id":"dynfork/DynFork/Errors/Model","path":"DynFork/Errors/Model.html","kind":"module","full_name":"DynFork::Errors::Model","name":"Model","abstract":false,"locations":[{"filename":"src/dynfork/errors/model.cr","line_number":4,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/model.cr#L4"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Errors","kind":"module","full_name":"DynFork::Errors","name":"Errors"},"doc":"Errors associated with the Model.","summary":"<p>Errors associated with the Model.</p>","types":[{"html_id":"dynfork/DynFork/Errors/Model/FailedGenerateUniqueID","path":"DynFork/Errors/Model/FailedGenerateUniqueID.html","kind":"class","full_name":"DynFork::Errors::Model::FailedGenerateUniqueID","name":"FailedGenerateUniqueID","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},"ancestors":[{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},{"html_id":"dynfork/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"dynfork/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/errors/model.cr","line_number":47,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/model.cr#L47"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Errors/Model","kind":"module","full_name":"DynFork::Errors::Model","name":"Model"},"doc":"If a unique identifier for a new document cannot be generated.","summary":"<p>If a unique identifier for a new document cannot be generated.</p>","constructors":[{"html_id":"new(model_name:String)-class-method","name":"new","abstract":false,"args":[{"name":"model_name","external_name":"model_name","restriction":"String"}],"args_string":"(model_name : String)","args_html":"(model_name : String)","location":{"filename":"src/dynfork/errors/model.cr","line_number":48,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/model.cr#L48"},"def":{"name":"new","args":[{"name":"model_name","external_name":"model_name","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(model_name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}]},{"html_id":"dynfork/DynFork/Errors/Model/FieldsMissing","path":"DynFork/Errors/Model/FieldsMissing.html","kind":"class","full_name":"DynFork::Errors::Model::FieldsMissing","name":"FieldsMissing","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},"ancestors":[{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},{"html_id":"dynfork/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"dynfork/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/errors/model.cr","line_number":6,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/model.cr#L6"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Errors/Model","kind":"module","full_name":"DynFork::Errors::Model","name":"Model"},"doc":"The Model has no fields.","summary":"<p>The Model has no fields.</p>","constructors":[{"html_id":"new(model_name:String)-class-method","name":"new","abstract":false,"args":[{"name":"model_name","external_name":"model_name","restriction":"String"}],"args_string":"(model_name : String)","args_html":"(model_name : String)","location":{"filename":"src/dynfork/errors/model.cr","line_number":7,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/model.cr#L7"},"def":{"name":"new","args":[{"name":"model_name","external_name":"model_name","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(model_name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}]},{"html_id":"dynfork/DynFork/Errors/Model/InvalidGroupNumber","path":"DynFork/Errors/Model/InvalidGroupNumber.html","kind":"class","full_name":"DynFork::Errors::Model::InvalidGroupNumber","name":"InvalidGroupNumber","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},"ancestors":[{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},{"html_id":"dynfork/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"dynfork/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/errors/model.cr","line_number":33,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/model.cr#L33"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Errors/Model","kind":"module","full_name":"DynFork::Errors::Model","name":"Model"},"doc":"Invalid group number.","summary":"<p>Invalid group number.</p>","constructors":[{"html_id":"new(model_name:String,field_name:String)-class-method","name":"new","abstract":false,"args":[{"name":"model_name","external_name":"model_name","restriction":"String"},{"name":"field_name","external_name":"field_name","restriction":"String"}],"args_string":"(model_name : String, field_name : String)","args_html":"(model_name : String, field_name : String)","location":{"filename":"src/dynfork/errors/model.cr","line_number":34,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/model.cr#L34"},"def":{"name":"new","args":[{"name":"model_name","external_name":"model_name","restriction":"String"},{"name":"field_name","external_name":"field_name","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(model_name, field_name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}]},{"html_id":"dynfork/DynFork/Errors/Model/ModelNameExcessChars","path":"DynFork/Errors/Model/ModelNameExcessChars.html","kind":"class","full_name":"DynFork::Errors::Model::ModelNameExcessChars","name":"ModelNameExcessChars","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},"ancestors":[{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},{"html_id":"dynfork/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"dynfork/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/errors/model.cr","line_number":13,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/model.cr#L13"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Errors/Model","kind":"module","full_name":"DynFork::Errors::Model","name":"Model"},"doc":"The maximum number of characters in the model name has been exceeded.","summary":"<p>The maximum number of characters in the model name has been exceeded.</p>","constructors":[{"html_id":"new(model_name:String)-class-method","name":"new","abstract":false,"args":[{"name":"model_name","external_name":"model_name","restriction":"String"}],"args_string":"(model_name : String)","args_html":"(model_name : String)","location":{"filename":"src/dynfork/errors/model.cr","line_number":14,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/model.cr#L14"},"def":{"name":"new","args":[{"name":"model_name","external_name":"model_name","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(model_name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}]},{"html_id":"dynfork/DynFork/Errors/Model/ModelNameRegexFails","path":"DynFork/Errors/Model/ModelNameRegexFails.html","kind":"class","full_name":"DynFork::Errors::Model::ModelNameRegexFails","name":"ModelNameRegexFails","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},"ancestors":[{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},{"html_id":"dynfork/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"dynfork/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/errors/model.cr","line_number":20,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/model.cr#L20"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Errors/Model","kind":"module","full_name":"DynFork::Errors::Model","name":"Model"},"doc":"The Model name fails regular expression validation.","summary":"<p>The Model name fails regular expression validation.</p>","constructors":[{"html_id":"new(model_name:String,regex_str:String)-class-method","name":"new","abstract":false,"args":[{"name":"model_name","external_name":"model_name","restriction":"String"},{"name":"regex_str","external_name":"regex_str","restriction":"String"}],"args_string":"(model_name : String, regex_str : String)","args_html":"(model_name : String, regex_str : String)","location":{"filename":"src/dynfork/errors/model.cr","line_number":21,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/model.cr#L21"},"def":{"name":"new","args":[{"name":"model_name","external_name":"model_name","restriction":"String"},{"name":"regex_str","external_name":"regex_str","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(model_name, regex_str)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}]}]},{"html_id":"dynfork/DynFork/Errors/Panic","path":"DynFork/Errors/Panic.html","kind":"class","full_name":"DynFork::Errors::Panic","name":"Panic","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},"ancestors":[{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},{"html_id":"dynfork/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"dynfork/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/errors/root.cr","line_number":7,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/root.cr#L7"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Errors","kind":"module","full_name":"DynFork::Errors","name":"Errors"},"doc":"A type of global exception that should not be raised in production.","summary":"<p>A type of global exception that should not be raised in production.</p>","constructors":[{"html_id":"new(message:String)-class-method","name":"new","abstract":false,"args":[{"name":"message","external_name":"message","restriction":"String"}],"args_string":"(message : String)","args_html":"(message : String)","location":{"filename":"src/dynfork/errors/root.cr","line_number":8,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/root.cr#L8"},"def":{"name":"new","args":[{"name":"message","external_name":"message","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(message)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}]},{"html_id":"dynfork/DynFork/Errors/Password","path":"DynFork/Errors/Password.html","kind":"module","full_name":"DynFork::Errors::Password","name":"Password","abstract":false,"locations":[{"filename":"src/dynfork/errors/password.cr","line_number":4,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/password.cr#L4"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Errors","kind":"module","full_name":"DynFork::Errors","name":"Errors"},"doc":"Errors associated with the password.","summary":"<p>Errors associated with the password.</p>","types":[{"html_id":"dynfork/DynFork/Errors/Password/OldPassNotMatch","path":"DynFork/Errors/Password/OldPassNotMatch.html","kind":"class","full_name":"DynFork::Errors::Password::OldPassNotMatch","name":"OldPassNotMatch","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},"ancestors":[{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},{"html_id":"dynfork/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"dynfork/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/errors/password.cr","line_number":6,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/password.cr#L6"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Errors/Password","kind":"module","full_name":"DynFork::Errors::Password","name":"Password"},"doc":"Invalid type.","summary":"<p>Invalid type.</p>","constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/dynfork/errors/password.cr","line_number":7,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/password.cr#L7"},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}]}]},{"html_id":"dynfork/DynFork/Errors/Types","path":"DynFork/Errors/Types.html","kind":"module","full_name":"DynFork::Errors::Types","name":"Types","abstract":false,"locations":[{"filename":"src/dynfork/errors/types.cr","line_number":4,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/types.cr#L4"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Errors","kind":"module","full_name":"DynFork::Errors","name":"Errors"},"doc":"Errors associated with the data types.","summary":"<p>Errors associated with the data types.</p>","types":[{"html_id":"dynfork/DynFork/Errors/Types/InvalidType","path":"DynFork/Errors/Types/InvalidType.html","kind":"class","full_name":"DynFork::Errors::Types::InvalidType","name":"InvalidType","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},"ancestors":[{"html_id":"dynfork/DynFork/Errors/DynForkException","kind":"class","full_name":"DynFork::Errors::DynForkException","name":"DynForkException"},{"html_id":"dynfork/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"dynfork/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/errors/types.cr","line_number":6,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/types.cr#L6"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Errors/Types","kind":"module","full_name":"DynFork::Errors::Types","name":"Types"},"doc":"Invalid type.","summary":"<p>Invalid type.</p>","constructors":[{"html_id":"new(message:String)-class-method","name":"new","abstract":false,"args":[{"name":"message","external_name":"message","restriction":"String"}],"args_string":"(message : String)","args_html":"(message : String)","location":{"filename":"src/dynfork/errors/types.cr","line_number":7,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/errors/types.cr#L7"},"def":{"name":"new","args":[{"name":"message","external_name":"message","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(message)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}]}]}]},{"html_id":"dynfork/DynFork/Extra","path":"DynFork/Extra.html","kind":"struct","full_name":"DynFork::Extra","name":"Extra","abstract":true,"superclass":{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dynfork/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/extra.cr","line_number":10,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/extra.cr#L10"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"dynfork/DynFork/Model","kind":"struct","full_name":"DynFork::Model","name":"Model"}],"namespace":{"html_id":"dynfork/DynFork","kind":"module","full_name":"DynFork","name":"DynFork"},"doc":"Methods of additional abstraction.\n<br>\n<br>\n**Additional validation** - It is supposed to be use to additional validation of fields.\n<br>\n**Indexing** - For set up and start indexing.\n<br>\n**Hooks** - Methods that are called at different stages when accessing the database.","summary":"<p>Methods of additional abstraction.</p>","class_methods":[{"html_id":"indexing:Nil-class-method","name":"indexing","doc":"For set up and start indexing.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/indexing\" target=\"_blank\">example</a>.\nNOTE:For more details, please check the official <a href=\"https://docs.mongodb.com/manual/reference/command/createIndexes/\" target=\"_blank\">documentation</a>.\nWARNING: Runs automatically during Model migration.\n\nExample:\n```\n@[DynFork::Meta(service_name: \"Accounts\")]\nstruct User < DynFork::Model\n  getter username = DynFork::Fields::TextField.new(unique: true)\n  getter email = DynFork::Fields::EmailField.new(unique: true)\n\n  def self.indexing\n    self.create_index(\n      keys: {\n        \"username\": 1,\n      },\n      options: {\n        unique: true,\n        name:   \"usernameIdx\",\n      }\n    )\n  end\nend\n```\n","summary":"<p>For set up and start indexing.</p>","abstract":false,"location":{"filename":"src/dynfork/extra.cr","line_number":71,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/extra.cr#L71"},"def":{"name":"indexing","return_type":"Nil","visibility":"Public","body":""}}],"constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/dynfork/extra.cr","line_number":10,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/extra.cr#L10"},"def":{"name":"new","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"html_id":"add_validation:Hash(String,String)-instance-method","name":"add_validation","doc":"It is supposed to be use to additional validation of fields.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/additional_validation\" target=\"_blank\">example</a>.\nWARNING: The method is called automatically when checking or saving the Model.\n\nExample:\n```\n@[DynFork::Meta(service_name: \"Accounts\")]\nstruct User < DynFork::Model\n  getter username = DynFork::Fields::TextField.new\n  getter password = DynFork::Fields::PasswordField.new\n  getter confirm_password = DynFork::Fields::PasswordField.new(\n    \"ignored\": true\n  )\n\n  private def add_validation : Hash(String, String)\n    error_map = Hash(String, String).new\n    # Get clean data.\n    password : String? = @password.value?\n    confirm_password : String? = @confirm_password.value?\n    # Fields validation.\n    if password != confirm_password\n      error_map[\"confirm_password\"] = \"Password confirmation does not match.\"\n    end\n    error_map\n  end\nend\n```\n","summary":"<p>It is supposed to be use to additional validation of fields.</p>","abstract":false,"location":{"filename":"src/dynfork/extra.cr","line_number":39,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/extra.cr#L39"},"def":{"name":"add_validation","return_type":"Hash(String, String)","visibility":"Public","body":"error_map = Hash(String, String).new\nerror_map\n"}},{"html_id":"initialize-instance-method","name":"initialize","abstract":false,"location":{"filename":"src/dynfork/extra.cr","line_number":10,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/extra.cr#L10"},"def":{"name":"initialize","visibility":"Public","body":""}},{"html_id":"post_create:Nil-instance-method","name":"post_create","doc":"Called after a new document has been created in the database.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/hooks\" target=\"_blank\">example</a>.\nWARNING: The method is called automatically.","summary":"<p>Called after a new document has been created in the database.</p>","abstract":false,"location":{"filename":"src/dynfork/extra.cr","line_number":81,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/extra.cr#L81"},"def":{"name":"post_create","return_type":"Nil","visibility":"Public","body":""}},{"html_id":"post_delete:Nil-instance-method","name":"post_delete","doc":"Called after an existing document in the database has been deleted.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/hooks\" target=\"_blank\">example</a>.\nWARNING: The method is called automatically.","summary":"<p>Called after an existing document in the database has been deleted.</p>","abstract":false,"location":{"filename":"src/dynfork/extra.cr","line_number":101,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/extra.cr#L101"},"def":{"name":"post_delete","return_type":"Nil","visibility":"Public","body":""}},{"html_id":"post_update:Nil-instance-method","name":"post_update","doc":"Called after an existing document in the database is updated.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/hooks\" target=\"_blank\">example</a>.\nWARNING: The method is called automatically.","summary":"<p>Called after an existing document in the database is updated.</p>","abstract":false,"location":{"filename":"src/dynfork/extra.cr","line_number":91,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/extra.cr#L91"},"def":{"name":"post_update","return_type":"Nil","visibility":"Public","body":""}},{"html_id":"pre_create:Nil-instance-method","name":"pre_create","doc":"Called before a new document is created in the database.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/hooks\" target=\"_blank\">example</a>.\nWARNING: The method is called automatically.","summary":"<p>Called before a new document is created in the database.</p>","abstract":false,"location":{"filename":"src/dynfork/extra.cr","line_number":76,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/extra.cr#L76"},"def":{"name":"pre_create","return_type":"Nil","visibility":"Public","body":""}},{"html_id":"pre_delete:Nil-instance-method","name":"pre_delete","doc":"Called before deleting an existing document in the database.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/hooks\" target=\"_blank\">example</a>.\nWARNING: The method is called automatically.","summary":"<p>Called before deleting an existing document in the database.</p>","abstract":false,"location":{"filename":"src/dynfork/extra.cr","line_number":96,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/extra.cr#L96"},"def":{"name":"pre_delete","return_type":"Nil","visibility":"Public","body":""}},{"html_id":"pre_update:Nil-instance-method","name":"pre_update","doc":"Called before updating an existing document in the database.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/hooks\" target=\"_blank\">example</a>.\nWARNING: The method is called automatically.","summary":"<p>Called before updating an existing document in the database.</p>","abstract":false,"location":{"filename":"src/dynfork/extra.cr","line_number":86,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/extra.cr#L86"},"def":{"name":"pre_update","return_type":"Nil","visibility":"Public","body":""}}]},{"html_id":"dynfork/DynFork/Fields","path":"DynFork/Fields.html","kind":"module","full_name":"DynFork::Fields","name":"Fields","abstract":false,"locations":[{"filename":"src/dynfork/fields/bool.cr","line_number":3,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/bool.cr#L3"},{"filename":"src/dynfork/fields/choice_f64.cr","line_number":3,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L3"},{"filename":"src/dynfork/fields/choice_i64.cr","line_number":3,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L3"},{"filename":"src/dynfork/fields/choice_text.cr","line_number":3,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L3"},{"filename":"src/dynfork/fields/color.cr","line_number":3,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/color.cr#L3"},{"filename":"src/dynfork/fields/date.cr","line_number":3,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/date.cr#L3"},{"filename":"src/dynfork/fields/date_time.cr","line_number":3,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/date_time.cr#L3"},{"filename":"src/dynfork/fields/email.cr","line_number":3,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/email.cr#L3"},{"filename":"src/dynfork/fields/field.cr","line_number":1,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/field.cr#L1"},{"filename":"src/dynfork/fields/file.cr","line_number":3,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/file.cr#L3"},{"filename":"src/dynfork/fields/hash.cr","line_number":3,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/hash.cr#L3"},{"filename":"src/dynfork/fields/image.cr","line_number":3,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/image.cr#L3"},{"filename":"src/dynfork/fields/ip.cr","line_number":3,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/ip.cr#L3"},{"filename":"src/dynfork/fields/numbers.cr","line_number":3,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L3"},{"filename":"src/dynfork/fields/password.cr","line_number":3,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/password.cr#L3"},{"filename":"src/dynfork/fields/phone.cr","line_number":3,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/phone.cr#L3"},{"filename":"src/dynfork/fields/slug.cr","line_number":3,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/slug.cr#L3"},{"filename":"src/dynfork/fields/text.cr","line_number":3,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/text.cr#L3"},{"filename":"src/dynfork/fields/url.cr","line_number":3,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/url.cr#L3"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork","kind":"module","full_name":"DynFork","name":"DynFork"},"types":[{"html_id":"dynfork/DynFork/Fields/BoolField","path":"DynFork/Fields/BoolField.html","kind":"struct","full_name":"DynFork::Fields::BoolField","name":"BoolField","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},"ancestors":[{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},{"html_id":"dynfork/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dynfork/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/fields/bool.cr","line_number":5,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/bool.cr#L5"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Fields","kind":"module","full_name":"DynFork::Fields","name":"Fields"},"doc":"Boolean field.","summary":"<p>Boolean field.</p>","constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"Boolean field.","summary":"<p>Boolean field.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/dynfork/fields/bool.cr","line_number":5,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/bool.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}},{"html_id":"new(label:String=\"\",default:Bool|Nil=false,hide:Bool=false,disabled:Bool=false,ignored:Bool=false,hint:String=\"\")-class-method","name":"new","abstract":false,"args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"default","default_value":"false","external_name":"default","restriction":"Bool | ::Nil"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"}],"args_string":"(label : String = \"\", default : Bool | Nil = false, hide : Bool = false, disabled : Bool = false, ignored : Bool = false, hint : String = \"\")","args_html":"(label : String = <span class=\"s\">&quot;&quot;</span>, default : Bool | Nil = <span class=\"n\">false</span>, hide : Bool = <span class=\"n\">false</span>, disabled : Bool = <span class=\"n\">false</span>, ignored : Bool = <span class=\"n\">false</span>, hint : String = <span class=\"s\">&quot;&quot;</span>)","location":{"filename":"src/dynfork/fields/bool.cr","line_number":123,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/bool.cr#L123"},"def":{"name":"new","args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"default","default_value":"false","external_name":"default","restriction":"Bool | ::Nil"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(label, default, hide, disabled, ignored, hint)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"default:Bool|Nil-instance-method","name":"default","doc":"Value by default.","summary":"<p>Value by default.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/bool.cr","line_number":13,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/bool.cr#L13"},"def":{"name":"default","return_type":"Bool | ::Nil","visibility":"Public","body":"if (value = @default).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::BoolField#default cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"default?:Bool|Nil|Nil-instance-method","name":"default?","doc":"Value by default.","summary":"<p>Value by default.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/bool.cr","line_number":13,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/bool.cr#L13"},"def":{"name":"default?","return_type":"Bool | ::Nil | ::Nil","visibility":"Public","body":"@default"}},{"html_id":"extract_default_bool?:Bool|Nil-instance-method","name":"extract_default_bool?","doc":"For the `DynFork::QPaladins::Check#check` method.","summary":"<p>For the <code><a href=\"../../DynFork/QPaladins/Check.html#check%28collection_ptr%3APointer%28Mongo%3A%3ACollection%29%2Csave%3F%3ABool%3Dfalse%29%3ADynFork%3A%3AGlobals%3A%3AOutputData-instance-method\">DynFork::QPaladins::Check#check</a></code> method.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/bool.cr","line_number":145,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/bool.cr#L145"},"def":{"name":"extract_default_bool?","return_type":"Bool | ::Nil","visibility":"Public","body":"@default"}},{"html_id":"extract_val_bool?:Bool|Nil-instance-method","name":"extract_val_bool?","doc":"For the `DynFork::QPaladins::Check#check` method.","summary":"<p>For the <code><a href=\"../../DynFork/QPaladins/Check.html#check%28collection_ptr%3APointer%28Mongo%3A%3ACollection%29%2Csave%3F%3ABool%3Dfalse%29%3ADynFork%3A%3AGlobals%3A%3AOutputData-instance-method\">DynFork::QPaladins::Check#check</a></code> method.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/bool.cr","line_number":140,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/bool.cr#L140"},"def":{"name":"extract_val_bool?","return_type":"Bool | ::Nil","visibility":"Public","body":"@value"}},{"html_id":"field_type:String-instance-method","name":"field_type","doc":"Field type - Structure Name.","summary":"<p>Field type - Structure Name.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/bool.cr","line_number":7,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/bool.cr#L7"},"def":{"name":"field_type","return_type":"String","visibility":"Public","body":"@field_type"}},{"html_id":"group:UInt8-instance-method","name":"group","doc":"To optimize field traversal in the `paladins/check()` method.\nWARNING: It is recommended not to change.","summary":"<p>To optimize field traversal in the <code>paladins/check()</code> method.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/bool.cr","line_number":16,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/bool.cr#L16"},"def":{"name":"group","return_type":"UInt8","visibility":"Public","body":"@group"}},{"html_id":"input_type:String|Nil-instance-method","name":"input_type","doc":"Html tag: input type=\"checkbox\".","summary":"<p>Html tag: input type=&quot;checkbox&quot;.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/bool.cr","line_number":9,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/bool.cr#L9"},"def":{"name":"input_type","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @input_type).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::BoolField#input_type cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"input_type?:String|Nil|Nil-instance-method","name":"input_type?","doc":"Html tag: input type=\"checkbox\".","summary":"<p>Html tag: input type=&quot;checkbox&quot;.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/bool.cr","line_number":9,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/bool.cr#L9"},"def":{"name":"input_type?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@input_type"}},{"html_id":"refrash_val_bool(val:Bool)-instance-method","name":"refrash_val_bool","doc":"For the `DynFork::QPaladins::Tools#refrash_fields` method.","summary":"<p>For the <code><a href=\"../../DynFork/QPaladins/Tools.html#refrash_fields%28doc_ptr%3APointer%28BSON%7CNil%29%29%3ANil-instance-method\">DynFork::QPaladins::Tools#refrash_fields</a></code> method.</p>","abstract":false,"args":[{"name":"val","external_name":"val","restriction":"Bool"}],"args_string":"(val : Bool)","args_html":"(val : Bool)","location":{"filename":"src/dynfork/fields/bool.cr","line_number":135,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/bool.cr#L135"},"def":{"name":"refrash_val_bool","args":[{"name":"val","external_name":"val","restriction":"Bool"}],"visibility":"Public","body":"@value = val"}},{"html_id":"value:Bool|Nil-instance-method","name":"value","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value","return_type":"Bool | ::Nil","visibility":"Public","body":"if (value = @value).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::BoolField#value cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"value=(value:Bool|Nil)-instance-method","name":"value=","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Bool | ::Nil"}],"args_string":"(value : Bool | Nil)","args_html":"(value : Bool | Nil)","location":{"filename":"src/dynfork/fields/bool.cr","line_number":11,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/bool.cr#L11"},"def":{"name":"value=","args":[{"name":"value","external_name":"value","restriction":"Bool | ::Nil"}],"visibility":"Public","body":"@value = value"}},{"html_id":"value?:Bool|Nil|Nil-instance-method","name":"value?","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value?","return_type":"Bool | ::Nil | ::Nil","visibility":"Public","body":"@value"}}]},{"html_id":"dynfork/DynFork/Fields/ChoiceF64DynField","path":"DynFork/Fields/ChoiceF64DynField.html","kind":"struct","full_name":"DynFork::Fields::ChoiceF64DynField","name":"ChoiceF64DynField","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},"ancestors":[{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},{"html_id":"dynfork/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dynfork/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/fields/choice_f64.cr","line_number":308,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L308"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Fields","kind":"module","full_name":"DynFork::Fields","name":"Fields"},"doc":"Type of selective field with dynamic addition of elements.\nNOTE: For simulate relationship Many-to-One.\nNOTE: Elements are added via the `ModelName.update_dyn_field()` method.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/dynamic_choices\" target=\"_blank\">example</a>.","summary":"<p>Type of selective field with dynamic addition of elements.</p>","constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"Type of selective field with dynamic addition of elements.\nNOTE: For simulate relationship Many-to-One.\nNOTE: Elements are added via the `ModelName.update_dyn_field()` method.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/dynamic_choices\" target=\"_blank\">example</a>.","summary":"<p>Type of selective field with dynamic addition of elements.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":308,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L308"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}},{"html_id":"new(label:String=\"\",hide:Bool=false,required:Bool=false,disabled:Bool=false,readonly:Bool=false,ignored:Bool=false,hint:String=\"\")-class-method","name":"new","abstract":false,"args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"}],"args_string":"(label : String = \"\", hide : Bool = false, required : Bool = false, disabled : Bool = false, readonly : Bool = false, ignored : Bool = false, hint : String = \"\")","args_html":"(label : String = <span class=\"s\">&quot;&quot;</span>, hide : Bool = <span class=\"n\">false</span>, required : Bool = <span class=\"n\">false</span>, disabled : Bool = <span class=\"n\">false</span>, readonly : Bool = <span class=\"n\">false</span>, ignored : Bool = <span class=\"n\">false</span>, hint : String = <span class=\"s\">&quot;&quot;</span>)","location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":427,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L427"},"def":{"name":"new","args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(label, hide, required, disabled, readonly, ignored, hint)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"choices:Array(Tuple(Float64,String))|Nil-instance-method","name":"choices","doc":"Html tag: select.\n<br>\n_Example: [{5.0, \"Title\"}, {5.25, \"Title 2\"}]_","summary":"<p>Html tag: select.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":318,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L318"},"def":{"name":"choices","return_type":"Array(Tuple(Float64, String)) | ::Nil","visibility":"Public","body":"if (value = @choices).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::ChoiceF64DynField#choices cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"choices?:Array(Tuple(Float64,String))|Nil|Nil-instance-method","name":"choices?","doc":"Html tag: select.\n<br>\n_Example: [{5.0, \"Title\"}, {5.25, \"Title 2\"}]_","summary":"<p>Html tag: select.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":318,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L318"},"def":{"name":"choices?","return_type":"Array(Tuple(Float64, String)) | ::Nil | ::Nil","visibility":"Public","body":"@choices"}},{"html_id":"choices_from_json(json:String):Nil-instance-method","name":"choices_from_json","doc":"Add data for dynamic fields from the local `@@meta` cache.","summary":"<p>Add data for dynamic fields from the local <code>@@meta</code> cache.</p>","abstract":false,"args":[{"name":"json","external_name":"json","restriction":"String"}],"args_string":"(json : String) : Nil","args_html":"(json : String) : Nil","location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":438,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L438"},"def":{"name":"choices_from_json","args":[{"name":"json","external_name":"json","restriction":"String"}],"return_type":"Nil","visibility":"Public","body":"@choices = Array(Tuple(Float64, String)).from_json(json)"}},{"html_id":"field_type:String-instance-method","name":"field_type","doc":"Field type - Structure Name.","summary":"<p>Field type - Structure Name.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":310,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L310"},"def":{"name":"field_type","return_type":"String","visibility":"Public","body":"@field_type"}},{"html_id":"group:UInt8-instance-method","name":"group","doc":"To optimize field traversal in the `paladins/check()` method.\nWARNING: It is recommended not to change.","summary":"<p>To optimize field traversal in the <code>paladins/check()</code> method.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":321,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L321"},"def":{"name":"group","return_type":"UInt8","visibility":"Public","body":"@group"}},{"html_id":"has_value?:Bool-instance-method","name":"has_value?","doc":"Does the field value match the possible options in choices.","summary":"<p>Does the field value match the possible options in choices.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":448,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L448"},"def":{"name":"has_value?","return_type":"Bool","visibility":"Public","body":"if value = @value || @default\n  if @choices.nil?\n    msg = \"Field type: `#{@field_type}` => The `choices` parameter cannot be Nil.\"\n    raise(DynFork::Errors::Panic.new(msg))\n  end\n  value_list : Array(Float64) = self.choices.map do |item|\n    item[0]\n  end\n  if value_list.includes?(value)\n  else\n    return false\n  end\nend\ntrue\n"}},{"html_id":"multiple?:Bool-instance-method","name":"multiple?","doc":"Specifies that multiple options can be selected at once.","summary":"<p>Specifies that multiple options can be selected at once.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":314,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L314"},"def":{"name":"multiple?","return_type":"Bool","visibility":"Public","body":"@multiple"}},{"html_id":"refrash_val_f64(val:Float64):Nil-instance-method","name":"refrash_val_f64","doc":"For the `DynFork::QPaladins::Tools#refrash_fields` method.","summary":"<p>For the <code><a href=\"../../DynFork/QPaladins/Tools.html#refrash_fields%28doc_ptr%3APointer%28BSON%7CNil%29%29%3ANil-instance-method\">DynFork::QPaladins::Tools#refrash_fields</a></code> method.</p>","abstract":false,"args":[{"name":"val","external_name":"val","restriction":"Float64"}],"args_string":"(val : Float64) : Nil","args_html":"(val : Float64) : Nil","location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":443,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L443"},"def":{"name":"refrash_val_f64","args":[{"name":"val","external_name":"val","restriction":"Float64"}],"return_type":"Nil","visibility":"Public","body":"@value = val"}},{"html_id":"value:Float64|Nil-instance-method","name":"value","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value","return_type":"Float64 | ::Nil","visibility":"Public","body":"if (value = @value).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::ChoiceF64DynField#value cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"value=(value:Float64|Nil)-instance-method","name":"value=","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Float64 | ::Nil"}],"args_string":"(value : Float64 | Nil)","args_html":"(value : Float64 | Nil)","location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":312,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L312"},"def":{"name":"value=","args":[{"name":"value","external_name":"value","restriction":"Float64 | ::Nil"}],"visibility":"Public","body":"@value = value"}},{"html_id":"value?:Float64|Nil|Nil-instance-method","name":"value?","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value?","return_type":"Float64 | ::Nil | ::Nil","visibility":"Public","body":"@value"}}]},{"html_id":"dynfork/DynFork/Fields/ChoiceF64Field","path":"DynFork/Fields/ChoiceF64Field.html","kind":"struct","full_name":"DynFork::Fields::ChoiceF64Field","name":"ChoiceF64Field","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},"ancestors":[{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},{"html_id":"dynfork/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dynfork/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/fields/choice_f64.cr","line_number":7,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L7"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Fields","kind":"module","full_name":"DynFork::Fields","name":"Fields"},"doc":"Type of selective field with static of elements.\nNOTE: With a single choice.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/static_choices\" target=\"_blank\">example</a>.","summary":"<p>Type of selective field with static of elements.</p>","constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"Type of selective field with static of elements.\nNOTE: With a single choice.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/static_choices\" target=\"_blank\">example</a>.","summary":"<p>Type of selective field with static of elements.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":7,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L7"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}},{"html_id":"new(label:String=\"\",default:Float64|Nil=nil,hide:Bool=false,required:Bool=false,disabled:Bool=false,readonly:Bool=false,ignored:Bool=false,hint:String=\"\",choices:Array(Tuple(Float64,String))|Nil=Array(Tuple(Float64,String)).new)-class-method","name":"new","abstract":false,"args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"default","default_value":"nil","external_name":"default","restriction":"Float64 | ::Nil"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"},{"name":"choices","default_value":"Array(Tuple(Float64, String)).new","external_name":"choices","restriction":"Array(Tuple(Float64, String)) | ::Nil"}],"args_string":"(label : String = \"\", default : Float64 | Nil = nil, hide : Bool = false, required : Bool = false, disabled : Bool = false, readonly : Bool = false, ignored : Bool = false, hint : String = \"\", choices : Array(Tuple(Float64, String)) | Nil = Array(Tuple(Float64, String)).new)","args_html":"(label : String = <span class=\"s\">&quot;&quot;</span>, default : Float64 | Nil = <span class=\"n\">nil</span>, hide : Bool = <span class=\"n\">false</span>, required : Bool = <span class=\"n\">false</span>, disabled : Bool = <span class=\"n\">false</span>, readonly : Bool = <span class=\"n\">false</span>, ignored : Bool = <span class=\"n\">false</span>, hint : String = <span class=\"s\">&quot;&quot;</span>, choices : Array(Tuple(Float64, String)) | Nil = <span class=\"t\">Array</span>(<span class=\"t\">Tuple</span>(<span class=\"t\">Float64</span>, <span class=\"t\">String</span>)).new)","location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":126,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L126"},"def":{"name":"new","args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"default","default_value":"nil","external_name":"default","restriction":"Float64 | ::Nil"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"},{"name":"choices","default_value":"Array(Tuple(Float64, String)).new","external_name":"choices","restriction":"Array(Tuple(Float64, String)) | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(label, default, hide, required, disabled, readonly, ignored, hint, choices)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"choices:Array(Tuple(Float64,String))|Nil-instance-method","name":"choices","doc":"Html tag: select.\n<br>\n_Example: [{5.0, \"Title\"}, {5.25, \"Title 2\"}]_","summary":"<p>Html tag: select.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":19,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L19"},"def":{"name":"choices","return_type":"Array(Tuple(Float64, String)) | ::Nil","visibility":"Public","body":"if (value = @choices).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::ChoiceF64Field#choices cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"choices?:Array(Tuple(Float64,String))|Nil|Nil-instance-method","name":"choices?","doc":"Html tag: select.\n<br>\n_Example: [{5.0, \"Title\"}, {5.25, \"Title 2\"}]_","summary":"<p>Html tag: select.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":19,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L19"},"def":{"name":"choices?","return_type":"Array(Tuple(Float64, String)) | ::Nil | ::Nil","visibility":"Public","body":"@choices"}},{"html_id":"default:Float64|Nil-instance-method","name":"default","doc":"Value by default.","summary":"<p>Value by default.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":13,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L13"},"def":{"name":"default","return_type":"Float64 | ::Nil","visibility":"Public","body":"if (value = @default).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::ChoiceF64Field#default cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"default?:Float64|Nil|Nil-instance-method","name":"default?","doc":"Value by default.","summary":"<p>Value by default.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":13,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L13"},"def":{"name":"default?","return_type":"Float64 | ::Nil | ::Nil","visibility":"Public","body":"@default"}},{"html_id":"field_type:String-instance-method","name":"field_type","doc":"Field type - Structure Name.","summary":"<p>Field type - Structure Name.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":9,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L9"},"def":{"name":"field_type","return_type":"String","visibility":"Public","body":"@field_type"}},{"html_id":"group:UInt8-instance-method","name":"group","doc":"To optimize field traversal in the `paladins/check()` method.\nWARNING: It is recommended not to change.","summary":"<p>To optimize field traversal in the <code>paladins/check()</code> method.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":22,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L22"},"def":{"name":"group","return_type":"UInt8","visibility":"Public","body":"@group"}},{"html_id":"has_value?:Bool-instance-method","name":"has_value?","doc":"Does the field value match the possible options in choices.","summary":"<p>Does the field value match the possible options in choices.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":144,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L144"},"def":{"name":"has_value?","return_type":"Bool","visibility":"Public","body":"if value = @value || @default\n  value_list : Array(Float64) = self.choices.map do |item|\n    item[0]\n  end\n  if value_list.includes?(value)\n  else\n    return false\n  end\nend\ntrue\n"}},{"html_id":"multiple?:Bool-instance-method","name":"multiple?","doc":"Specifies that multiple options can be selected at once.","summary":"<p>Specifies that multiple options can be selected at once.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":15,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L15"},"def":{"name":"multiple?","return_type":"Bool","visibility":"Public","body":"@multiple"}},{"html_id":"refrash_val_f64(val:Float64):Nil-instance-method","name":"refrash_val_f64","doc":"For the `DynFork::QPaladins::Tools#refrash_fields` method.","summary":"<p>For the <code><a href=\"../../DynFork/QPaladins/Tools.html#refrash_fields%28doc_ptr%3APointer%28BSON%7CNil%29%29%3ANil-instance-method\">DynFork::QPaladins::Tools#refrash_fields</a></code> method.</p>","abstract":false,"args":[{"name":"val","external_name":"val","restriction":"Float64"}],"args_string":"(val : Float64) : Nil","args_html":"(val : Float64) : Nil","location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":139,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L139"},"def":{"name":"refrash_val_f64","args":[{"name":"val","external_name":"val","restriction":"Float64"}],"return_type":"Nil","visibility":"Public","body":"@value = val"}},{"html_id":"value:Float64|Nil-instance-method","name":"value","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value","return_type":"Float64 | ::Nil","visibility":"Public","body":"if (value = @value).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::ChoiceF64Field#value cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"value=(value:Float64|Nil)-instance-method","name":"value=","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Float64 | ::Nil"}],"args_string":"(value : Float64 | Nil)","args_html":"(value : Float64 | Nil)","location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":11,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L11"},"def":{"name":"value=","args":[{"name":"value","external_name":"value","restriction":"Float64 | ::Nil"}],"visibility":"Public","body":"@value = value"}},{"html_id":"value?:Float64|Nil|Nil-instance-method","name":"value?","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value?","return_type":"Float64 | ::Nil | ::Nil","visibility":"Public","body":"@value"}}]},{"html_id":"dynfork/DynFork/Fields/ChoiceF64MultDynField","path":"DynFork/Fields/ChoiceF64MultDynField.html","kind":"struct","full_name":"DynFork::Fields::ChoiceF64MultDynField","name":"ChoiceF64MultDynField","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},"ancestors":[{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},{"html_id":"dynfork/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dynfork/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/fields/choice_f64.cr","line_number":465,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L465"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Fields","kind":"module","full_name":"DynFork::Fields","name":"Fields"},"doc":"Type of selective field with dynamic addition of elements.\nNOTE: For simulate relationship Many-to-Many.\nNOTE: Elements are added via the `ModelName.update_dyn_field()` method.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/dynamic_choices\" target=\"_blank\">example</a>.","summary":"<p>Type of selective field with dynamic addition of elements.</p>","constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"Type of selective field with dynamic addition of elements.\nNOTE: For simulate relationship Many-to-Many.\nNOTE: Elements are added via the `ModelName.update_dyn_field()` method.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/dynamic_choices\" target=\"_blank\">example</a>.","summary":"<p>Type of selective field with dynamic addition of elements.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":465,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L465"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}},{"html_id":"new(label:String=\"\",hide:Bool=false,required:Bool=false,disabled:Bool=false,readonly:Bool=false,ignored:Bool=false,hint:String=\"\")-class-method","name":"new","abstract":false,"args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"}],"args_string":"(label : String = \"\", hide : Bool = false, required : Bool = false, disabled : Bool = false, readonly : Bool = false, ignored : Bool = false, hint : String = \"\")","args_html":"(label : String = <span class=\"s\">&quot;&quot;</span>, hide : Bool = <span class=\"n\">false</span>, required : Bool = <span class=\"n\">false</span>, disabled : Bool = <span class=\"n\">false</span>, readonly : Bool = <span class=\"n\">false</span>, ignored : Bool = <span class=\"n\">false</span>, hint : String = <span class=\"s\">&quot;&quot;</span>)","location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":584,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L584"},"def":{"name":"new","args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(label, hide, required, disabled, readonly, ignored, hint)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"choices:Array(Tuple(Float64,String))|Nil-instance-method","name":"choices","doc":"Html tag: select.\n<br>\n_Example: [{5.0, \"Title\"}, {5.25, \"Title 2\"}]_","summary":"<p>Html tag: select.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":475,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L475"},"def":{"name":"choices","return_type":"Array(Tuple(Float64, String)) | ::Nil","visibility":"Public","body":"if (value = @choices).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::ChoiceF64MultDynField#choices cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"choices?:Array(Tuple(Float64,String))|Nil|Nil-instance-method","name":"choices?","doc":"Html tag: select.\n<br>\n_Example: [{5.0, \"Title\"}, {5.25, \"Title 2\"}]_","summary":"<p>Html tag: select.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":475,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L475"},"def":{"name":"choices?","return_type":"Array(Tuple(Float64, String)) | ::Nil | ::Nil","visibility":"Public","body":"@choices"}},{"html_id":"choices_from_json(json:String):Nil-instance-method","name":"choices_from_json","doc":"Add data for dynamic fields from the local `@@meta` cache.","summary":"<p>Add data for dynamic fields from the local <code>@@meta</code> cache.</p>","abstract":false,"args":[{"name":"json","external_name":"json","restriction":"String"}],"args_string":"(json : String) : Nil","args_html":"(json : String) : Nil","location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":595,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L595"},"def":{"name":"choices_from_json","args":[{"name":"json","external_name":"json","restriction":"String"}],"return_type":"Nil","visibility":"Public","body":"@choices = Array(Tuple(Float64, String)).from_json(json)"}},{"html_id":"field_type:String-instance-method","name":"field_type","doc":"Field type - Structure Name.","summary":"<p>Field type - Structure Name.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":467,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L467"},"def":{"name":"field_type","return_type":"String","visibility":"Public","body":"@field_type"}},{"html_id":"group:UInt8-instance-method","name":"group","doc":"To optimize field traversal in the `paladins/check()` method.\nWARNING: It is recommended not to change.","summary":"<p>To optimize field traversal in the <code>paladins/check()</code> method.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":478,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L478"},"def":{"name":"group","return_type":"UInt8","visibility":"Public","body":"@group"}},{"html_id":"has_value?:Bool-instance-method","name":"has_value?","doc":"Does the field value match the possible options in choices.","summary":"<p>Does the field value match the possible options in choices.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":605,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L605"},"def":{"name":"has_value?","return_type":"Bool","visibility":"Public","body":"if value = @value || @default\n  if @choices.nil?\n    msg = \"Field type: `#{@field_type}` => The `choices` parameter cannot be Nil.\"\n    raise(DynFork::Errors::Panic.new(msg))\n  end\n  value_list : Array(Float64) = self.choices.map do |item|\n    item[0]\n  end\n  value.each do |elem|\n    if value_list.includes?(elem)\n    else\n      return false\n    end\n  end\nend\ntrue\n"}},{"html_id":"multiple?:Bool-instance-method","name":"multiple?","doc":"Specifies that multiple options can be selected at once.","summary":"<p>Specifies that multiple options can be selected at once.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":471,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L471"},"def":{"name":"multiple?","return_type":"Bool","visibility":"Public","body":"@multiple"}},{"html_id":"refrash_val_arr_f64(val:Array(Float64)):Nil-instance-method","name":"refrash_val_arr_f64","doc":"For the `DynFork::QPaladins::Tools#refrash_fields` method.","summary":"<p>For the <code><a href=\"../../DynFork/QPaladins/Tools.html#refrash_fields%28doc_ptr%3APointer%28BSON%7CNil%29%29%3ANil-instance-method\">DynFork::QPaladins::Tools#refrash_fields</a></code> method.</p>","abstract":false,"args":[{"name":"val","external_name":"val","restriction":"Array(Float64)"}],"args_string":"(val : Array(Float64)) : Nil","args_html":"(val : Array(Float64)) : Nil","location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":600,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L600"},"def":{"name":"refrash_val_arr_f64","args":[{"name":"val","external_name":"val","restriction":"Array(Float64)"}],"return_type":"Nil","visibility":"Public","body":"@value = val"}},{"html_id":"value:Array(Float64)|Nil-instance-method","name":"value","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value","return_type":"Array(Float64) | ::Nil","visibility":"Public","body":"if (value = @value).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::ChoiceF64MultDynField#value cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"value=(value:Array(Float64)|Nil)-instance-method","name":"value=","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Array(Float64) | ::Nil"}],"args_string":"(value : Array(Float64) | Nil)","args_html":"(value : Array(Float64) | Nil)","location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":469,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L469"},"def":{"name":"value=","args":[{"name":"value","external_name":"value","restriction":"Array(Float64) | ::Nil"}],"visibility":"Public","body":"@value = value"}},{"html_id":"value?:Array(Float64)|Nil|Nil-instance-method","name":"value?","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value?","return_type":"Array(Float64) | ::Nil | ::Nil","visibility":"Public","body":"@value"}}]},{"html_id":"dynfork/DynFork/Fields/ChoiceF64MultField","path":"DynFork/Fields/ChoiceF64MultField.html","kind":"struct","full_name":"DynFork::Fields::ChoiceF64MultField","name":"ChoiceF64MultField","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},"ancestors":[{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},{"html_id":"dynfork/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dynfork/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/fields/choice_f64.cr","line_number":156,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L156"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Fields","kind":"module","full_name":"DynFork::Fields","name":"Fields"},"doc":"Type of selective field with static of elements.\nNOTE: With multiple choice.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/static_choices\" target=\"_blank\">example</a>.","summary":"<p>Type of selective field with static of elements.</p>","constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"Type of selective field with static of elements.\nNOTE: With multiple choice.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/static_choices\" target=\"_blank\">example</a>.","summary":"<p>Type of selective field with static of elements.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":156,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L156"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}},{"html_id":"new(label:String=\"\",default:Array(Float64)|Nil=nil,hide:Bool=false,required:Bool=false,disabled:Bool=false,readonly:Bool=false,ignored:Bool=false,hint:String=\"\",choices:Array(Tuple(Float64,String))|Nil=Array(Tuple(Float64,String)).new)-class-method","name":"new","abstract":false,"args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"default","default_value":"nil","external_name":"default","restriction":"Array(Float64) | ::Nil"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"},{"name":"choices","default_value":"Array(Tuple(Float64, String)).new","external_name":"choices","restriction":"Array(Tuple(Float64, String)) | ::Nil"}],"args_string":"(label : String = \"\", default : Array(Float64) | Nil = nil, hide : Bool = false, required : Bool = false, disabled : Bool = false, readonly : Bool = false, ignored : Bool = false, hint : String = \"\", choices : Array(Tuple(Float64, String)) | Nil = Array(Tuple(Float64, String)).new)","args_html":"(label : String = <span class=\"s\">&quot;&quot;</span>, default : Array(Float64) | Nil = <span class=\"n\">nil</span>, hide : Bool = <span class=\"n\">false</span>, required : Bool = <span class=\"n\">false</span>, disabled : Bool = <span class=\"n\">false</span>, readonly : Bool = <span class=\"n\">false</span>, ignored : Bool = <span class=\"n\">false</span>, hint : String = <span class=\"s\">&quot;&quot;</span>, choices : Array(Tuple(Float64, String)) | Nil = <span class=\"t\">Array</span>(<span class=\"t\">Tuple</span>(<span class=\"t\">Float64</span>, <span class=\"t\">String</span>)).new)","location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":275,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L275"},"def":{"name":"new","args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"default","default_value":"nil","external_name":"default","restriction":"Array(Float64) | ::Nil"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"},{"name":"choices","default_value":"Array(Tuple(Float64, String)).new","external_name":"choices","restriction":"Array(Tuple(Float64, String)) | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(label, default, hide, required, disabled, readonly, ignored, hint, choices)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"choices:Array(Tuple(Float64,String))|Nil-instance-method","name":"choices","doc":"Html tag: select multiple.\n<br>\n_Example: [{5.0, \"Title\"}, {5.25, \"Title 2\"}]_","summary":"<p>Html tag: select multiple.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":168,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L168"},"def":{"name":"choices","return_type":"Array(Tuple(Float64, String)) | ::Nil","visibility":"Public","body":"if (value = @choices).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::ChoiceF64MultField#choices cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"choices?:Array(Tuple(Float64,String))|Nil|Nil-instance-method","name":"choices?","doc":"Html tag: select multiple.\n<br>\n_Example: [{5.0, \"Title\"}, {5.25, \"Title 2\"}]_","summary":"<p>Html tag: select multiple.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":168,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L168"},"def":{"name":"choices?","return_type":"Array(Tuple(Float64, String)) | ::Nil | ::Nil","visibility":"Public","body":"@choices"}},{"html_id":"default:Array(Float64)|Nil-instance-method","name":"default","doc":"Value by default.","summary":"<p>Value by default.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":162,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L162"},"def":{"name":"default","return_type":"Array(Float64) | ::Nil","visibility":"Public","body":"if (value = @default).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::ChoiceF64MultField#default cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"default?:Array(Float64)|Nil|Nil-instance-method","name":"default?","doc":"Value by default.","summary":"<p>Value by default.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":162,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L162"},"def":{"name":"default?","return_type":"Array(Float64) | ::Nil | ::Nil","visibility":"Public","body":"@default"}},{"html_id":"field_type:String-instance-method","name":"field_type","doc":"Field type - Structure Name.","summary":"<p>Field type - Structure Name.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":158,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L158"},"def":{"name":"field_type","return_type":"String","visibility":"Public","body":"@field_type"}},{"html_id":"group:UInt8-instance-method","name":"group","doc":"To optimize field traversal in the `paladins/check()` method.\nWARNING: It is recommended not to change.","summary":"<p>To optimize field traversal in the <code>paladins/check()</code> method.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":171,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L171"},"def":{"name":"group","return_type":"UInt8","visibility":"Public","body":"@group"}},{"html_id":"has_value?:Bool-instance-method","name":"has_value?","doc":"Does the field value match the possible options in choices.","summary":"<p>Does the field value match the possible options in choices.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":293,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L293"},"def":{"name":"has_value?","return_type":"Bool","visibility":"Public","body":"if value = @value || @default\n  value_list : Array(Float64) = self.choices.map do |item|\n    item[0]\n  end\n  value.each do |elem|\n    if value_list.includes?(elem)\n    else\n      return false\n    end\n  end\nend\ntrue\n"}},{"html_id":"multiple?:Bool-instance-method","name":"multiple?","doc":"Specifies that multiple options can be selected at once.","summary":"<p>Specifies that multiple options can be selected at once.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":164,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L164"},"def":{"name":"multiple?","return_type":"Bool","visibility":"Public","body":"@multiple"}},{"html_id":"refrash_val_arr_f64(val:Array(Float64)):Nil-instance-method","name":"refrash_val_arr_f64","doc":"For the `DynFork::QPaladins::Tools#refrash_fields` method.","summary":"<p>For the <code><a href=\"../../DynFork/QPaladins/Tools.html#refrash_fields%28doc_ptr%3APointer%28BSON%7CNil%29%29%3ANil-instance-method\">DynFork::QPaladins::Tools#refrash_fields</a></code> method.</p>","abstract":false,"args":[{"name":"val","external_name":"val","restriction":"Array(Float64)"}],"args_string":"(val : Array(Float64)) : Nil","args_html":"(val : Array(Float64)) : Nil","location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":288,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L288"},"def":{"name":"refrash_val_arr_f64","args":[{"name":"val","external_name":"val","restriction":"Array(Float64)"}],"return_type":"Nil","visibility":"Public","body":"@value = val"}},{"html_id":"value:Array(Float64)|Nil-instance-method","name":"value","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value","return_type":"Array(Float64) | ::Nil","visibility":"Public","body":"if (value = @value).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::ChoiceF64MultField#value cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"value=(value:Array(Float64)|Nil)-instance-method","name":"value=","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Array(Float64) | ::Nil"}],"args_string":"(value : Array(Float64) | Nil)","args_html":"(value : Array(Float64) | Nil)","location":{"filename":"src/dynfork/fields/choice_f64.cr","line_number":160,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_f64.cr#L160"},"def":{"name":"value=","args":[{"name":"value","external_name":"value","restriction":"Array(Float64) | ::Nil"}],"visibility":"Public","body":"@value = value"}},{"html_id":"value?:Array(Float64)|Nil|Nil-instance-method","name":"value?","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value?","return_type":"Array(Float64) | ::Nil | ::Nil","visibility":"Public","body":"@value"}}]},{"html_id":"dynfork/DynFork/Fields/ChoiceI64DynField","path":"DynFork/Fields/ChoiceI64DynField.html","kind":"struct","full_name":"DynFork::Fields::ChoiceI64DynField","name":"ChoiceI64DynField","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},"ancestors":[{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},{"html_id":"dynfork/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dynfork/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/fields/choice_i64.cr","line_number":308,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L308"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Fields","kind":"module","full_name":"DynFork::Fields","name":"Fields"},"doc":"Type of selective field with dynamic addition of elements.\nNOTE: For simulate relationship Many-to-One.\nNOTE: Elements are added via the `ModelName.update_dyn_field()` method.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/dynamic_choices\" target=\"_blank\">example</a>.","summary":"<p>Type of selective field with dynamic addition of elements.</p>","constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"Type of selective field with dynamic addition of elements.\nNOTE: For simulate relationship Many-to-One.\nNOTE: Elements are added via the `ModelName.update_dyn_field()` method.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/dynamic_choices\" target=\"_blank\">example</a>.","summary":"<p>Type of selective field with dynamic addition of elements.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":308,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L308"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}},{"html_id":"new(label:String=\"\",hide:Bool=false,required:Bool=false,disabled:Bool=false,readonly:Bool=false,ignored:Bool=false,hint:String=\"\")-class-method","name":"new","abstract":false,"args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"}],"args_string":"(label : String = \"\", hide : Bool = false, required : Bool = false, disabled : Bool = false, readonly : Bool = false, ignored : Bool = false, hint : String = \"\")","args_html":"(label : String = <span class=\"s\">&quot;&quot;</span>, hide : Bool = <span class=\"n\">false</span>, required : Bool = <span class=\"n\">false</span>, disabled : Bool = <span class=\"n\">false</span>, readonly : Bool = <span class=\"n\">false</span>, ignored : Bool = <span class=\"n\">false</span>, hint : String = <span class=\"s\">&quot;&quot;</span>)","location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":427,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L427"},"def":{"name":"new","args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(label, hide, required, disabled, readonly, ignored, hint)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"choices:Array(Tuple(Int64,String))|Nil-instance-method","name":"choices","doc":"Html tag: select.\n<br>\n_Example: [{5, \"Title\"}, {10, \"Title 2\"}]_","summary":"<p>Html tag: select.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":318,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L318"},"def":{"name":"choices","return_type":"Array(Tuple(Int64, String)) | ::Nil","visibility":"Public","body":"if (value = @choices).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::ChoiceI64DynField#choices cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"choices?:Array(Tuple(Int64,String))|Nil|Nil-instance-method","name":"choices?","doc":"Html tag: select.\n<br>\n_Example: [{5, \"Title\"}, {10, \"Title 2\"}]_","summary":"<p>Html tag: select.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":318,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L318"},"def":{"name":"choices?","return_type":"Array(Tuple(Int64, String)) | ::Nil | ::Nil","visibility":"Public","body":"@choices"}},{"html_id":"choices_from_json(json:String):Nil-instance-method","name":"choices_from_json","doc":"Add data for dynamic fields from the local `@@meta` cache.","summary":"<p>Add data for dynamic fields from the local <code>@@meta</code> cache.</p>","abstract":false,"args":[{"name":"json","external_name":"json","restriction":"String"}],"args_string":"(json : String) : Nil","args_html":"(json : String) : Nil","location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":438,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L438"},"def":{"name":"choices_from_json","args":[{"name":"json","external_name":"json","restriction":"String"}],"return_type":"Nil","visibility":"Public","body":"@choices = Array(Tuple(Int64, String)).from_json(json)"}},{"html_id":"field_type:String-instance-method","name":"field_type","doc":"Field type - Structure Name.","summary":"<p>Field type - Structure Name.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":310,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L310"},"def":{"name":"field_type","return_type":"String","visibility":"Public","body":"@field_type"}},{"html_id":"group:UInt8-instance-method","name":"group","doc":"To optimize field traversal in the `paladins/check()` method.\nWARNING: It is recommended not to change.","summary":"<p>To optimize field traversal in the <code>paladins/check()</code> method.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":321,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L321"},"def":{"name":"group","return_type":"UInt8","visibility":"Public","body":"@group"}},{"html_id":"has_value?:Bool-instance-method","name":"has_value?","doc":"Does the field value match the possible options in choices.","summary":"<p>Does the field value match the possible options in choices.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":448,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L448"},"def":{"name":"has_value?","return_type":"Bool","visibility":"Public","body":"if value = @value || @default\n  if @choices.nil?\n    msg = \"Field type: `#{@field_type}` => The `choices` parameter cannot be Nil.\"\n    raise(DynFork::Errors::Panic.new(msg))\n  end\n  value_list : Array(Int64) = self.choices.map do |item|\n    item[0]\n  end\n  if value_list.includes?(value)\n  else\n    return false\n  end\nend\ntrue\n"}},{"html_id":"multiple?:Bool-instance-method","name":"multiple?","doc":"Specifies that multiple options can be selected at once.","summary":"<p>Specifies that multiple options can be selected at once.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":314,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L314"},"def":{"name":"multiple?","return_type":"Bool","visibility":"Public","body":"@multiple"}},{"html_id":"refrash_val_i64(val:Int64):Nil-instance-method","name":"refrash_val_i64","doc":"For the `DynFork::QPaladins::Tools#refrash_fields` method.","summary":"<p>For the <code><a href=\"../../DynFork/QPaladins/Tools.html#refrash_fields%28doc_ptr%3APointer%28BSON%7CNil%29%29%3ANil-instance-method\">DynFork::QPaladins::Tools#refrash_fields</a></code> method.</p>","abstract":false,"args":[{"name":"val","external_name":"val","restriction":"Int64"}],"args_string":"(val : Int64) : Nil","args_html":"(val : Int64) : Nil","location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":443,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L443"},"def":{"name":"refrash_val_i64","args":[{"name":"val","external_name":"val","restriction":"Int64"}],"return_type":"Nil","visibility":"Public","body":"@value = val"}},{"html_id":"value:Int64|Nil-instance-method","name":"value","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value","return_type":"Int64 | ::Nil","visibility":"Public","body":"if (value = @value).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::ChoiceI64DynField#value cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"value=(value:Int64|Nil)-instance-method","name":"value=","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Int64 | ::Nil"}],"args_string":"(value : Int64 | Nil)","args_html":"(value : Int64 | Nil)","location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":312,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L312"},"def":{"name":"value=","args":[{"name":"value","external_name":"value","restriction":"Int64 | ::Nil"}],"visibility":"Public","body":"@value = value"}},{"html_id":"value?:Int64|Nil|Nil-instance-method","name":"value?","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value?","return_type":"Int64 | ::Nil | ::Nil","visibility":"Public","body":"@value"}}]},{"html_id":"dynfork/DynFork/Fields/ChoiceI64Field","path":"DynFork/Fields/ChoiceI64Field.html","kind":"struct","full_name":"DynFork::Fields::ChoiceI64Field","name":"ChoiceI64Field","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},"ancestors":[{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},{"html_id":"dynfork/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dynfork/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/fields/choice_i64.cr","line_number":7,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L7"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Fields","kind":"module","full_name":"DynFork::Fields","name":"Fields"},"doc":"Type of selective field with static of elements.\nNOTE: With a single choice.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/static_choices\" target=\"_blank\">example</a>.","summary":"<p>Type of selective field with static of elements.</p>","constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"Type of selective field with static of elements.\nNOTE: With a single choice.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/static_choices\" target=\"_blank\">example</a>.","summary":"<p>Type of selective field with static of elements.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":7,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L7"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}},{"html_id":"new(label:String=\"\",default:Int64|Nil=nil,hide:Bool=false,required:Bool=false,disabled:Bool=false,readonly:Bool=false,ignored:Bool=false,hint:String=\"\",choices:Array(Tuple(Int64,String))|Nil=Array(Tuple(Int64,String)).new)-class-method","name":"new","abstract":false,"args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"default","default_value":"nil","external_name":"default","restriction":"Int64 | ::Nil"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"},{"name":"choices","default_value":"Array(Tuple(Int64, String)).new","external_name":"choices","restriction":"Array(Tuple(Int64, String)) | ::Nil"}],"args_string":"(label : String = \"\", default : Int64 | Nil = nil, hide : Bool = false, required : Bool = false, disabled : Bool = false, readonly : Bool = false, ignored : Bool = false, hint : String = \"\", choices : Array(Tuple(Int64, String)) | Nil = Array(Tuple(Int64, String)).new)","args_html":"(label : String = <span class=\"s\">&quot;&quot;</span>, default : Int64 | Nil = <span class=\"n\">nil</span>, hide : Bool = <span class=\"n\">false</span>, required : Bool = <span class=\"n\">false</span>, disabled : Bool = <span class=\"n\">false</span>, readonly : Bool = <span class=\"n\">false</span>, ignored : Bool = <span class=\"n\">false</span>, hint : String = <span class=\"s\">&quot;&quot;</span>, choices : Array(Tuple(Int64, String)) | Nil = <span class=\"t\">Array</span>(<span class=\"t\">Tuple</span>(<span class=\"t\">Int64</span>, <span class=\"t\">String</span>)).new)","location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":126,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L126"},"def":{"name":"new","args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"default","default_value":"nil","external_name":"default","restriction":"Int64 | ::Nil"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"},{"name":"choices","default_value":"Array(Tuple(Int64, String)).new","external_name":"choices","restriction":"Array(Tuple(Int64, String)) | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(label, default, hide, required, disabled, readonly, ignored, hint, choices)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"choices:Array(Tuple(Int64,String))|Nil-instance-method","name":"choices","doc":"Html tag: select.\n<br>\n_Example: [{5, \"Title\"}, {10, \"Title 2\"}]_","summary":"<p>Html tag: select.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":19,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L19"},"def":{"name":"choices","return_type":"Array(Tuple(Int64, String)) | ::Nil","visibility":"Public","body":"if (value = @choices).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::ChoiceI64Field#choices cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"choices?:Array(Tuple(Int64,String))|Nil|Nil-instance-method","name":"choices?","doc":"Html tag: select.\n<br>\n_Example: [{5, \"Title\"}, {10, \"Title 2\"}]_","summary":"<p>Html tag: select.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":19,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L19"},"def":{"name":"choices?","return_type":"Array(Tuple(Int64, String)) | ::Nil | ::Nil","visibility":"Public","body":"@choices"}},{"html_id":"default:Int64|Nil-instance-method","name":"default","doc":"Value by default.","summary":"<p>Value by default.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":13,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L13"},"def":{"name":"default","return_type":"Int64 | ::Nil","visibility":"Public","body":"if (value = @default).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::ChoiceI64Field#default cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"default?:Int64|Nil|Nil-instance-method","name":"default?","doc":"Value by default.","summary":"<p>Value by default.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":13,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L13"},"def":{"name":"default?","return_type":"Int64 | ::Nil | ::Nil","visibility":"Public","body":"@default"}},{"html_id":"field_type:String-instance-method","name":"field_type","doc":"Field type - Structure Name.","summary":"<p>Field type - Structure Name.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":9,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L9"},"def":{"name":"field_type","return_type":"String","visibility":"Public","body":"@field_type"}},{"html_id":"group:UInt8-instance-method","name":"group","doc":"To optimize field traversal in the `paladins/check()` method.\nWARNING: It is recommended not to change.","summary":"<p>To optimize field traversal in the <code>paladins/check()</code> method.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":22,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L22"},"def":{"name":"group","return_type":"UInt8","visibility":"Public","body":"@group"}},{"html_id":"has_value?:Bool-instance-method","name":"has_value?","doc":"Does the field value match the possible options in choices.","summary":"<p>Does the field value match the possible options in choices.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":144,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L144"},"def":{"name":"has_value?","return_type":"Bool","visibility":"Public","body":"if value = @value || @default\n  value_list : Array(Int64) = self.choices.map do |item|\n    item[0]\n  end\n  if value_list.includes?(value)\n  else\n    return false\n  end\nend\ntrue\n"}},{"html_id":"multiple?:Bool-instance-method","name":"multiple?","doc":"Specifies that multiple options can be selected at once.","summary":"<p>Specifies that multiple options can be selected at once.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":15,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L15"},"def":{"name":"multiple?","return_type":"Bool","visibility":"Public","body":"@multiple"}},{"html_id":"refrash_val_i64(val:Int64):Nil-instance-method","name":"refrash_val_i64","doc":"For the `DynFork::QPaladins::Tools#refrash_fields` method.","summary":"<p>For the <code><a href=\"../../DynFork/QPaladins/Tools.html#refrash_fields%28doc_ptr%3APointer%28BSON%7CNil%29%29%3ANil-instance-method\">DynFork::QPaladins::Tools#refrash_fields</a></code> method.</p>","abstract":false,"args":[{"name":"val","external_name":"val","restriction":"Int64"}],"args_string":"(val : Int64) : Nil","args_html":"(val : Int64) : Nil","location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":139,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L139"},"def":{"name":"refrash_val_i64","args":[{"name":"val","external_name":"val","restriction":"Int64"}],"return_type":"Nil","visibility":"Public","body":"@value = val"}},{"html_id":"value:Int64|Nil-instance-method","name":"value","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value","return_type":"Int64 | ::Nil","visibility":"Public","body":"if (value = @value).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::ChoiceI64Field#value cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"value=(value:Int64|Nil)-instance-method","name":"value=","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Int64 | ::Nil"}],"args_string":"(value : Int64 | Nil)","args_html":"(value : Int64 | Nil)","location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":11,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L11"},"def":{"name":"value=","args":[{"name":"value","external_name":"value","restriction":"Int64 | ::Nil"}],"visibility":"Public","body":"@value = value"}},{"html_id":"value?:Int64|Nil|Nil-instance-method","name":"value?","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value?","return_type":"Int64 | ::Nil | ::Nil","visibility":"Public","body":"@value"}}]},{"html_id":"dynfork/DynFork/Fields/ChoiceI64MultDynField","path":"DynFork/Fields/ChoiceI64MultDynField.html","kind":"struct","full_name":"DynFork::Fields::ChoiceI64MultDynField","name":"ChoiceI64MultDynField","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},"ancestors":[{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},{"html_id":"dynfork/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dynfork/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/fields/choice_i64.cr","line_number":465,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L465"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Fields","kind":"module","full_name":"DynFork::Fields","name":"Fields"},"doc":"Type of selective field with dynamic addition of elements.\nNOTE: For simulate relationship Many-to-Many.\nNOTE: Elements are added via the `ModelName.update_dyn_field()` method.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/dynamic_choices\" target=\"_blank\">example</a>.","summary":"<p>Type of selective field with dynamic addition of elements.</p>","constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"Type of selective field with dynamic addition of elements.\nNOTE: For simulate relationship Many-to-Many.\nNOTE: Elements are added via the `ModelName.update_dyn_field()` method.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/dynamic_choices\" target=\"_blank\">example</a>.","summary":"<p>Type of selective field with dynamic addition of elements.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":465,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L465"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}},{"html_id":"new(label:String=\"\",hide:Bool=false,required:Bool=false,disabled:Bool=false,readonly:Bool=false,ignored:Bool=false,hint:String=\"\")-class-method","name":"new","abstract":false,"args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"}],"args_string":"(label : String = \"\", hide : Bool = false, required : Bool = false, disabled : Bool = false, readonly : Bool = false, ignored : Bool = false, hint : String = \"\")","args_html":"(label : String = <span class=\"s\">&quot;&quot;</span>, hide : Bool = <span class=\"n\">false</span>, required : Bool = <span class=\"n\">false</span>, disabled : Bool = <span class=\"n\">false</span>, readonly : Bool = <span class=\"n\">false</span>, ignored : Bool = <span class=\"n\">false</span>, hint : String = <span class=\"s\">&quot;&quot;</span>)","location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":584,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L584"},"def":{"name":"new","args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(label, hide, required, disabled, readonly, ignored, hint)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"choices:Array(Tuple(Int64,String))|Nil-instance-method","name":"choices","doc":"Html tag: select.\n<br>\n_Example: [{5, \"Title\"}, {10, \"Title 2\"}]_","summary":"<p>Html tag: select.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":475,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L475"},"def":{"name":"choices","return_type":"Array(Tuple(Int64, String)) | ::Nil","visibility":"Public","body":"if (value = @choices).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::ChoiceI64MultDynField#choices cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"choices?:Array(Tuple(Int64,String))|Nil|Nil-instance-method","name":"choices?","doc":"Html tag: select.\n<br>\n_Example: [{5, \"Title\"}, {10, \"Title 2\"}]_","summary":"<p>Html tag: select.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":475,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L475"},"def":{"name":"choices?","return_type":"Array(Tuple(Int64, String)) | ::Nil | ::Nil","visibility":"Public","body":"@choices"}},{"html_id":"choices_from_json(json:String):Nil-instance-method","name":"choices_from_json","doc":"Add data for dynamic fields from the local `@@meta` cache.","summary":"<p>Add data for dynamic fields from the local <code>@@meta</code> cache.</p>","abstract":false,"args":[{"name":"json","external_name":"json","restriction":"String"}],"args_string":"(json : String) : Nil","args_html":"(json : String) : Nil","location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":600,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L600"},"def":{"name":"choices_from_json","args":[{"name":"json","external_name":"json","restriction":"String"}],"return_type":"Nil","visibility":"Public","body":"@choices = Array(Tuple(Int64, String)).from_json(json)"}},{"html_id":"field_type:String-instance-method","name":"field_type","doc":"Field type - Structure Name.","summary":"<p>Field type - Structure Name.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":467,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L467"},"def":{"name":"field_type","return_type":"String","visibility":"Public","body":"@field_type"}},{"html_id":"group:UInt8-instance-method","name":"group","doc":"To optimize field traversal in the `paladins/check()` method.\nWARNING: It is recommended not to change.","summary":"<p>To optimize field traversal in the <code>paladins/check()</code> method.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":478,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L478"},"def":{"name":"group","return_type":"UInt8","visibility":"Public","body":"@group"}},{"html_id":"has_value?:Bool-instance-method","name":"has_value?","doc":"Does the field value match the possible options in choices.","summary":"<p>Does the field value match the possible options in choices.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":605,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L605"},"def":{"name":"has_value?","return_type":"Bool","visibility":"Public","body":"if value = @value || @default\n  if @choices.nil?\n    msg = \"Field type: `#{@field_type}` => The `choices` parameter cannot be Nil.\"\n    raise(DynFork::Errors::Panic.new(msg))\n  end\n  value_list : Array(Int64) = self.choices.map do |item|\n    item[0]\n  end\n  value.each do |elem|\n    if value_list.includes?(elem)\n    else\n      return false\n    end\n  end\nend\ntrue\n"}},{"html_id":"multiple?:Bool-instance-method","name":"multiple?","doc":"Specifies that multiple options can be selected at once.","summary":"<p>Specifies that multiple options can be selected at once.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":471,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L471"},"def":{"name":"multiple?","return_type":"Bool","visibility":"Public","body":"@multiple"}},{"html_id":"refrash_val_arr_i64(val:Array(Int64)):Nil-instance-method","name":"refrash_val_arr_i64","doc":"For the `DynFork::QPaladins::Tools#refrash_fields` method.","summary":"<p>For the <code><a href=\"../../DynFork/QPaladins/Tools.html#refrash_fields%28doc_ptr%3APointer%28BSON%7CNil%29%29%3ANil-instance-method\">DynFork::QPaladins::Tools#refrash_fields</a></code> method.</p>","abstract":false,"args":[{"name":"val","external_name":"val","restriction":"Array(Int64)"}],"args_string":"(val : Array(Int64)) : Nil","args_html":"(val : Array(Int64)) : Nil","location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":595,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L595"},"def":{"name":"refrash_val_arr_i64","args":[{"name":"val","external_name":"val","restriction":"Array(Int64)"}],"return_type":"Nil","visibility":"Public","body":"@value = val"}},{"html_id":"value:Array(Int64)|Nil-instance-method","name":"value","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value","return_type":"Array(Int64) | ::Nil","visibility":"Public","body":"if (value = @value).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::ChoiceI64MultDynField#value cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"value=(value:Array(Int64)|Nil)-instance-method","name":"value=","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Array(Int64) | ::Nil"}],"args_string":"(value : Array(Int64) | Nil)","args_html":"(value : Array(Int64) | Nil)","location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":469,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L469"},"def":{"name":"value=","args":[{"name":"value","external_name":"value","restriction":"Array(Int64) | ::Nil"}],"visibility":"Public","body":"@value = value"}},{"html_id":"value?:Array(Int64)|Nil|Nil-instance-method","name":"value?","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value?","return_type":"Array(Int64) | ::Nil | ::Nil","visibility":"Public","body":"@value"}}]},{"html_id":"dynfork/DynFork/Fields/ChoiceI64MultField","path":"DynFork/Fields/ChoiceI64MultField.html","kind":"struct","full_name":"DynFork::Fields::ChoiceI64MultField","name":"ChoiceI64MultField","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},"ancestors":[{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},{"html_id":"dynfork/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dynfork/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/fields/choice_i64.cr","line_number":156,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L156"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Fields","kind":"module","full_name":"DynFork::Fields","name":"Fields"},"doc":"Type of selective field with static of elements.\nNOTE: With multiple choice.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/static_choices\" target=\"_blank\">example</a>.","summary":"<p>Type of selective field with static of elements.</p>","constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"Type of selective field with static of elements.\nNOTE: With multiple choice.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/static_choices\" target=\"_blank\">example</a>.","summary":"<p>Type of selective field with static of elements.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":156,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L156"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}},{"html_id":"new(label:String=\"\",default:Array(Int64)|Nil=nil,hide:Bool=false,required:Bool=false,disabled:Bool=false,readonly:Bool=false,ignored:Bool=false,hint:String=\"\",choices:Array(Tuple(Int64,String))|Nil=Array(Tuple(Int64,String)).new)-class-method","name":"new","abstract":false,"args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"default","default_value":"nil","external_name":"default","restriction":"Array(Int64) | ::Nil"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"},{"name":"choices","default_value":"Array(Tuple(Int64, String)).new","external_name":"choices","restriction":"Array(Tuple(Int64, String)) | ::Nil"}],"args_string":"(label : String = \"\", default : Array(Int64) | Nil = nil, hide : Bool = false, required : Bool = false, disabled : Bool = false, readonly : Bool = false, ignored : Bool = false, hint : String = \"\", choices : Array(Tuple(Int64, String)) | Nil = Array(Tuple(Int64, String)).new)","args_html":"(label : String = <span class=\"s\">&quot;&quot;</span>, default : Array(Int64) | Nil = <span class=\"n\">nil</span>, hide : Bool = <span class=\"n\">false</span>, required : Bool = <span class=\"n\">false</span>, disabled : Bool = <span class=\"n\">false</span>, readonly : Bool = <span class=\"n\">false</span>, ignored : Bool = <span class=\"n\">false</span>, hint : String = <span class=\"s\">&quot;&quot;</span>, choices : Array(Tuple(Int64, String)) | Nil = <span class=\"t\">Array</span>(<span class=\"t\">Tuple</span>(<span class=\"t\">Int64</span>, <span class=\"t\">String</span>)).new)","location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":275,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L275"},"def":{"name":"new","args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"default","default_value":"nil","external_name":"default","restriction":"Array(Int64) | ::Nil"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"},{"name":"choices","default_value":"Array(Tuple(Int64, String)).new","external_name":"choices","restriction":"Array(Tuple(Int64, String)) | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(label, default, hide, required, disabled, readonly, ignored, hint, choices)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"choices:Array(Tuple(Int64,String))|Nil-instance-method","name":"choices","doc":"Html tag: select multiple.\n<br>\n_Example: [{5, \"Title\"}, {10, \"Title 2\"}]_","summary":"<p>Html tag: select multiple.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":168,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L168"},"def":{"name":"choices","return_type":"Array(Tuple(Int64, String)) | ::Nil","visibility":"Public","body":"if (value = @choices).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::ChoiceI64MultField#choices cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"choices?:Array(Tuple(Int64,String))|Nil|Nil-instance-method","name":"choices?","doc":"Html tag: select multiple.\n<br>\n_Example: [{5, \"Title\"}, {10, \"Title 2\"}]_","summary":"<p>Html tag: select multiple.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":168,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L168"},"def":{"name":"choices?","return_type":"Array(Tuple(Int64, String)) | ::Nil | ::Nil","visibility":"Public","body":"@choices"}},{"html_id":"default:Array(Int64)|Nil-instance-method","name":"default","doc":"Value by default.","summary":"<p>Value by default.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":162,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L162"},"def":{"name":"default","return_type":"Array(Int64) | ::Nil","visibility":"Public","body":"if (value = @default).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::ChoiceI64MultField#default cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"default?:Array(Int64)|Nil|Nil-instance-method","name":"default?","doc":"Value by default.","summary":"<p>Value by default.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":162,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L162"},"def":{"name":"default?","return_type":"Array(Int64) | ::Nil | ::Nil","visibility":"Public","body":"@default"}},{"html_id":"field_type:String-instance-method","name":"field_type","doc":"Field type - Structure Name.","summary":"<p>Field type - Structure Name.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":158,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L158"},"def":{"name":"field_type","return_type":"String","visibility":"Public","body":"@field_type"}},{"html_id":"group:UInt8-instance-method","name":"group","doc":"To optimize field traversal in the `paladins/check()` method.\nWARNING: It is recommended not to change.","summary":"<p>To optimize field traversal in the <code>paladins/check()</code> method.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":171,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L171"},"def":{"name":"group","return_type":"UInt8","visibility":"Public","body":"@group"}},{"html_id":"has_value?:Bool-instance-method","name":"has_value?","doc":"Does the field value match the possible options in choices.","summary":"<p>Does the field value match the possible options in choices.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":293,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L293"},"def":{"name":"has_value?","return_type":"Bool","visibility":"Public","body":"if value = @value || @default\n  value_list : Array(Int64) = self.choices.map do |item|\n    item[0]\n  end\n  value.each do |elem|\n    if value_list.includes?(elem)\n    else\n      return false\n    end\n  end\nend\ntrue\n"}},{"html_id":"multiple?:Bool-instance-method","name":"multiple?","doc":"Specifies that multiple options can be selected at once.","summary":"<p>Specifies that multiple options can be selected at once.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":164,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L164"},"def":{"name":"multiple?","return_type":"Bool","visibility":"Public","body":"@multiple"}},{"html_id":"refrash_val_arr_i64(val:Array(Int64)):Nil-instance-method","name":"refrash_val_arr_i64","doc":"For the `DynFork::QPaladins::Tools#refrash_fields` method.","summary":"<p>For the <code><a href=\"../../DynFork/QPaladins/Tools.html#refrash_fields%28doc_ptr%3APointer%28BSON%7CNil%29%29%3ANil-instance-method\">DynFork::QPaladins::Tools#refrash_fields</a></code> method.</p>","abstract":false,"args":[{"name":"val","external_name":"val","restriction":"Array(Int64)"}],"args_string":"(val : Array(Int64)) : Nil","args_html":"(val : Array(Int64)) : Nil","location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":288,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L288"},"def":{"name":"refrash_val_arr_i64","args":[{"name":"val","external_name":"val","restriction":"Array(Int64)"}],"return_type":"Nil","visibility":"Public","body":"@value = val"}},{"html_id":"value:Array(Int64)|Nil-instance-method","name":"value","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value","return_type":"Array(Int64) | ::Nil","visibility":"Public","body":"if (value = @value).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::ChoiceI64MultField#value cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"value=(value:Array(Int64)|Nil)-instance-method","name":"value=","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Array(Int64) | ::Nil"}],"args_string":"(value : Array(Int64) | Nil)","args_html":"(value : Array(Int64) | Nil)","location":{"filename":"src/dynfork/fields/choice_i64.cr","line_number":160,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_i64.cr#L160"},"def":{"name":"value=","args":[{"name":"value","external_name":"value","restriction":"Array(Int64) | ::Nil"}],"visibility":"Public","body":"@value = value"}},{"html_id":"value?:Array(Int64)|Nil|Nil-instance-method","name":"value?","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value?","return_type":"Array(Int64) | ::Nil | ::Nil","visibility":"Public","body":"@value"}}]},{"html_id":"dynfork/DynFork/Fields/ChoiceTextDynField","path":"DynFork/Fields/ChoiceTextDynField.html","kind":"struct","full_name":"DynFork::Fields::ChoiceTextDynField","name":"ChoiceTextDynField","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},"ancestors":[{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},{"html_id":"dynfork/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dynfork/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/fields/choice_text.cr","line_number":308,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L308"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Fields","kind":"module","full_name":"DynFork::Fields","name":"Fields"},"doc":"Type of selective field with dynamic addition of elements.\nNOTE: For simulate relationship Many-to-One.\nNOTE: Elements are added via the `ModelName.update_dyn_field()` method.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/dynamic_choices\" target=\"_blank\">example</a>.","summary":"<p>Type of selective field with dynamic addition of elements.</p>","constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"Type of selective field with dynamic addition of elements.\nNOTE: For simulate relationship Many-to-One.\nNOTE: Elements are added via the `ModelName.update_dyn_field()` method.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/dynamic_choices\" target=\"_blank\">example</a>.","summary":"<p>Type of selective field with dynamic addition of elements.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":308,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L308"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}},{"html_id":"new(label:String=\"\",hide:Bool=false,required:Bool=false,disabled:Bool=false,readonly:Bool=false,ignored:Bool=false,hint:String=\"\")-class-method","name":"new","abstract":false,"args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"}],"args_string":"(label : String = \"\", hide : Bool = false, required : Bool = false, disabled : Bool = false, readonly : Bool = false, ignored : Bool = false, hint : String = \"\")","args_html":"(label : String = <span class=\"s\">&quot;&quot;</span>, hide : Bool = <span class=\"n\">false</span>, required : Bool = <span class=\"n\">false</span>, disabled : Bool = <span class=\"n\">false</span>, readonly : Bool = <span class=\"n\">false</span>, ignored : Bool = <span class=\"n\">false</span>, hint : String = <span class=\"s\">&quot;&quot;</span>)","location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":427,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L427"},"def":{"name":"new","args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(label, hide, required, disabled, readonly, ignored, hint)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"choices:Array(Tuple(String,String))|Nil-instance-method","name":"choices","doc":"Html tag: select.\n<br>\n_Example: [{\"value\", \"Title\"}, {\"value 2\", \"Title 2\"}]_","summary":"<p>Html tag: select.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":318,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L318"},"def":{"name":"choices","return_type":"Array(Tuple(String, String)) | ::Nil","visibility":"Public","body":"if (value = @choices).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::ChoiceTextDynField#choices cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"choices?:Array(Tuple(String,String))|Nil|Nil-instance-method","name":"choices?","doc":"Html tag: select.\n<br>\n_Example: [{\"value\", \"Title\"}, {\"value 2\", \"Title 2\"}]_","summary":"<p>Html tag: select.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":318,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L318"},"def":{"name":"choices?","return_type":"Array(Tuple(String, String)) | ::Nil | ::Nil","visibility":"Public","body":"@choices"}},{"html_id":"choices_from_json(json:String):Nil-instance-method","name":"choices_from_json","doc":"Add data for dynamic fields from the local `@@meta` cache.","summary":"<p>Add data for dynamic fields from the local <code>@@meta</code> cache.</p>","abstract":false,"args":[{"name":"json","external_name":"json","restriction":"String"}],"args_string":"(json : String) : Nil","args_html":"(json : String) : Nil","location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":438,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L438"},"def":{"name":"choices_from_json","args":[{"name":"json","external_name":"json","restriction":"String"}],"return_type":"Nil","visibility":"Public","body":"@choices = Array(Tuple(String, String)).from_json(json)"}},{"html_id":"field_type:String-instance-method","name":"field_type","doc":"Field type - Structure Name.","summary":"<p>Field type - Structure Name.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":310,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L310"},"def":{"name":"field_type","return_type":"String","visibility":"Public","body":"@field_type"}},{"html_id":"group:UInt8-instance-method","name":"group","doc":"To optimize field traversal in the `paladins/check()` method.\nWARNING: It is recommended not to change.","summary":"<p>To optimize field traversal in the <code>paladins/check()</code> method.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":321,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L321"},"def":{"name":"group","return_type":"UInt8","visibility":"Public","body":"@group"}},{"html_id":"has_value?:Bool-instance-method","name":"has_value?","doc":"Does the field value match the possible options in choices.","summary":"<p>Does the field value match the possible options in choices.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":448,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L448"},"def":{"name":"has_value?","return_type":"Bool","visibility":"Public","body":"if value = @value || @default\n  if @choices.nil?\n    msg = \"Field type: `#{@field_type}` => The `choices` parameter cannot be Nil.\"\n    raise(DynFork::Errors::Panic.new(msg))\n  end\n  value_list : Array(String) = self.choices.map do |item|\n    item[0]\n  end\n  if value_list.includes?(value)\n  else\n    return false\n  end\nend\ntrue\n"}},{"html_id":"multiple?:Bool-instance-method","name":"multiple?","doc":"Specifies that multiple options can be selected at once.","summary":"<p>Specifies that multiple options can be selected at once.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":314,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L314"},"def":{"name":"multiple?","return_type":"Bool","visibility":"Public","body":"@multiple"}},{"html_id":"refrash_val_str(val:String):Nil-instance-method","name":"refrash_val_str","doc":"For the `DynFork::QPaladins::Tools#refrash_fields` method.","summary":"<p>For the <code><a href=\"../../DynFork/QPaladins/Tools.html#refrash_fields%28doc_ptr%3APointer%28BSON%7CNil%29%29%3ANil-instance-method\">DynFork::QPaladins::Tools#refrash_fields</a></code> method.</p>","abstract":false,"args":[{"name":"val","external_name":"val","restriction":"String"}],"args_string":"(val : String) : Nil","args_html":"(val : String) : Nil","location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":443,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L443"},"def":{"name":"refrash_val_str","args":[{"name":"val","external_name":"val","restriction":"String"}],"return_type":"Nil","visibility":"Public","body":"@value = val"}},{"html_id":"value:String|Nil-instance-method","name":"value","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @value).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::ChoiceTextDynField#value cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"value=(value:String|Nil)-instance-method","name":"value=","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String | ::Nil"}],"args_string":"(value : String | Nil)","args_html":"(value : String | Nil)","location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":312,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L312"},"def":{"name":"value=","args":[{"name":"value","external_name":"value","restriction":"String | ::Nil"}],"visibility":"Public","body":"@value = value"}},{"html_id":"value?:String|Nil|Nil-instance-method","name":"value?","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@value"}}]},{"html_id":"dynfork/DynFork/Fields/ChoiceTextField","path":"DynFork/Fields/ChoiceTextField.html","kind":"struct","full_name":"DynFork::Fields::ChoiceTextField","name":"ChoiceTextField","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},"ancestors":[{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},{"html_id":"dynfork/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dynfork/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/fields/choice_text.cr","line_number":7,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L7"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Fields","kind":"module","full_name":"DynFork::Fields","name":"Fields"},"doc":"Type of selective field with static of elements.\nNOTE: With a single choice.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/static_choices\" target=\"_blank\">example</a>.","summary":"<p>Type of selective field with static of elements.</p>","constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"Type of selective field with static of elements.\nNOTE: With a single choice.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/static_choices\" target=\"_blank\">example</a>.","summary":"<p>Type of selective field with static of elements.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":7,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L7"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}},{"html_id":"new(label:String=\"\",default:String|Nil=nil,hide:Bool=false,required:Bool=false,disabled:Bool=false,readonly:Bool=false,ignored:Bool=false,hint:String=\"\",choices:Array(Tuple(String,String))|Nil=Array(Tuple(String,String)).new)-class-method","name":"new","abstract":false,"args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"default","default_value":"nil","external_name":"default","restriction":"String | ::Nil"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"},{"name":"choices","default_value":"Array(Tuple(String, String)).new","external_name":"choices","restriction":"Array(Tuple(String, String)) | ::Nil"}],"args_string":"(label : String = \"\", default : String | Nil = nil, hide : Bool = false, required : Bool = false, disabled : Bool = false, readonly : Bool = false, ignored : Bool = false, hint : String = \"\", choices : Array(Tuple(String, String)) | Nil = Array(Tuple(String, String)).new)","args_html":"(label : String = <span class=\"s\">&quot;&quot;</span>, default : String | Nil = <span class=\"n\">nil</span>, hide : Bool = <span class=\"n\">false</span>, required : Bool = <span class=\"n\">false</span>, disabled : Bool = <span class=\"n\">false</span>, readonly : Bool = <span class=\"n\">false</span>, ignored : Bool = <span class=\"n\">false</span>, hint : String = <span class=\"s\">&quot;&quot;</span>, choices : Array(Tuple(String, String)) | Nil = <span class=\"t\">Array</span>(<span class=\"t\">Tuple</span>(<span class=\"t\">String</span>, <span class=\"t\">String</span>)).new)","location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":126,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L126"},"def":{"name":"new","args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"default","default_value":"nil","external_name":"default","restriction":"String | ::Nil"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"},{"name":"choices","default_value":"Array(Tuple(String, String)).new","external_name":"choices","restriction":"Array(Tuple(String, String)) | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(label, default, hide, required, disabled, readonly, ignored, hint, choices)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"choices:Array(Tuple(String,String))|Nil-instance-method","name":"choices","doc":"Html tag: select.\n<br>\n_Example: [{\"value\", \"Title\"}, {\"value 2\", \"Title 2\"}]_","summary":"<p>Html tag: select.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":19,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L19"},"def":{"name":"choices","return_type":"Array(Tuple(String, String)) | ::Nil","visibility":"Public","body":"if (value = @choices).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::ChoiceTextField#choices cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"choices?:Array(Tuple(String,String))|Nil|Nil-instance-method","name":"choices?","doc":"Html tag: select.\n<br>\n_Example: [{\"value\", \"Title\"}, {\"value 2\", \"Title 2\"}]_","summary":"<p>Html tag: select.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":19,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L19"},"def":{"name":"choices?","return_type":"Array(Tuple(String, String)) | ::Nil | ::Nil","visibility":"Public","body":"@choices"}},{"html_id":"default:String|Nil-instance-method","name":"default","doc":"Value by default.","summary":"<p>Value by default.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":13,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L13"},"def":{"name":"default","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @default).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::ChoiceTextField#default cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"default?:String|Nil|Nil-instance-method","name":"default?","doc":"Value by default.","summary":"<p>Value by default.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":13,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L13"},"def":{"name":"default?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@default"}},{"html_id":"field_type:String-instance-method","name":"field_type","doc":"Field type - Structure Name.","summary":"<p>Field type - Structure Name.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":9,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L9"},"def":{"name":"field_type","return_type":"String","visibility":"Public","body":"@field_type"}},{"html_id":"group:UInt8-instance-method","name":"group","doc":"To optimize field traversal in the `paladins/check()` method.\nWARNING: It is recommended not to change.","summary":"<p>To optimize field traversal in the <code>paladins/check()</code> method.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":22,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L22"},"def":{"name":"group","return_type":"UInt8","visibility":"Public","body":"@group"}},{"html_id":"has_value?:Bool-instance-method","name":"has_value?","doc":"Does the field value match the possible options in choices.","summary":"<p>Does the field value match the possible options in choices.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":144,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L144"},"def":{"name":"has_value?","return_type":"Bool","visibility":"Public","body":"if value = @value || @default\n  value_list : Array(String) = self.choices.map do |item|\n    item[0]\n  end\n  if value_list.includes?(value)\n  else\n    return false\n  end\nend\ntrue\n"}},{"html_id":"multiple?:Bool-instance-method","name":"multiple?","doc":"Specifies that multiple options can be selected at once.","summary":"<p>Specifies that multiple options can be selected at once.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":15,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L15"},"def":{"name":"multiple?","return_type":"Bool","visibility":"Public","body":"@multiple"}},{"html_id":"refrash_val_str(val:String):Nil-instance-method","name":"refrash_val_str","doc":"For the `DynFork::QPaladins::Tools#refrash_fields` method.","summary":"<p>For the <code><a href=\"../../DynFork/QPaladins/Tools.html#refrash_fields%28doc_ptr%3APointer%28BSON%7CNil%29%29%3ANil-instance-method\">DynFork::QPaladins::Tools#refrash_fields</a></code> method.</p>","abstract":false,"args":[{"name":"val","external_name":"val","restriction":"String"}],"args_string":"(val : String) : Nil","args_html":"(val : String) : Nil","location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":139,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L139"},"def":{"name":"refrash_val_str","args":[{"name":"val","external_name":"val","restriction":"String"}],"return_type":"Nil","visibility":"Public","body":"@value = val"}},{"html_id":"value:String|Nil-instance-method","name":"value","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @value).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::ChoiceTextField#value cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"value=(value:String|Nil)-instance-method","name":"value=","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String | ::Nil"}],"args_string":"(value : String | Nil)","args_html":"(value : String | Nil)","location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":11,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L11"},"def":{"name":"value=","args":[{"name":"value","external_name":"value","restriction":"String | ::Nil"}],"visibility":"Public","body":"@value = value"}},{"html_id":"value?:String|Nil|Nil-instance-method","name":"value?","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@value"}}]},{"html_id":"dynfork/DynFork/Fields/ChoiceTextMultDynField","path":"DynFork/Fields/ChoiceTextMultDynField.html","kind":"struct","full_name":"DynFork::Fields::ChoiceTextMultDynField","name":"ChoiceTextMultDynField","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},"ancestors":[{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},{"html_id":"dynfork/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dynfork/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/fields/choice_text.cr","line_number":465,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L465"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Fields","kind":"module","full_name":"DynFork::Fields","name":"Fields"},"doc":"Type of selective field with dynamic addition of elements.\nNOTE: For simulate relationship Many-to-Many.\nNOTE: Elements are added via the `ModelName.update_dyn_field()` method.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/dynamic_choices\" target=\"_blank\">example</a>.","summary":"<p>Type of selective field with dynamic addition of elements.</p>","constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"Type of selective field with dynamic addition of elements.\nNOTE: For simulate relationship Many-to-Many.\nNOTE: Elements are added via the `ModelName.update_dyn_field()` method.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/dynamic_choices\" target=\"_blank\">example</a>.","summary":"<p>Type of selective field with dynamic addition of elements.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":465,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L465"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}},{"html_id":"new(label:String=\"\",hide:Bool=false,required:Bool=false,disabled:Bool=false,readonly:Bool=false,ignored:Bool=false,hint:String=\"\")-class-method","name":"new","abstract":false,"args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"}],"args_string":"(label : String = \"\", hide : Bool = false, required : Bool = false, disabled : Bool = false, readonly : Bool = false, ignored : Bool = false, hint : String = \"\")","args_html":"(label : String = <span class=\"s\">&quot;&quot;</span>, hide : Bool = <span class=\"n\">false</span>, required : Bool = <span class=\"n\">false</span>, disabled : Bool = <span class=\"n\">false</span>, readonly : Bool = <span class=\"n\">false</span>, ignored : Bool = <span class=\"n\">false</span>, hint : String = <span class=\"s\">&quot;&quot;</span>)","location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":584,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L584"},"def":{"name":"new","args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(label, hide, required, disabled, readonly, ignored, hint)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"choices:Array(Tuple(String,String))|Nil-instance-method","name":"choices","doc":"Html tag: select.\n<br>\n_Example: [{\"value\", \"Title\"}, {\"value 2\", \"Title 2\"}]_","summary":"<p>Html tag: select.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":475,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L475"},"def":{"name":"choices","return_type":"Array(Tuple(String, String)) | ::Nil","visibility":"Public","body":"if (value = @choices).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::ChoiceTextMultDynField#choices cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"choices?:Array(Tuple(String,String))|Nil|Nil-instance-method","name":"choices?","doc":"Html tag: select.\n<br>\n_Example: [{\"value\", \"Title\"}, {\"value 2\", \"Title 2\"}]_","summary":"<p>Html tag: select.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":475,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L475"},"def":{"name":"choices?","return_type":"Array(Tuple(String, String)) | ::Nil | ::Nil","visibility":"Public","body":"@choices"}},{"html_id":"choices_from_json(json:String):Nil-instance-method","name":"choices_from_json","doc":"Add data for dynamic fields from the local `@@meta` cache.","summary":"<p>Add data for dynamic fields from the local <code>@@meta</code> cache.</p>","abstract":false,"args":[{"name":"json","external_name":"json","restriction":"String"}],"args_string":"(json : String) : Nil","args_html":"(json : String) : Nil","location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":595,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L595"},"def":{"name":"choices_from_json","args":[{"name":"json","external_name":"json","restriction":"String"}],"return_type":"Nil","visibility":"Public","body":"@choices = Array(Tuple(String, String)).from_json(json)"}},{"html_id":"field_type:String-instance-method","name":"field_type","doc":"Field type - Structure Name.","summary":"<p>Field type - Structure Name.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":467,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L467"},"def":{"name":"field_type","return_type":"String","visibility":"Public","body":"@field_type"}},{"html_id":"group:UInt8-instance-method","name":"group","doc":"To optimize field traversal in the `paladins/check()` method.\nWARNING: It is recommended not to change.","summary":"<p>To optimize field traversal in the <code>paladins/check()</code> method.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":478,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L478"},"def":{"name":"group","return_type":"UInt8","visibility":"Public","body":"@group"}},{"html_id":"has_value?:Bool-instance-method","name":"has_value?","doc":"Does the field value match the possible options in choices.","summary":"<p>Does the field value match the possible options in choices.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":605,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L605"},"def":{"name":"has_value?","return_type":"Bool","visibility":"Public","body":"if value = @value || @default\n  if @choices.nil?\n    msg = \"Field type: `#{@field_type}` => The `choices` parameter cannot be Nil.\"\n    raise(DynFork::Errors::Panic.new(msg))\n  end\n  value_list : Array(String) = self.choices.map do |item|\n    item[0]\n  end\n  value.each do |elem|\n    if value_list.includes?(elem)\n    else\n      return false\n    end\n  end\nend\ntrue\n"}},{"html_id":"multiple?:Bool-instance-method","name":"multiple?","doc":"Specifies that multiple options can be selected at once.","summary":"<p>Specifies that multiple options can be selected at once.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":471,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L471"},"def":{"name":"multiple?","return_type":"Bool","visibility":"Public","body":"@multiple"}},{"html_id":"refrash_val_arr_str(val:Array(String)):Nil-instance-method","name":"refrash_val_arr_str","doc":"For the `DynFork::QPaladins::Tools#refrash_fields` method.","summary":"<p>For the <code><a href=\"../../DynFork/QPaladins/Tools.html#refrash_fields%28doc_ptr%3APointer%28BSON%7CNil%29%29%3ANil-instance-method\">DynFork::QPaladins::Tools#refrash_fields</a></code> method.</p>","abstract":false,"args":[{"name":"val","external_name":"val","restriction":"Array(String)"}],"args_string":"(val : Array(String)) : Nil","args_html":"(val : Array(String)) : Nil","location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":600,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L600"},"def":{"name":"refrash_val_arr_str","args":[{"name":"val","external_name":"val","restriction":"Array(String)"}],"return_type":"Nil","visibility":"Public","body":"@value = val"}},{"html_id":"value:Array(String)|Nil-instance-method","name":"value","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value","return_type":"Array(String) | ::Nil","visibility":"Public","body":"if (value = @value).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::ChoiceTextMultDynField#value cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"value=(value:Array(String)|Nil)-instance-method","name":"value=","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Array(String) | ::Nil"}],"args_string":"(value : Array(String) | Nil)","args_html":"(value : Array(String) | Nil)","location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":469,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L469"},"def":{"name":"value=","args":[{"name":"value","external_name":"value","restriction":"Array(String) | ::Nil"}],"visibility":"Public","body":"@value = value"}},{"html_id":"value?:Array(String)|Nil|Nil-instance-method","name":"value?","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value?","return_type":"Array(String) | ::Nil | ::Nil","visibility":"Public","body":"@value"}}]},{"html_id":"dynfork/DynFork/Fields/ChoiceTextMultField","path":"DynFork/Fields/ChoiceTextMultField.html","kind":"struct","full_name":"DynFork::Fields::ChoiceTextMultField","name":"ChoiceTextMultField","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},"ancestors":[{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},{"html_id":"dynfork/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dynfork/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/fields/choice_text.cr","line_number":156,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L156"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Fields","kind":"module","full_name":"DynFork::Fields","name":"Fields"},"doc":"Type of selective field with static of elements.\nNOTE: With multiple choice.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/static_choices\" target=\"_blank\">example</a>.","summary":"<p>Type of selective field with static of elements.</p>","constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"Type of selective field with static of elements.\nNOTE: With multiple choice.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/static_choices\" target=\"_blank\">example</a>.","summary":"<p>Type of selective field with static of elements.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":156,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L156"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}},{"html_id":"new(label:String=\"\",default:Array(String)|Nil=nil,hide:Bool=false,required:Bool=false,disabled:Bool=false,readonly:Bool=false,ignored:Bool=false,hint:String=\"\",choices:Array(Tuple(String,String))|Nil=Array(Tuple(String,String)).new)-class-method","name":"new","abstract":false,"args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"default","default_value":"nil","external_name":"default","restriction":"Array(String) | ::Nil"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"},{"name":"choices","default_value":"Array(Tuple(String, String)).new","external_name":"choices","restriction":"Array(Tuple(String, String)) | ::Nil"}],"args_string":"(label : String = \"\", default : Array(String) | Nil = nil, hide : Bool = false, required : Bool = false, disabled : Bool = false, readonly : Bool = false, ignored : Bool = false, hint : String = \"\", choices : Array(Tuple(String, String)) | Nil = Array(Tuple(String, String)).new)","args_html":"(label : String = <span class=\"s\">&quot;&quot;</span>, default : Array(String) | Nil = <span class=\"n\">nil</span>, hide : Bool = <span class=\"n\">false</span>, required : Bool = <span class=\"n\">false</span>, disabled : Bool = <span class=\"n\">false</span>, readonly : Bool = <span class=\"n\">false</span>, ignored : Bool = <span class=\"n\">false</span>, hint : String = <span class=\"s\">&quot;&quot;</span>, choices : Array(Tuple(String, String)) | Nil = <span class=\"t\">Array</span>(<span class=\"t\">Tuple</span>(<span class=\"t\">String</span>, <span class=\"t\">String</span>)).new)","location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":275,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L275"},"def":{"name":"new","args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"default","default_value":"nil","external_name":"default","restriction":"Array(String) | ::Nil"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"},{"name":"choices","default_value":"Array(Tuple(String, String)).new","external_name":"choices","restriction":"Array(Tuple(String, String)) | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(label, default, hide, required, disabled, readonly, ignored, hint, choices)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"choices:Array(Tuple(String,String))|Nil-instance-method","name":"choices","doc":"Html tag: select multiple.\n<br>\n_Example: [{\"value\", \"Title\"}, {\"value 2\", \"Title 2\"}]_","summary":"<p>Html tag: select multiple.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":168,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L168"},"def":{"name":"choices","return_type":"Array(Tuple(String, String)) | ::Nil","visibility":"Public","body":"if (value = @choices).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::ChoiceTextMultField#choices cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"choices?:Array(Tuple(String,String))|Nil|Nil-instance-method","name":"choices?","doc":"Html tag: select multiple.\n<br>\n_Example: [{\"value\", \"Title\"}, {\"value 2\", \"Title 2\"}]_","summary":"<p>Html tag: select multiple.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":168,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L168"},"def":{"name":"choices?","return_type":"Array(Tuple(String, String)) | ::Nil | ::Nil","visibility":"Public","body":"@choices"}},{"html_id":"default:Array(String)|Nil-instance-method","name":"default","doc":"Value by default.","summary":"<p>Value by default.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":162,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L162"},"def":{"name":"default","return_type":"Array(String) | ::Nil","visibility":"Public","body":"if (value = @default).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::ChoiceTextMultField#default cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"default?:Array(String)|Nil|Nil-instance-method","name":"default?","doc":"Value by default.","summary":"<p>Value by default.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":162,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L162"},"def":{"name":"default?","return_type":"Array(String) | ::Nil | ::Nil","visibility":"Public","body":"@default"}},{"html_id":"field_type:String-instance-method","name":"field_type","doc":"Field type - Structure Name.","summary":"<p>Field type - Structure Name.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":158,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L158"},"def":{"name":"field_type","return_type":"String","visibility":"Public","body":"@field_type"}},{"html_id":"group:UInt8-instance-method","name":"group","doc":"To optimize field traversal in the `paladins/check()` method.\nWARNING: It is recommended not to change.","summary":"<p>To optimize field traversal in the <code>paladins/check()</code> method.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":171,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L171"},"def":{"name":"group","return_type":"UInt8","visibility":"Public","body":"@group"}},{"html_id":"has_value?:Bool-instance-method","name":"has_value?","doc":"Does the field value match the possible options in choices.","summary":"<p>Does the field value match the possible options in choices.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":293,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L293"},"def":{"name":"has_value?","return_type":"Bool","visibility":"Public","body":"if value = @value || @default\n  value_list : Array(String) = self.choices.map do |item|\n    item[0]\n  end\n  value.each do |elem|\n    if value_list.includes?(elem)\n    else\n      return false\n    end\n  end\nend\ntrue\n"}},{"html_id":"multiple?:Bool-instance-method","name":"multiple?","doc":"Specifies that multiple options can be selected at once.","summary":"<p>Specifies that multiple options can be selected at once.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":164,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L164"},"def":{"name":"multiple?","return_type":"Bool","visibility":"Public","body":"@multiple"}},{"html_id":"refrash_val_arr_str(val:Array(String)):Nil-instance-method","name":"refrash_val_arr_str","doc":"For the `DynFork::QPaladins::Tools#refrash_fields` method.","summary":"<p>For the <code><a href=\"../../DynFork/QPaladins/Tools.html#refrash_fields%28doc_ptr%3APointer%28BSON%7CNil%29%29%3ANil-instance-method\">DynFork::QPaladins::Tools#refrash_fields</a></code> method.</p>","abstract":false,"args":[{"name":"val","external_name":"val","restriction":"Array(String)"}],"args_string":"(val : Array(String)) : Nil","args_html":"(val : Array(String)) : Nil","location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":288,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L288"},"def":{"name":"refrash_val_arr_str","args":[{"name":"val","external_name":"val","restriction":"Array(String)"}],"return_type":"Nil","visibility":"Public","body":"@value = val"}},{"html_id":"value:Array(String)|Nil-instance-method","name":"value","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value","return_type":"Array(String) | ::Nil","visibility":"Public","body":"if (value = @value).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::ChoiceTextMultField#value cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"value=(value:Array(String)|Nil)-instance-method","name":"value=","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Array(String) | ::Nil"}],"args_string":"(value : Array(String) | Nil)","args_html":"(value : Array(String) | Nil)","location":{"filename":"src/dynfork/fields/choice_text.cr","line_number":160,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/choice_text.cr#L160"},"def":{"name":"value=","args":[{"name":"value","external_name":"value","restriction":"Array(String) | ::Nil"}],"visibility":"Public","body":"@value = value"}},{"html_id":"value?:Array(String)|Nil|Nil-instance-method","name":"value?","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value?","return_type":"Array(String) | ::Nil | ::Nil","visibility":"Public","body":"@value"}}]},{"html_id":"dynfork/DynFork/Fields/ColorField","path":"DynFork/Fields/ColorField.html","kind":"struct","full_name":"DynFork::Fields::ColorField","name":"ColorField","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},"ancestors":[{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},{"html_id":"dynfork/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dynfork/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/fields/color.cr","line_number":13,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/color.cr#L13"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Fields","kind":"module","full_name":"DynFork::Fields","name":"Fields"},"doc":"Field for entering color.\n<br>\nThe default value is _#000000_ (black).\n<br>\nHtml input type=\"text\".\nWARNING: type=\"color\" only seven-character hexadecimal notation.\n<br>\n_Examples: #fff | #f2f2f2 | #f2f2f200 | rgb(255,0,24) | rgba(255,0,24,0.5) |\nrgba(#fff,0.5) | hsl(120,100%,50%) | hsla(170,23%,25%,0.2) | 0x00ffff_","summary":"<p>Field for entering color.</p>","constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"Field for entering color.\n<br>\nThe default value is _#000000_ (black).\n<br>\nHtml input type=\"text\".\nWARNING: type=\"color\" only seven-character hexadecimal notation.\n<br>\n_Examples: #fff | #f2f2f2 | #f2f2f200 | rgb(255,0,24) | rgba(255,0,24,0.5) |\nrgba(#fff,0.5) | hsl(120,100%,50%) | hsla(170,23%,25%,0.2) | 0x00ffff_","summary":"<p>Field for entering color.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/dynfork/fields/color.cr","line_number":13,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/color.cr#L13"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}},{"html_id":"new(label:String=\"\",default:String|Nil=\"#000000\",placeholder:String=\"\",maxlength:UInt32|Nil=256,hide:Bool=false,unique:Bool=false,required:Bool=false,disabled:Bool=false,readonly:Bool=false,ignored:Bool=false,hint:String=I18n.t(\"examples.interpolation\",samples:((\"#fff|#f2f2f2|#f2f2f200|\"+\"rgb(255,0,24)|rgba(255,0,24,0.5)|\")+\"rgba(#fff,0.5)|hsl(120,100%,50%)|\")+\"hsla(170,23%,25%,0.2)|0x00ffff\"))-class-method","name":"new","abstract":false,"args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"default","default_value":"\"#000000\"","external_name":"default","restriction":"String | ::Nil"},{"name":"placeholder","default_value":"\"\"","external_name":"placeholder","restriction":"String"},{"name":"maxlength","default_value":"256","external_name":"maxlength","restriction":"UInt32 | ::Nil"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"unique","default_value":"false","external_name":"unique","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"I18n.t(\"examples.interpolation\", samples: ((\"#fff | #f2f2f2 | #f2f2f200 | \" + \"rgb(255,0,24) | rgba(255,0,24,0.5) | \") + \"rgba(#fff,0.5) | hsl(120,100%,50%) | \") + \"hsla(170,23%,25%,0.2) | 0x00ffff\")","external_name":"hint","restriction":"String"}],"args_string":"(label : String = \"\", default : String | Nil = \"#000000\", placeholder : String = \"\", maxlength : UInt32 | Nil = 256, hide : Bool = false, unique : Bool = false, required : Bool = false, disabled : Bool = false, readonly : Bool = false, ignored : Bool = false, hint : String = I18n.t(\"examples.interpolation\", samples: ((\"#fff | #f2f2f2 | #f2f2f200 | \" + \"rgb(255,0,24) | rgba(255,0,24,0.5) | \") + \"rgba(#fff,0.5) | hsl(120,100%,50%) | \") + \"hsla(170,23%,25%,0.2) | 0x00ffff\"))","args_html":"(label : String = <span class=\"s\">&quot;&quot;</span>, default : String | Nil = <span class=\"s\">&quot;#000000&quot;</span>, placeholder : String = <span class=\"s\">&quot;&quot;</span>, maxlength : UInt32 | Nil = <span class=\"n\">256</span>, hide : Bool = <span class=\"n\">false</span>, unique : Bool = <span class=\"n\">false</span>, required : Bool = <span class=\"n\">false</span>, disabled : Bool = <span class=\"n\">false</span>, readonly : Bool = <span class=\"n\">false</span>, ignored : Bool = <span class=\"n\">false</span>, hint : String = <span class=\"t\">I18n</span>.t(<span class=\"s\">&quot;examples.interpolation&quot;</span>, samples: ((<span class=\"s\">&quot;#fff | #f2f2f2 | #f2f2f200 | &quot;</span> <span class=\"o\">+</span> <span class=\"s\">&quot;rgb(255,0,24) | rgba(255,0,24,0.5) | &quot;</span>) <span class=\"o\">+</span> <span class=\"s\">&quot;rgba(#fff,0.5) | hsl(120,100%,50%) | &quot;</span>) <span class=\"o\">+</span> <span class=\"s\">&quot;hsla(170,23%,25%,0.2) | 0x00ffff&quot;</span>))","location":{"filename":"src/dynfork/fields/color.cr","line_number":138,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/color.cr#L138"},"def":{"name":"new","args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"default","default_value":"\"#000000\"","external_name":"default","restriction":"String | ::Nil"},{"name":"placeholder","default_value":"\"\"","external_name":"placeholder","restriction":"String"},{"name":"maxlength","default_value":"256","external_name":"maxlength","restriction":"UInt32 | ::Nil"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"unique","default_value":"false","external_name":"unique","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"I18n.t(\"examples.interpolation\", samples: ((\"#fff | #f2f2f2 | #f2f2f200 | \" + \"rgb(255,0,24) | rgba(255,0,24,0.5) | \") + \"rgba(#fff,0.5) | hsl(120,100%,50%) | \") + \"hsla(170,23%,25%,0.2) | 0x00ffff\")","external_name":"hint","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(label, default, placeholder, maxlength, hide, unique, required, disabled, readonly, ignored, hint)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"default:String|Nil-instance-method","name":"default","doc":"The default value is #000000.","summary":"<p>The default value is #000000.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/color.cr","line_number":24,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/color.cr#L24"},"def":{"name":"default","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @default).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::ColorField#default cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"default?:String|Nil|Nil-instance-method","name":"default?","doc":"The default value is #000000.","summary":"<p>The default value is #000000.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/color.cr","line_number":24,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/color.cr#L24"},"def":{"name":"default?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@default"}},{"html_id":"field_type:String-instance-method","name":"field_type","doc":"Field type - Structure Name.","summary":"<p>Field type - Structure Name.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/color.cr","line_number":15,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/color.cr#L15"},"def":{"name":"field_type","return_type":"String","visibility":"Public","body":"@field_type"}},{"html_id":"group:UInt8-instance-method","name":"group","doc":"To optimize field traversal in the `paladins/check()` method.\nWARNING: It is recommended not to change.","summary":"<p>To optimize field traversal in the <code>paladins/check()</code> method.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/color.cr","line_number":35,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/color.cr#L35"},"def":{"name":"group","return_type":"UInt8","visibility":"Public","body":"@group"}},{"html_id":"input_type:String|Nil-instance-method","name":"input_type","doc":"Html tag: input type=\"color\".\n<br>\nBy default type=\"text\".\nWARNING: type=\"color\" only seven-character hexadecimal notation.","summary":"<p>Html tag: input type=&quot;color&quot;.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/color.cr","line_number":20,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/color.cr#L20"},"def":{"name":"input_type","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @input_type).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::ColorField#input_type cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"input_type?:String|Nil|Nil-instance-method","name":"input_type?","doc":"Html tag: input type=\"color\".\n<br>\nBy default type=\"text\".\nWARNING: type=\"color\" only seven-character hexadecimal notation.","summary":"<p>Html tag: input type=&quot;color&quot;.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/color.cr","line_number":20,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/color.cr#L20"},"def":{"name":"input_type?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@input_type"}},{"html_id":"maxlength:UInt32|Nil-instance-method","name":"maxlength","doc":"The maximum number of characters allowed in the text.","summary":"<p>The maximum number of characters allowed in the text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/color.cr","line_number":28,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/color.cr#L28"},"def":{"name":"maxlength","return_type":"UInt32 | ::Nil","visibility":"Public","body":"if (value = @maxlength).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::ColorField#maxlength cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"maxlength?:UInt32|Nil|Nil-instance-method","name":"maxlength?","doc":"The maximum number of characters allowed in the text.","summary":"<p>The maximum number of characters allowed in the text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/color.cr","line_number":28,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/color.cr#L28"},"def":{"name":"maxlength?","return_type":"UInt32 | ::Nil | ::Nil","visibility":"Public","body":"@maxlength"}},{"html_id":"minlength:UInt32|Nil-instance-method","name":"minlength","doc":"The minimum number of characters allowed in the text.","summary":"<p>The minimum number of characters allowed in the text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/color.cr","line_number":30,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/color.cr#L30"},"def":{"name":"minlength","return_type":"UInt32 | ::Nil","visibility":"Public","body":"if (value = @minlength).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::ColorField#minlength cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"minlength?:UInt32|Nil|Nil-instance-method","name":"minlength?","doc":"The minimum number of characters allowed in the text.","summary":"<p>The minimum number of characters allowed in the text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/color.cr","line_number":30,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/color.cr#L30"},"def":{"name":"minlength?","return_type":"UInt32 | ::Nil | ::Nil","visibility":"Public","body":"@minlength"}},{"html_id":"placeholder:String-instance-method","name":"placeholder","doc":"Displays prompt text.","summary":"<p>Displays prompt text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/color.cr","line_number":26,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/color.cr#L26"},"def":{"name":"placeholder","return_type":"String","visibility":"Public","body":"@placeholder"}},{"html_id":"placeholder=(placeholder:String)-instance-method","name":"placeholder=","doc":"Displays prompt text.","summary":"<p>Displays prompt text.</p>","abstract":false,"args":[{"name":"placeholder","external_name":"placeholder","restriction":"String"}],"args_string":"(placeholder : String)","args_html":"(placeholder : String)","location":{"filename":"src/dynfork/fields/color.cr","line_number":26,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/color.cr#L26"},"def":{"name":"placeholder=","args":[{"name":"placeholder","external_name":"placeholder","restriction":"String"}],"visibility":"Public","body":"@placeholder = placeholder"}},{"html_id":"refrash_val_str(val:String):Nil-instance-method","name":"refrash_val_str","doc":"For the `DynFork::QPaladins::Tools#refrash_fields` method.","summary":"<p>For the <code><a href=\"../../DynFork/QPaladins/Tools.html#refrash_fields%28doc_ptr%3APointer%28BSON%7CNil%29%29%3ANil-instance-method\">DynFork::QPaladins::Tools#refrash_fields</a></code> method.</p>","abstract":false,"args":[{"name":"val","external_name":"val","restriction":"String"}],"args_string":"(val : String) : Nil","args_html":"(val : String) : Nil","location":{"filename":"src/dynfork/fields/color.cr","line_number":160,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/color.cr#L160"},"def":{"name":"refrash_val_str","args":[{"name":"val","external_name":"val","restriction":"String"}],"return_type":"Nil","visibility":"Public","body":"@value = val"}},{"html_id":"unique?:Bool-instance-method","name":"unique?","doc":"The unique value of a field in a collection.","summary":"<p>The unique value of a field in a collection.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/color.cr","line_number":32,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/color.cr#L32"},"def":{"name":"unique?","return_type":"Bool","visibility":"Public","body":"@unique"}},{"html_id":"value:String|Nil-instance-method","name":"value","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @value).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::ColorField#value cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"value=(value:String|Nil)-instance-method","name":"value=","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String | ::Nil"}],"args_string":"(value : String | Nil)","args_html":"(value : String | Nil)","location":{"filename":"src/dynfork/fields/color.cr","line_number":22,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/color.cr#L22"},"def":{"name":"value=","args":[{"name":"value","external_name":"value","restriction":"String | ::Nil"}],"visibility":"Public","body":"@value = value"}},{"html_id":"value?:String|Nil|Nil-instance-method","name":"value?","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@value"}}]},{"html_id":"dynfork/DynFork/Fields/DateField","path":"DynFork/Fields/DateField.html","kind":"struct","full_name":"DynFork::Fields::DateField","name":"DateField","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},"ancestors":[{"html_id":"dynfork/DynFork/Globals/Date","kind":"module","full_name":"DynFork::Globals::Date","name":"Date"},{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},{"html_id":"dynfork/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dynfork/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/fields/date.cr","line_number":8,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/date.cr#L8"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"dynfork/DynFork/Globals/Date","kind":"module","full_name":"DynFork::Globals::Date","name":"Date"}],"namespace":{"html_id":"dynfork/DynFork/Fields","kind":"module","full_name":"DynFork::Fields","name":"Fields"},"doc":"A field for entering a date.\n<br>\n_**Formats:** dd-mm-yyyy | dd/mm/yyyy | dd.mm.yyyy |\nyyyy-mm-dd | yyyy/mm/dd | yyyy.mm.dd_","summary":"<p>A field for entering a date.</p>","constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"A field for entering a date.\n<br>\n_**Formats:** dd-mm-yyyy | dd/mm/yyyy | dd.mm.yyyy |\nyyyy-mm-dd | yyyy/mm/dd | yyyy.mm.dd_","summary":"<p>A field for entering a date.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/dynfork/fields/date.cr","line_number":8,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/date.cr#L8"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}},{"html_id":"new(label:String=\"\",default:String|Nil=nil,placeholder:String=\"\",max:String|Nil=nil,min:String|Nil=nil,hide:Bool=false,required:Bool=false,disabled:Bool=false,readonly:Bool=false,ignored:Bool=false,hint:String=I18n.t(\"formats.interpolation\",samples:(\"dd-mm-yyyy|dd/mm/yyyy|\"+\"dd.mm.yyyy|yyyy-mm-dd|\")+\"yyyy/mm/dd|yyyy.mm.dd\"))-class-method","name":"new","abstract":false,"args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"default","default_value":"nil","external_name":"default","restriction":"String | ::Nil"},{"name":"placeholder","default_value":"\"\"","external_name":"placeholder","restriction":"String"},{"name":"max","default_value":"nil","external_name":"max","restriction":"String | ::Nil"},{"name":"min","default_value":"nil","external_name":"min","restriction":"String | ::Nil"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"I18n.t(\"formats.interpolation\", samples: (\"dd-mm-yyyy | dd/mm/yyyy | \" + \"dd.mm.yyyy | yyyy-mm-dd | \") + \"yyyy/mm/dd | yyyy.mm.dd\")","external_name":"hint","restriction":"String"}],"args_string":"(label : String = \"\", default : String | Nil = nil, placeholder : String = \"\", max : String | Nil = nil, min : String | Nil = nil, hide : Bool = false, required : Bool = false, disabled : Bool = false, readonly : Bool = false, ignored : Bool = false, hint : String = I18n.t(\"formats.interpolation\", samples: (\"dd-mm-yyyy | dd/mm/yyyy | \" + \"dd.mm.yyyy | yyyy-mm-dd | \") + \"yyyy/mm/dd | yyyy.mm.dd\"))","args_html":"(label : String = <span class=\"s\">&quot;&quot;</span>, default : String | Nil = <span class=\"n\">nil</span>, placeholder : String = <span class=\"s\">&quot;&quot;</span>, max : String | Nil = <span class=\"n\">nil</span>, min : String | Nil = <span class=\"n\">nil</span>, hide : Bool = <span class=\"n\">false</span>, required : Bool = <span class=\"n\">false</span>, disabled : Bool = <span class=\"n\">false</span>, readonly : Bool = <span class=\"n\">false</span>, ignored : Bool = <span class=\"n\">false</span>, hint : String = <span class=\"t\">I18n</span>.t(<span class=\"s\">&quot;formats.interpolation&quot;</span>, samples: (<span class=\"s\">&quot;dd-mm-yyyy | dd/mm/yyyy | &quot;</span> <span class=\"o\">+</span> <span class=\"s\">&quot;dd.mm.yyyy | yyyy-mm-dd | &quot;</span>) <span class=\"o\">+</span> <span class=\"s\">&quot;yyyy/mm/dd | yyyy.mm.dd&quot;</span>))","location":{"filename":"src/dynfork/fields/date.cr","line_number":138,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/date.cr#L138"},"def":{"name":"new","args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"default","default_value":"nil","external_name":"default","restriction":"String | ::Nil"},{"name":"placeholder","default_value":"\"\"","external_name":"placeholder","restriction":"String"},{"name":"max","default_value":"nil","external_name":"max","restriction":"String | ::Nil"},{"name":"min","default_value":"nil","external_name":"min","restriction":"String | ::Nil"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"I18n.t(\"formats.interpolation\", samples: (\"dd-mm-yyyy | dd/mm/yyyy | \" + \"dd.mm.yyyy | yyyy-mm-dd | \") + \"yyyy/mm/dd | yyyy.mm.dd\")","external_name":"hint","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(label, default, placeholder, max, min, hide, required, disabled, readonly, ignored, hint)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"default:String|Nil-instance-method","name":"default","doc":"Value by default.\n<br>\n_Example: 1970-01-01_","summary":"<p>Value by default.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/date.cr","line_number":22,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/date.cr#L22"},"def":{"name":"default","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @default).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::DateField#default cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"default?:String|Nil|Nil-instance-method","name":"default?","doc":"Value by default.\n<br>\n_Example: 1970-01-01_","summary":"<p>Value by default.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/date.cr","line_number":22,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/date.cr#L22"},"def":{"name":"default?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@default"}},{"html_id":"field_type:String-instance-method","name":"field_type","doc":"Field type - Structure Name.","summary":"<p>Field type - Structure Name.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/date.cr","line_number":12,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/date.cr#L12"},"def":{"name":"field_type","return_type":"String","visibility":"Public","body":"@field_type"}},{"html_id":"group:UInt8-instance-method","name":"group","doc":"To optimize field traversal in the `paladins/check()` method.\nWARNING: It is recommended not to change.","summary":"<p>To optimize field traversal in the <code>paladins/check()</code> method.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/date.cr","line_number":33,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/date.cr#L33"},"def":{"name":"group","return_type":"UInt8","visibility":"Public","body":"@group"}},{"html_id":"hint:String-instance-method","name":"hint","doc":"Additional explanation for the user.","summary":"<p>Additional explanation for the user.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/date.cr","line_number":30,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/date.cr#L30"},"def":{"name":"hint","return_type":"String","visibility":"Public","body":"@hint"}},{"html_id":"input_type:String|Nil-instance-method","name":"input_type","doc":"Html tag: input type=\"date\".","summary":"<p>Html tag: input type=&quot;date&quot;.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/date.cr","line_number":14,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/date.cr#L14"},"def":{"name":"input_type","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @input_type).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::DateField#input_type cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"input_type?:String|Nil|Nil-instance-method","name":"input_type?","doc":"Html tag: input type=\"date\".","summary":"<p>Html tag: input type=&quot;date&quot;.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/date.cr","line_number":14,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/date.cr#L14"},"def":{"name":"input_type?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@input_type"}},{"html_id":"max:String|Nil-instance-method","name":"max","doc":"The top value for entering a date.","summary":"<p>The top value for entering a date.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/date.cr","line_number":26,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/date.cr#L26"},"def":{"name":"max","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @max).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::DateField#max cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"max?:String|Nil|Nil-instance-method","name":"max?","doc":"The top value for entering a date.","summary":"<p>The top value for entering a date.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/date.cr","line_number":26,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/date.cr#L26"},"def":{"name":"max?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@max"}},{"html_id":"min:String|Nil-instance-method","name":"min","doc":"The lower value for entering a date.","summary":"<p>The lower value for entering a date.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/date.cr","line_number":28,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/date.cr#L28"},"def":{"name":"min","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @min).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::DateField#min cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"min?:String|Nil|Nil-instance-method","name":"min?","doc":"The lower value for entering a date.","summary":"<p>The lower value for entering a date.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/date.cr","line_number":28,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/date.cr#L28"},"def":{"name":"min?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@min"}},{"html_id":"placeholder:String-instance-method","name":"placeholder","doc":"Displays prompt text.","summary":"<p>Displays prompt text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/date.cr","line_number":24,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/date.cr#L24"},"def":{"name":"placeholder","return_type":"String","visibility":"Public","body":"@placeholder"}},{"html_id":"refrash_val_date(val:Time):Nil-instance-method","name":"refrash_val_date","doc":"For the `DynFork::QPaladins::Tools#refrash_fields` method.","summary":"<p>For the <code><a href=\"../../DynFork/QPaladins/Tools.html#refrash_fields%28doc_ptr%3APointer%28BSON%7CNil%29%29%3ANil-instance-method\">DynFork::QPaladins::Tools#refrash_fields</a></code> method.</p>","abstract":false,"args":[{"name":"val","external_name":"val","restriction":"Time"}],"args_string":"(val : Time) : Nil","args_html":"(val : Time) : Nil","location":{"filename":"src/dynfork/fields/date.cr","line_number":163,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/date.cr#L163"},"def":{"name":"refrash_val_date","args":[{"name":"val","external_name":"val","restriction":"Time"}],"return_type":"Nil","visibility":"Public","body":"@value = val.to_s(\"%F\")"}},{"html_id":"time_object?:Time|Nil-instance-method","name":"time_object?","doc":"Get time object from value.","summary":"<p>Get time object from value.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/date.cr","line_number":158,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/date.cr#L158"},"def":{"name":"time_object?","return_type":"Time | ::Nil","visibility":"Public","body":"if @value.nil?\nelse\n  self.date_parse(@value.as(String))\nend"}},{"html_id":"value:String|Nil-instance-method","name":"value","doc":"Sets the value of an element.\n<br>\n_Example: 1970-01-01_","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @value).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::DateField#value cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"value=(value:String|Nil)-instance-method","name":"value=","doc":"Sets the value of an element.\n<br>\n_Example: 1970-01-01_","summary":"<p>Sets the value of an element.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String | ::Nil"}],"args_string":"(value : String | Nil)","args_html":"(value : String | Nil)","location":{"filename":"src/dynfork/fields/date.cr","line_number":18,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/date.cr#L18"},"def":{"name":"value=","args":[{"name":"value","external_name":"value","restriction":"String | ::Nil"}],"visibility":"Public","body":"@value = value"}},{"html_id":"value?:String|Nil|Nil-instance-method","name":"value?","doc":"Sets the value of an element.\n<br>\n_Example: 1970-01-01_","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@value"}}]},{"html_id":"dynfork/DynFork/Fields/DateTimeField","path":"DynFork/Fields/DateTimeField.html","kind":"struct","full_name":"DynFork::Fields::DateTimeField","name":"DateTimeField","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},"ancestors":[{"html_id":"dynfork/DynFork/Globals/Date","kind":"module","full_name":"DynFork::Globals::Date","name":"Date"},{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},{"html_id":"dynfork/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dynfork/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/fields/date_time.cr","line_number":10,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/date_time.cr#L10"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"dynfork/DynFork/Globals/Date","kind":"module","full_name":"DynFork::Globals::Date","name":"Date"}],"namespace":{"html_id":"dynfork/DynFork/Fields","kind":"module","full_name":"DynFork::Fields","name":"Fields"},"doc":"A field for entering a date and time.\n<br>\n_**Formats:** dd-mm-yyyy hh:mm:ss | dd/mm/yyyy hh:mm:ss | dd.mm.yyyy hh:mm:ss |\ndd-mm-yyyyThh:mm:ss | dd/mm/yyyyThh:mm:ss | dd.mm.yyyyThh:mm:ss |\nyyyy-mm-dd hh:mm:ss | yyyy/mm/dd hh:mm:ss | yyyy.mm.dd hh:mm:ss |\nyyyy-mm-ddThh:mm:ss | yyyy/mm/ddThh:mm:ss | yyyy.mm.ddThh:mm:ss_","summary":"<p>A field for entering a date and time.</p>","constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"A field for entering a date and time.\n<br>\n_**Formats:** dd-mm-yyyy hh:mm:ss | dd/mm/yyyy hh:mm:ss | dd.mm.yyyy hh:mm:ss |\ndd-mm-yyyyThh:mm:ss | dd/mm/yyyyThh:mm:ss | dd.mm.yyyyThh:mm:ss |\nyyyy-mm-dd hh:mm:ss | yyyy/mm/dd hh:mm:ss | yyyy.mm.dd hh:mm:ss |\nyyyy-mm-ddThh:mm:ss | yyyy/mm/ddThh:mm:ss | yyyy.mm.ddThh:mm:ss_","summary":"<p>A field for entering a date and time.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/dynfork/fields/date_time.cr","line_number":10,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/date_time.cr#L10"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}},{"html_id":"new(label:String=\"\",default:String|Nil=nil,placeholder:String=\"\",max:String|Nil=nil,min:String|Nil=nil,hide:Bool=false,required:Bool=false,disabled:Bool=false,readonly:Bool=false,ignored:Bool=false,hint:String=I18n.t(\"formats.interpolation\",samples:((((\"dd-mm-yyyyhh:mm:ss|dd/mm/yyyyhh:mm:ss|\"+\"dd.mm.yyyyhh:mm:ss|dd-mm-yyyyThh:mm:ss|\")+\"dd/mm/yyyyThh:mm:ss|dd.mm.yyyyThh:mm:ss|\")+\"yyyy-mm-ddhh:mm:ss|yyyy/mm/ddhh:mm:ss|\")+\"yyyy.mm.ddhh:mm:ss|yyyy-mm-ddThh:mm:ss|\")+\"yyyy/mm/ddThh:mm:ss|yyyy.mm.ddThh:mm:ss\"))-class-method","name":"new","abstract":false,"args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"default","default_value":"nil","external_name":"default","restriction":"String | ::Nil"},{"name":"placeholder","default_value":"\"\"","external_name":"placeholder","restriction":"String"},{"name":"max","default_value":"nil","external_name":"max","restriction":"String | ::Nil"},{"name":"min","default_value":"nil","external_name":"min","restriction":"String | ::Nil"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"I18n.t(\"formats.interpolation\", samples: ((((\"dd-mm-yyyy hh:mm:ss | dd/mm/yyyy hh:mm:ss | \" + \"dd.mm.yyyy hh:mm:ss | dd-mm-yyyyThh:mm:ss | \") + \"dd/mm/yyyyThh:mm:ss | dd.mm.yyyyThh:mm:ss | \") + \"yyyy-mm-dd hh:mm:ss | yyyy/mm/dd hh:mm:ss | \") + \"yyyy.mm.dd hh:mm:ss | yyyy-mm-ddThh:mm:ss | \") + \"yyyy/mm/ddThh:mm:ss | yyyy.mm.ddThh:mm:ss\")","external_name":"hint","restriction":"String"}],"args_string":"(label : String = \"\", default : String | Nil = nil, placeholder : String = \"\", max : String | Nil = nil, min : String | Nil = nil, hide : Bool = false, required : Bool = false, disabled : Bool = false, readonly : Bool = false, ignored : Bool = false, hint : String = I18n.t(\"formats.interpolation\", samples: ((((\"dd-mm-yyyy hh:mm:ss | dd/mm/yyyy hh:mm:ss | \" + \"dd.mm.yyyy hh:mm:ss | dd-mm-yyyyThh:mm:ss | \") + \"dd/mm/yyyyThh:mm:ss | dd.mm.yyyyThh:mm:ss | \") + \"yyyy-mm-dd hh:mm:ss | yyyy/mm/dd hh:mm:ss | \") + \"yyyy.mm.dd hh:mm:ss | yyyy-mm-ddThh:mm:ss | \") + \"yyyy/mm/ddThh:mm:ss | yyyy.mm.ddThh:mm:ss\"))","args_html":"(label : String = <span class=\"s\">&quot;&quot;</span>, default : String | Nil = <span class=\"n\">nil</span>, placeholder : String = <span class=\"s\">&quot;&quot;</span>, max : String | Nil = <span class=\"n\">nil</span>, min : String | Nil = <span class=\"n\">nil</span>, hide : Bool = <span class=\"n\">false</span>, required : Bool = <span class=\"n\">false</span>, disabled : Bool = <span class=\"n\">false</span>, readonly : Bool = <span class=\"n\">false</span>, ignored : Bool = <span class=\"n\">false</span>, hint : String = <span class=\"t\">I18n</span>.t(<span class=\"s\">&quot;formats.interpolation&quot;</span>, samples: ((((<span class=\"s\">&quot;dd-mm-yyyy hh:mm:ss | dd/mm/yyyy hh:mm:ss | &quot;</span> <span class=\"o\">+</span> <span class=\"s\">&quot;dd.mm.yyyy hh:mm:ss | dd-mm-yyyyThh:mm:ss | &quot;</span>) <span class=\"o\">+</span> <span class=\"s\">&quot;dd/mm/yyyyThh:mm:ss | dd.mm.yyyyThh:mm:ss | &quot;</span>) <span class=\"o\">+</span> <span class=\"s\">&quot;yyyy-mm-dd hh:mm:ss | yyyy/mm/dd hh:mm:ss | &quot;</span>) <span class=\"o\">+</span> <span class=\"s\">&quot;yyyy.mm.dd hh:mm:ss | yyyy-mm-ddThh:mm:ss | &quot;</span>) <span class=\"o\">+</span> <span class=\"s\">&quot;yyyy/mm/ddThh:mm:ss | yyyy.mm.ddThh:mm:ss&quot;</span>))","location":{"filename":"src/dynfork/fields/date_time.cr","line_number":140,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/date_time.cr#L140"},"def":{"name":"new","args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"default","default_value":"nil","external_name":"default","restriction":"String | ::Nil"},{"name":"placeholder","default_value":"\"\"","external_name":"placeholder","restriction":"String"},{"name":"max","default_value":"nil","external_name":"max","restriction":"String | ::Nil"},{"name":"min","default_value":"nil","external_name":"min","restriction":"String | ::Nil"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"I18n.t(\"formats.interpolation\", samples: ((((\"dd-mm-yyyy hh:mm:ss | dd/mm/yyyy hh:mm:ss | \" + \"dd.mm.yyyy hh:mm:ss | dd-mm-yyyyThh:mm:ss | \") + \"dd/mm/yyyyThh:mm:ss | dd.mm.yyyyThh:mm:ss | \") + \"yyyy-mm-dd hh:mm:ss | yyyy/mm/dd hh:mm:ss | \") + \"yyyy.mm.dd hh:mm:ss | yyyy-mm-ddThh:mm:ss | \") + \"yyyy/mm/ddThh:mm:ss | yyyy.mm.ddThh:mm:ss\")","external_name":"hint","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(label, default, placeholder, max, min, hide, required, disabled, readonly, ignored, hint)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"default:String|Nil-instance-method","name":"default","doc":"Value by default.\n<br>\n_Example: 1970-01-01T00:00:00_","summary":"<p>Value by default.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/date_time.cr","line_number":24,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/date_time.cr#L24"},"def":{"name":"default","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @default).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::DateTimeField#default cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"default?:String|Nil|Nil-instance-method","name":"default?","doc":"Value by default.\n<br>\n_Example: 1970-01-01T00:00:00_","summary":"<p>Value by default.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/date_time.cr","line_number":24,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/date_time.cr#L24"},"def":{"name":"default?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@default"}},{"html_id":"field_type:String-instance-method","name":"field_type","doc":"Field type - Structure Name.","summary":"<p>Field type - Structure Name.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/date_time.cr","line_number":14,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/date_time.cr#L14"},"def":{"name":"field_type","return_type":"String","visibility":"Public","body":"@field_type"}},{"html_id":"group:UInt8-instance-method","name":"group","doc":"To optimize field traversal in the `paladins/check()` method.\nWARNING: It is recommended not to change.","summary":"<p>To optimize field traversal in the <code>paladins/check()</code> method.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/date_time.cr","line_number":35,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/date_time.cr#L35"},"def":{"name":"group","return_type":"UInt8","visibility":"Public","body":"@group"}},{"html_id":"hint:String-instance-method","name":"hint","doc":"Additional explanation for the user.","summary":"<p>Additional explanation for the user.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/date_time.cr","line_number":32,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/date_time.cr#L32"},"def":{"name":"hint","return_type":"String","visibility":"Public","body":"@hint"}},{"html_id":"input_type:String|Nil-instance-method","name":"input_type","doc":"Html tag: input type=\"datetime\".","summary":"<p>Html tag: input type=&quot;datetime&quot;.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/date_time.cr","line_number":16,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/date_time.cr#L16"},"def":{"name":"input_type","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @input_type).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::DateTimeField#input_type cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"input_type?:String|Nil|Nil-instance-method","name":"input_type?","doc":"Html tag: input type=\"datetime\".","summary":"<p>Html tag: input type=&quot;datetime&quot;.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/date_time.cr","line_number":16,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/date_time.cr#L16"},"def":{"name":"input_type?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@input_type"}},{"html_id":"max:String|Nil-instance-method","name":"max","doc":"The top value for entering a date and time.","summary":"<p>The top value for entering a date and time.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/date_time.cr","line_number":28,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/date_time.cr#L28"},"def":{"name":"max","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @max).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::DateTimeField#max cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"max?:String|Nil|Nil-instance-method","name":"max?","doc":"The top value for entering a date and time.","summary":"<p>The top value for entering a date and time.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/date_time.cr","line_number":28,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/date_time.cr#L28"},"def":{"name":"max?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@max"}},{"html_id":"min:String|Nil-instance-method","name":"min","doc":"The lower value for entering a date and time.","summary":"<p>The lower value for entering a date and time.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/date_time.cr","line_number":30,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/date_time.cr#L30"},"def":{"name":"min","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @min).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::DateTimeField#min cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"min?:String|Nil|Nil-instance-method","name":"min?","doc":"The lower value for entering a date and time.","summary":"<p>The lower value for entering a date and time.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/date_time.cr","line_number":30,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/date_time.cr#L30"},"def":{"name":"min?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@min"}},{"html_id":"placeholder:String-instance-method","name":"placeholder","doc":"Displays prompt text.","summary":"<p>Displays prompt text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/date_time.cr","line_number":26,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/date_time.cr#L26"},"def":{"name":"placeholder","return_type":"String","visibility":"Public","body":"@placeholder"}},{"html_id":"refrash_val_datetime(val:Time):Nil-instance-method","name":"refrash_val_datetime","doc":"For the `DynFork::QPaladins::Tools#refrash_fields` method.","summary":"<p>For the <code><a href=\"../../DynFork/QPaladins/Tools.html#refrash_fields%28doc_ptr%3APointer%28BSON%7CNil%29%29%3ANil-instance-method\">DynFork::QPaladins::Tools#refrash_fields</a></code> method.</p>","abstract":false,"args":[{"name":"val","external_name":"val","restriction":"Time"}],"args_string":"(val : Time) : Nil","args_html":"(val : Time) : Nil","location":{"filename":"src/dynfork/fields/date_time.cr","line_number":168,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/date_time.cr#L168"},"def":{"name":"refrash_val_datetime","args":[{"name":"val","external_name":"val","restriction":"Time"}],"return_type":"Nil","visibility":"Public","body":"@value = val.to_s(\"%FT%H:%M:%S\")"}},{"html_id":"time_object?:Time|Nil-instance-method","name":"time_object?","doc":"Get time object from value.","summary":"<p>Get time object from value.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/date_time.cr","line_number":163,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/date_time.cr#L163"},"def":{"name":"time_object?","return_type":"Time | ::Nil","visibility":"Public","body":"if @value.nil?\nelse\n  self.datetime_parse(@value.as(String))\nend"}},{"html_id":"value:String|Nil-instance-method","name":"value","doc":"Sets the value of an element.\n<br>\n_Example: 1970-01-01T00:00:00_","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @value).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::DateTimeField#value cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"value=(value:String|Nil)-instance-method","name":"value=","doc":"Sets the value of an element.\n<br>\n_Example: 1970-01-01T00:00:00_","summary":"<p>Sets the value of an element.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String | ::Nil"}],"args_string":"(value : String | Nil)","args_html":"(value : String | Nil)","location":{"filename":"src/dynfork/fields/date_time.cr","line_number":20,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/date_time.cr#L20"},"def":{"name":"value=","args":[{"name":"value","external_name":"value","restriction":"String | ::Nil"}],"visibility":"Public","body":"@value = value"}},{"html_id":"value?:String|Nil|Nil-instance-method","name":"value?","doc":"Sets the value of an element.\n<br>\n_Example: 1970-01-01T00:00:00_","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@value"}}]},{"html_id":"dynfork/DynFork/Fields/EmailField","path":"DynFork/Fields/EmailField.html","kind":"struct","full_name":"DynFork::Fields::EmailField","name":"EmailField","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},"ancestors":[{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},{"html_id":"dynfork/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dynfork/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/fields/email.cr","line_number":5,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/email.cr#L5"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Fields","kind":"module","full_name":"DynFork::Fields","name":"Fields"},"doc":"Field for entering Email addresses.","summary":"<p>Field for entering Email addresses.</p>","constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"Field for entering Email addresses.","summary":"<p>Field for entering Email addresses.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/dynfork/fields/email.cr","line_number":5,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/email.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}},{"html_id":"new(label:String=\"\",default:String|Nil=nil,placeholder:String=\"\",maxlength:UInt32|Nil=320,hide:Bool=false,unique:Bool=false,required:Bool=false,disabled:Bool=false,readonly:Bool=false,ignored:Bool=false,hint:String=\"\")-class-method","name":"new","abstract":false,"args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"default","default_value":"nil","external_name":"default","restriction":"String | ::Nil"},{"name":"placeholder","default_value":"\"\"","external_name":"placeholder","restriction":"String"},{"name":"maxlength","default_value":"320","external_name":"maxlength","restriction":"UInt32 | ::Nil"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"unique","default_value":"false","external_name":"unique","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"}],"args_string":"(label : String = \"\", default : String | Nil = nil, placeholder : String = \"\", maxlength : UInt32 | Nil = 320, hide : Bool = false, unique : Bool = false, required : Bool = false, disabled : Bool = false, readonly : Bool = false, ignored : Bool = false, hint : String = \"\")","args_html":"(label : String = <span class=\"s\">&quot;&quot;</span>, default : String | Nil = <span class=\"n\">nil</span>, placeholder : String = <span class=\"s\">&quot;&quot;</span>, maxlength : UInt32 | Nil = <span class=\"n\">320</span>, hide : Bool = <span class=\"n\">false</span>, unique : Bool = <span class=\"n\">false</span>, required : Bool = <span class=\"n\">false</span>, disabled : Bool = <span class=\"n\">false</span>, readonly : Bool = <span class=\"n\">false</span>, ignored : Bool = <span class=\"n\">false</span>, hint : String = <span class=\"s\">&quot;&quot;</span>)","location":{"filename":"src/dynfork/fields/email.cr","line_number":127,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/email.cr#L127"},"def":{"name":"new","args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"default","default_value":"nil","external_name":"default","restriction":"String | ::Nil"},{"name":"placeholder","default_value":"\"\"","external_name":"placeholder","restriction":"String"},{"name":"maxlength","default_value":"320","external_name":"maxlength","restriction":"UInt32 | ::Nil"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"unique","default_value":"false","external_name":"unique","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(label, default, placeholder, maxlength, hide, unique, required, disabled, readonly, ignored, hint)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"default:String|Nil-instance-method","name":"default","doc":"Value by default.","summary":"<p>Value by default.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/email.cr","line_number":13,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/email.cr#L13"},"def":{"name":"default","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @default).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::EmailField#default cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"default?:String|Nil|Nil-instance-method","name":"default?","doc":"Value by default.","summary":"<p>Value by default.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/email.cr","line_number":13,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/email.cr#L13"},"def":{"name":"default?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@default"}},{"html_id":"field_type:String-instance-method","name":"field_type","doc":"Field type - Structure Name.","summary":"<p>Field type - Structure Name.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/email.cr","line_number":7,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/email.cr#L7"},"def":{"name":"field_type","return_type":"String","visibility":"Public","body":"@field_type"}},{"html_id":"group:UInt8-instance-method","name":"group","doc":"To optimize field traversal in the `paladins/check()` method.\nWARNING: It is recommended not to change.","summary":"<p>To optimize field traversal in the <code>paladins/check()</code> method.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/email.cr","line_number":24,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/email.cr#L24"},"def":{"name":"group","return_type":"UInt8","visibility":"Public","body":"@group"}},{"html_id":"input_type:String|Nil-instance-method","name":"input_type","doc":"Html tag: input type=\"email\".","summary":"<p>Html tag: input type=&quot;email&quot;.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/email.cr","line_number":9,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/email.cr#L9"},"def":{"name":"input_type","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @input_type).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::EmailField#input_type cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"input_type?:String|Nil|Nil-instance-method","name":"input_type?","doc":"Html tag: input type=\"email\".","summary":"<p>Html tag: input type=&quot;email&quot;.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/email.cr","line_number":9,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/email.cr#L9"},"def":{"name":"input_type?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@input_type"}},{"html_id":"maxlength:UInt32|Nil-instance-method","name":"maxlength","doc":"The maximum number of characters allowed in the text.","summary":"<p>The maximum number of characters allowed in the text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/email.cr","line_number":17,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/email.cr#L17"},"def":{"name":"maxlength","return_type":"UInt32 | ::Nil","visibility":"Public","body":"if (value = @maxlength).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::EmailField#maxlength cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"maxlength?:UInt32|Nil|Nil-instance-method","name":"maxlength?","doc":"The maximum number of characters allowed in the text.","summary":"<p>The maximum number of characters allowed in the text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/email.cr","line_number":17,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/email.cr#L17"},"def":{"name":"maxlength?","return_type":"UInt32 | ::Nil | ::Nil","visibility":"Public","body":"@maxlength"}},{"html_id":"minlength:UInt32|Nil-instance-method","name":"minlength","doc":"The minimum number of characters allowed in the text.","summary":"<p>The minimum number of characters allowed in the text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/email.cr","line_number":19,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/email.cr#L19"},"def":{"name":"minlength","return_type":"UInt32 | ::Nil","visibility":"Public","body":"if (value = @minlength).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::EmailField#minlength cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"minlength?:UInt32|Nil|Nil-instance-method","name":"minlength?","doc":"The minimum number of characters allowed in the text.","summary":"<p>The minimum number of characters allowed in the text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/email.cr","line_number":19,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/email.cr#L19"},"def":{"name":"minlength?","return_type":"UInt32 | ::Nil | ::Nil","visibility":"Public","body":"@minlength"}},{"html_id":"placeholder:String-instance-method","name":"placeholder","doc":"Displays prompt text.","summary":"<p>Displays prompt text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/email.cr","line_number":15,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/email.cr#L15"},"def":{"name":"placeholder","return_type":"String","visibility":"Public","body":"@placeholder"}},{"html_id":"refrash_val_str(val:String):Nil-instance-method","name":"refrash_val_str","doc":"For the `DynFork::QPaladins::Tools#refrash_fields` method.","summary":"<p>For the <code><a href=\"../../DynFork/QPaladins/Tools.html#refrash_fields%28doc_ptr%3APointer%28BSON%7CNil%29%29%3ANil-instance-method\">DynFork::QPaladins::Tools#refrash_fields</a></code> method.</p>","abstract":false,"args":[{"name":"val","external_name":"val","restriction":"String"}],"args_string":"(val : String) : Nil","args_html":"(val : String) : Nil","location":{"filename":"src/dynfork/fields/email.cr","line_number":145,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/email.cr#L145"},"def":{"name":"refrash_val_str","args":[{"name":"val","external_name":"val","restriction":"String"}],"return_type":"Nil","visibility":"Public","body":"@value = val"}},{"html_id":"unique?:Bool-instance-method","name":"unique?","doc":"The unique value of a field in a collection.","summary":"<p>The unique value of a field in a collection.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/email.cr","line_number":21,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/email.cr#L21"},"def":{"name":"unique?","return_type":"Bool","visibility":"Public","body":"@unique"}},{"html_id":"value:String|Nil-instance-method","name":"value","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @value).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::EmailField#value cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"value=(value:String|Nil)-instance-method","name":"value=","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String | ::Nil"}],"args_string":"(value : String | Nil)","args_html":"(value : String | Nil)","location":{"filename":"src/dynfork/fields/email.cr","line_number":11,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/email.cr#L11"},"def":{"name":"value=","args":[{"name":"value","external_name":"value","restriction":"String | ::Nil"}],"visibility":"Public","body":"@value = value"}},{"html_id":"value?:String|Nil|Nil-instance-method","name":"value?","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@value"}}]},{"html_id":"dynfork/DynFork/Fields/F64Field","path":"DynFork/Fields/F64Field.html","kind":"struct","full_name":"DynFork::Fields::F64Field","name":"F64Field","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},"ancestors":[{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},{"html_id":"dynfork/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dynfork/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/fields/numbers.cr","line_number":162,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L162"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Fields","kind":"module","full_name":"DynFork::Fields","name":"Fields"},"doc":"Field for entering float 64-bit numbers.","summary":"<p>Field for entering float 64-bit numbers.</p>","constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"Field for entering float 64-bit numbers.","summary":"<p>Field for entering float 64-bit numbers.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/dynfork/fields/numbers.cr","line_number":162,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L162"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}},{"html_id":"new(label:String=\"\",default:Float64|Nil=nil,input_type:String|Nil=\"number\",placeholder:String=\"\",max:Float64|Nil=Float64::MAX,min:Float64|Nil=Float64::MIN,step:Float64|Nil=1.0,hide:Bool=false,unique:Bool=false,required:Bool=false,disabled:Bool=false,readonly:Bool=false,ignored:Bool=false,hint:String=\"\",warning:String=\"\")-class-method","name":"new","abstract":false,"args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"default","default_value":"nil","external_name":"default","restriction":"Float64 | ::Nil"},{"name":"input_type","default_value":"\"number\"","external_name":"input_type","restriction":"String | ::Nil"},{"name":"placeholder","default_value":"\"\"","external_name":"placeholder","restriction":"String"},{"name":"max","default_value":"Float64::MAX","external_name":"max","restriction":"Float64 | ::Nil"},{"name":"min","default_value":"Float64::MIN","external_name":"min","restriction":"Float64 | ::Nil"},{"name":"step","default_value":"1.0","external_name":"step","restriction":"Float64 | ::Nil"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"unique","default_value":"false","external_name":"unique","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"},{"name":"warning","default_value":"\"\"","external_name":"warning","restriction":"String"}],"args_string":"(label : String = \"\", default : Float64 | Nil = nil, input_type : String | Nil = \"number\", placeholder : String = \"\", max : Float64 | Nil = Float64::MAX, min : Float64 | Nil = Float64::MIN, step : Float64 | Nil = 1.0, hide : Bool = false, unique : Bool = false, required : Bool = false, disabled : Bool = false, readonly : Bool = false, ignored : Bool = false, hint : String = \"\", warning : String = \"\")","args_html":"(label : String = <span class=\"s\">&quot;&quot;</span>, default : Float64 | Nil = <span class=\"n\">nil</span>, input_type : String | Nil = <span class=\"s\">&quot;number&quot;</span>, placeholder : String = <span class=\"s\">&quot;&quot;</span>, max : Float64 | Nil = <span class=\"t\">Float64</span><span class=\"t\">::</span><span class=\"t\">MAX</span>, min : Float64 | Nil = <span class=\"t\">Float64</span><span class=\"t\">::</span><span class=\"t\">MIN</span>, step : Float64 | Nil = <span class=\"n\">1.0</span>, hide : Bool = <span class=\"n\">false</span>, unique : Bool = <span class=\"n\">false</span>, required : Bool = <span class=\"n\">false</span>, disabled : Bool = <span class=\"n\">false</span>, readonly : Bool = <span class=\"n\">false</span>, ignored : Bool = <span class=\"n\">false</span>, hint : String = <span class=\"s\">&quot;&quot;</span>, warning : String = <span class=\"s\">&quot;&quot;</span>)","location":{"filename":"src/dynfork/fields/numbers.cr","line_number":277,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L277"},"def":{"name":"new","args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"default","default_value":"nil","external_name":"default","restriction":"Float64 | ::Nil"},{"name":"input_type","default_value":"\"number\"","external_name":"input_type","restriction":"String | ::Nil"},{"name":"placeholder","default_value":"\"\"","external_name":"placeholder","restriction":"String"},{"name":"max","default_value":"Float64::MAX","external_name":"max","restriction":"Float64 | ::Nil"},{"name":"min","default_value":"Float64::MIN","external_name":"min","restriction":"Float64 | ::Nil"},{"name":"step","default_value":"1.0","external_name":"step","restriction":"Float64 | ::Nil"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"unique","default_value":"false","external_name":"unique","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"},{"name":"warning","default_value":"\"\"","external_name":"warning","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(label, default, input_type, placeholder, max, min, step, hide, unique, required, disabled, readonly, ignored, hint, warning)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"default:Float64|Nil-instance-method","name":"default","doc":"Value by default.","summary":"<p>Value by default.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/numbers.cr","line_number":170,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L170"},"def":{"name":"default","return_type":"Float64 | ::Nil","visibility":"Public","body":"if (value = @default).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::F64Field#default cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"default?:Float64|Nil|Nil-instance-method","name":"default?","doc":"Value by default.","summary":"<p>Value by default.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/numbers.cr","line_number":170,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L170"},"def":{"name":"default?","return_type":"Float64 | ::Nil | ::Nil","visibility":"Public","body":"@default"}},{"html_id":"extract_default_f64?:Float64|Nil-instance-method","name":"extract_default_f64?","doc":"For the `DynFork::QPaladins::Check#check` method.","summary":"<p>For the <code><a href=\"../../DynFork/QPaladins/Check.html#check%28collection_ptr%3APointer%28Mongo%3A%3ACollection%29%2Csave%3F%3ABool%3Dfalse%29%3ADynFork%3A%3AGlobals%3A%3AOutputData-instance-method\">DynFork::QPaladins::Check#check</a></code> method.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/numbers.cr","line_number":310,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L310"},"def":{"name":"extract_default_f64?","return_type":"Float64 | ::Nil","visibility":"Public","body":"@default"}},{"html_id":"extract_val_f64?:Float64|Nil-instance-method","name":"extract_val_f64?","doc":"For the `DynFork::QPaladins::Check#check` method.","summary":"<p>For the <code><a href=\"../../DynFork/QPaladins/Check.html#check%28collection_ptr%3APointer%28Mongo%3A%3ACollection%29%2Csave%3F%3ABool%3Dfalse%29%3ADynFork%3A%3AGlobals%3A%3AOutputData-instance-method\">DynFork::QPaladins::Check#check</a></code> method.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/numbers.cr","line_number":305,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L305"},"def":{"name":"extract_val_f64?","return_type":"Float64 | ::Nil","visibility":"Public","body":"@value"}},{"html_id":"field_type:String-instance-method","name":"field_type","doc":"Field type - Structure Name.","summary":"<p>Field type - Structure Name.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/numbers.cr","line_number":164,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L164"},"def":{"name":"field_type","return_type":"String","visibility":"Public","body":"@field_type"}},{"html_id":"finance_divide(num:Float|Int|BigInt|BigRational|BigDecimal|String):Nil-instance-method","name":"finance_divide","doc":"Divide `value` by some number.\nNOTE: For secure calculations, `BigDecimal` is used.\nNOTE: Rounded to two decimal places.\nNOTE: Banikir rounding is used.\nNOTE: For currencies, use the <a href=\"https://github.com/crystal-money/money\" target=\"_blank\">Money</a> shard.\n\nExample:\n```\nmodel_name = ModelName.new\nmodel_name.amount.value = 12.5\nmodel_name.amount.finance_divide(2)\nputs model_name.amount.value # => 6.25\n```\n","summary":"<p>Divide <code><a href=\"../../DynFork/Fields/F64Field.html#value%3AFloat64%7CNil-instance-method\">#value</a></code> by some number.</p>","abstract":false,"args":[{"name":"num","external_name":"num","restriction":"Float | Int | BigInt | BigRational | BigDecimal | String"}],"args_string":"(num : Float | Int | BigInt | BigRational | BigDecimal | String) : Nil","args_html":"(num : Float | Int | BigInt | BigRational | BigDecimal | String) : Nil","location":{"filename":"src/dynfork/fields/numbers.cr","line_number":365,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L365"},"def":{"name":"finance_divide","args":[{"name":"num","external_name":"num","restriction":"Float | Int | BigInt | BigRational | BigDecimal | String"}],"return_type":"Nil","visibility":"Public","body":"if @value.nil?\n  (@value = 0)\nend\n@value = (((BigDecimal.new(@value.not_nil!)) / (BigDecimal.new(num))).round(2)).to_f64\n"}},{"html_id":"finance_minus(num:Float|Int|BigInt|BigRational|BigDecimal|String):Nil-instance-method","name":"finance_minus","doc":"Subtract some number to the “value”.\nNOTE: For secure calculations, `BigDecimal` is used.\nNOTE: Rounded to two decimal places.\nNOTE: Banikir rounding is used.\nNOTE: For currencies, use the <a href=\"https://github.com/crystal-money/money\" target=\"_blank\">Money</a> shard.\n\nExample:\n```\nmodel_name = ModelName.new\nmodel_name.amount.value = 12.5\nmodel_name.amount.finance_minus(6.25)\nputs model_name.amount.value # => 6.25\n```\n","summary":"<p>Subtract some number to the “value”.</p>","abstract":false,"args":[{"name":"num","external_name":"num","restriction":"Float | Int | BigInt | BigRational | BigDecimal | String"}],"args_string":"(num : Float | Int | BigInt | BigRational | BigDecimal | String) : Nil","args_html":"(num : Float | Int | BigInt | BigRational | BigDecimal | String) : Nil","location":{"filename":"src/dynfork/fields/numbers.cr","line_number":346,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L346"},"def":{"name":"finance_minus","args":[{"name":"num","external_name":"num","restriction":"Float | Int | BigInt | BigRational | BigDecimal | String"}],"return_type":"Nil","visibility":"Public","body":"if @value.nil?\n  (@value = 0)\nend\n@value = (((BigDecimal.new(@value.not_nil!)) - (BigDecimal.new(num))).round(2)).to_f64\n"}},{"html_id":"finance_multiply(num:Float|Int|BigInt|BigRational|BigDecimal|String):Nil-instance-method","name":"finance_multiply","doc":"Multiply `value` by some number.\nNOTE: For secure calculations, `BigDecimal` is used.\nNOTE: Rounded to two decimal places.\nNOTE: Banikir rounding is used.\nNOTE: For currencies, use the <a href=\"https://github.com/crystal-money/money\" target=\"_blank\">Money</a> shard.\n\nExample:\n```\nmodel_name = ModelName.new\nmodel_name.amount.value = 12.5\nmodel_name.amount.finance_multiply(2)\nputs model_name.amount.value # => 25.0\n```\n","summary":"<p>Multiply <code><a href=\"../../DynFork/Fields/F64Field.html#value%3AFloat64%7CNil-instance-method\">#value</a></code> by some number.</p>","abstract":false,"args":[{"name":"num","external_name":"num","restriction":"Float | Int | BigInt | BigRational | BigDecimal | String"}],"args_string":"(num : Float | Int | BigInt | BigRational | BigDecimal | String) : Nil","args_html":"(num : Float | Int | BigInt | BigRational | BigDecimal | String) : Nil","location":{"filename":"src/dynfork/fields/numbers.cr","line_number":384,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L384"},"def":{"name":"finance_multiply","args":[{"name":"num","external_name":"num","restriction":"Float | Int | BigInt | BigRational | BigDecimal | String"}],"return_type":"Nil","visibility":"Public","body":"if @value.nil?\n  (@value = 0)\nend\n@value = (((BigDecimal.new(@value.not_nil!)) * (BigDecimal.new(num))).round(2)).to_f64\n"}},{"html_id":"finance_plus(num:Float|Int|BigInt|BigRational|BigDecimal|String):Nil-instance-method","name":"finance_plus","doc":"Add some number to the `value`.\nNOTE: For secure calculations, `BigDecimal` is used.\nNOTE: Rounded to two decimal places.\nNOTE: Banikir rounding is used.\nNOTE: For currencies, use the <a href=\"https://github.com/crystal-money/money\" target=\"_blank\">Money</a> shard.\n\nExample:\n```\nmodel_name = ModelName.new\nmodel_name.amount.finance_plus(12.5)\nputs model_name.amount.value # => 12.5\n```\n","summary":"<p>Add some number to the <code><a href=\"../../DynFork/Fields/F64Field.html#value%3AFloat64%7CNil-instance-method\">#value</a></code>.</p>","abstract":false,"args":[{"name":"num","external_name":"num","restriction":"Float | Int | BigInt | BigRational | BigDecimal | String"}],"args_string":"(num : Float | Int | BigInt | BigRational | BigDecimal | String) : Nil","args_html":"(num : Float | Int | BigInt | BigRational | BigDecimal | String) : Nil","location":{"filename":"src/dynfork/fields/numbers.cr","line_number":327,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L327"},"def":{"name":"finance_plus","args":[{"name":"num","external_name":"num","restriction":"Float | Int | BigInt | BigRational | BigDecimal | String"}],"return_type":"Nil","visibility":"Public","body":"if @value.nil?\n  (@value = 0)\nend\n@value = (((BigDecimal.new(@value.not_nil!)) + (BigDecimal.new(num))).round(2)).to_f64\n"}},{"html_id":"group:UInt8-instance-method","name":"group","doc":"To optimize field traversal in the `paladins/check()` method.\nWARNING: It is recommended not to change.","summary":"<p>To optimize field traversal in the <code>paladins/check()</code> method.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/numbers.cr","line_number":183,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L183"},"def":{"name":"group","return_type":"UInt8","visibility":"Public","body":"@group"}},{"html_id":"input_type:String|Nil-instance-method","name":"input_type","doc":"Html tag: input type=\"number|range\".","summary":"<p>Html tag: input type=&quot;number|range&quot;.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/numbers.cr","line_number":166,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L166"},"def":{"name":"input_type","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @input_type).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::F64Field#input_type cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"input_type?:String|Nil|Nil-instance-method","name":"input_type?","doc":"Html tag: input type=\"number|range\".","summary":"<p>Html tag: input type=&quot;number|range&quot;.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/numbers.cr","line_number":166,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L166"},"def":{"name":"input_type?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@input_type"}},{"html_id":"max:Float64|Nil-instance-method","name":"max","doc":"The maximum number of characters allowed in the text.","summary":"<p>The maximum number of characters allowed in the text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/numbers.cr","line_number":174,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L174"},"def":{"name":"max","return_type":"Float64 | ::Nil","visibility":"Public","body":"if (value = @max).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::F64Field#max cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"max?:Float64|Nil|Nil-instance-method","name":"max?","doc":"The maximum number of characters allowed in the text.","summary":"<p>The maximum number of characters allowed in the text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/numbers.cr","line_number":174,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L174"},"def":{"name":"max?","return_type":"Float64 | ::Nil | ::Nil","visibility":"Public","body":"@max"}},{"html_id":"min:Float64|Nil-instance-method","name":"min","doc":"The minimum number of characters allowed in the text.","summary":"<p>The minimum number of characters allowed in the text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/numbers.cr","line_number":176,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L176"},"def":{"name":"min","return_type":"Float64 | ::Nil","visibility":"Public","body":"if (value = @min).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::F64Field#min cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"min?:Float64|Nil|Nil-instance-method","name":"min?","doc":"The minimum number of characters allowed in the text.","summary":"<p>The minimum number of characters allowed in the text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/numbers.cr","line_number":176,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L176"},"def":{"name":"min?","return_type":"Float64 | ::Nil | ::Nil","visibility":"Public","body":"@min"}},{"html_id":"placeholder:String-instance-method","name":"placeholder","doc":"Displays prompt text.","summary":"<p>Displays prompt text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/numbers.cr","line_number":172,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L172"},"def":{"name":"placeholder","return_type":"String","visibility":"Public","body":"@placeholder"}},{"html_id":"refrash_val_f64(val:Float64):Nil-instance-method","name":"refrash_val_f64","doc":"For the `DynFork::QPaladins::Tools#refrash_fields` method.","summary":"<p>For the <code><a href=\"../../DynFork/QPaladins/Tools.html#refrash_fields%28doc_ptr%3APointer%28BSON%7CNil%29%29%3ANil-instance-method\">DynFork::QPaladins::Tools#refrash_fields</a></code> method.</p>","abstract":false,"args":[{"name":"val","external_name":"val","restriction":"Float64"}],"args_string":"(val : Float64) : Nil","args_html":"(val : Float64) : Nil","location":{"filename":"src/dynfork/fields/numbers.cr","line_number":300,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L300"},"def":{"name":"refrash_val_f64","args":[{"name":"val","external_name":"val","restriction":"Float64"}],"return_type":"Nil","visibility":"Public","body":"@value = val"}},{"html_id":"step:Float64|Nil-instance-method","name":"step","doc":"Increment step for numeric fields.","summary":"<p>Increment step for numeric fields.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/numbers.cr","line_number":178,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L178"},"def":{"name":"step","return_type":"Float64 | ::Nil","visibility":"Public","body":"if (value = @step).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::F64Field#step cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"step?:Float64|Nil|Nil-instance-method","name":"step?","doc":"Increment step for numeric fields.","summary":"<p>Increment step for numeric fields.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/numbers.cr","line_number":178,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L178"},"def":{"name":"step?","return_type":"Float64 | ::Nil | ::Nil","visibility":"Public","body":"@step"}},{"html_id":"unique?:Bool-instance-method","name":"unique?","doc":"The unique value of a field in a collection.","summary":"<p>The unique value of a field in a collection.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/numbers.cr","line_number":180,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L180"},"def":{"name":"unique?","return_type":"Bool","visibility":"Public","body":"@unique"}},{"html_id":"value:Float64|Nil-instance-method","name":"value","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value","return_type":"Float64 | ::Nil","visibility":"Public","body":"if (value = @value).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::F64Field#value cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"value=(value:Float64|Nil)-instance-method","name":"value=","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Float64 | ::Nil"}],"args_string":"(value : Float64 | Nil)","args_html":"(value : Float64 | Nil)","location":{"filename":"src/dynfork/fields/numbers.cr","line_number":168,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L168"},"def":{"name":"value=","args":[{"name":"value","external_name":"value","restriction":"Float64 | ::Nil"}],"visibility":"Public","body":"@value = value"}},{"html_id":"value?:Float64|Nil|Nil-instance-method","name":"value?","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value?","return_type":"Float64 | ::Nil | ::Nil","visibility":"Public","body":"@value"}}]},{"html_id":"dynfork/DynFork/Fields/Field","path":"DynFork/Fields/Field.html","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field","abstract":true,"superclass":{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"dynfork/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dynfork/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/fields/field.cr","line_number":4,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/field.cr#L4"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"dynfork/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"}],"subclasses":[{"html_id":"dynfork/DynFork/Fields/BoolField","kind":"struct","full_name":"DynFork::Fields::BoolField","name":"BoolField"},{"html_id":"dynfork/DynFork/Fields/ChoiceF64DynField","kind":"struct","full_name":"DynFork::Fields::ChoiceF64DynField","name":"ChoiceF64DynField"},{"html_id":"dynfork/DynFork/Fields/ChoiceF64Field","kind":"struct","full_name":"DynFork::Fields::ChoiceF64Field","name":"ChoiceF64Field"},{"html_id":"dynfork/DynFork/Fields/ChoiceF64MultDynField","kind":"struct","full_name":"DynFork::Fields::ChoiceF64MultDynField","name":"ChoiceF64MultDynField"},{"html_id":"dynfork/DynFork/Fields/ChoiceF64MultField","kind":"struct","full_name":"DynFork::Fields::ChoiceF64MultField","name":"ChoiceF64MultField"},{"html_id":"dynfork/DynFork/Fields/ChoiceI64DynField","kind":"struct","full_name":"DynFork::Fields::ChoiceI64DynField","name":"ChoiceI64DynField"},{"html_id":"dynfork/DynFork/Fields/ChoiceI64Field","kind":"struct","full_name":"DynFork::Fields::ChoiceI64Field","name":"ChoiceI64Field"},{"html_id":"dynfork/DynFork/Fields/ChoiceI64MultDynField","kind":"struct","full_name":"DynFork::Fields::ChoiceI64MultDynField","name":"ChoiceI64MultDynField"},{"html_id":"dynfork/DynFork/Fields/ChoiceI64MultField","kind":"struct","full_name":"DynFork::Fields::ChoiceI64MultField","name":"ChoiceI64MultField"},{"html_id":"dynfork/DynFork/Fields/ChoiceTextDynField","kind":"struct","full_name":"DynFork::Fields::ChoiceTextDynField","name":"ChoiceTextDynField"},{"html_id":"dynfork/DynFork/Fields/ChoiceTextField","kind":"struct","full_name":"DynFork::Fields::ChoiceTextField","name":"ChoiceTextField"},{"html_id":"dynfork/DynFork/Fields/ChoiceTextMultDynField","kind":"struct","full_name":"DynFork::Fields::ChoiceTextMultDynField","name":"ChoiceTextMultDynField"},{"html_id":"dynfork/DynFork/Fields/ChoiceTextMultField","kind":"struct","full_name":"DynFork::Fields::ChoiceTextMultField","name":"ChoiceTextMultField"},{"html_id":"dynfork/DynFork/Fields/ColorField","kind":"struct","full_name":"DynFork::Fields::ColorField","name":"ColorField"},{"html_id":"dynfork/DynFork/Fields/DateField","kind":"struct","full_name":"DynFork::Fields::DateField","name":"DateField"},{"html_id":"dynfork/DynFork/Fields/DateTimeField","kind":"struct","full_name":"DynFork::Fields::DateTimeField","name":"DateTimeField"},{"html_id":"dynfork/DynFork/Fields/EmailField","kind":"struct","full_name":"DynFork::Fields::EmailField","name":"EmailField"},{"html_id":"dynfork/DynFork/Fields/F64Field","kind":"struct","full_name":"DynFork::Fields::F64Field","name":"F64Field"},{"html_id":"dynfork/DynFork/Fields/FileField","kind":"struct","full_name":"DynFork::Fields::FileField","name":"FileField"},{"html_id":"dynfork/DynFork/Fields/HashField","kind":"struct","full_name":"DynFork::Fields::HashField","name":"HashField"},{"html_id":"dynfork/DynFork/Fields/I64Field","kind":"struct","full_name":"DynFork::Fields::I64Field","name":"I64Field"},{"html_id":"dynfork/DynFork/Fields/ImageField","kind":"struct","full_name":"DynFork::Fields::ImageField","name":"ImageField"},{"html_id":"dynfork/DynFork/Fields/IPField","kind":"struct","full_name":"DynFork::Fields::IPField","name":"IPField"},{"html_id":"dynfork/DynFork/Fields/PasswordField","kind":"struct","full_name":"DynFork::Fields::PasswordField","name":"PasswordField"},{"html_id":"dynfork/DynFork/Fields/PhoneField","kind":"struct","full_name":"DynFork::Fields::PhoneField","name":"PhoneField"},{"html_id":"dynfork/DynFork/Fields/SlugField","kind":"struct","full_name":"DynFork::Fields::SlugField","name":"SlugField"},{"html_id":"dynfork/DynFork/Fields/TextField","kind":"struct","full_name":"DynFork::Fields::TextField","name":"TextField"},{"html_id":"dynfork/DynFork/Fields/URLField","kind":"struct","full_name":"DynFork::Fields::URLField","name":"URLField"}],"namespace":{"html_id":"dynfork/DynFork/Fields","kind":"module","full_name":"DynFork::Fields","name":"Fields"},"doc":"An abstract structure with common fields for all field types.","summary":"<p>An abstract structure with common fields for all field types.</p>","constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/dynfork/fields/field.cr","line_number":5,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/field.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}}],"instance_methods":[{"html_id":"choices_from_json(json:String):Nil-instance-method","name":"choices_from_json","abstract":false,"args":[{"name":"json","external_name":"json","restriction":"String"}],"args_string":"(json : String) : Nil","args_html":"(json : String) : Nil","location":{"filename":"src/dynfork/fields/field.cr","line_number":37,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/field.cr#L37"},"def":{"name":"choices_from_json","args":[{"name":"json","external_name":"json","restriction":"String"}],"return_type":"Nil","visibility":"Public","body":""}},{"html_id":"disabled=(disabled:Bool)-instance-method","name":"disabled=","doc":"Blocks access and modification of the element.","summary":"<p>Blocks access and modification of the element.</p>","abstract":false,"args":[{"name":"disabled","external_name":"disabled","restriction":"Bool"}],"args_string":"(disabled : Bool)","args_html":"(disabled : Bool)","location":{"filename":"src/dynfork/fields/field.cr","line_number":19,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/field.cr#L19"},"def":{"name":"disabled=","args":[{"name":"disabled","external_name":"disabled","restriction":"Bool"}],"visibility":"Public","body":"@disabled = disabled"}},{"html_id":"disabled?:Bool-instance-method","name":"disabled?","doc":"Blocks access and modification of the element.","summary":"<p>Blocks access and modification of the element.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/field.cr","line_number":19,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/field.cr#L19"},"def":{"name":"disabled?","return_type":"Bool","visibility":"Public","body":"@disabled"}},{"html_id":"errors:Array(String)-instance-method","name":"errors","doc":"WARNING: The value is determined automatically.","summary":"<p><span class=\"flag yellow\">WARNING</span>  The value is determined automatically.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/field.cr","line_number":31,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/field.cr#L31"},"def":{"name":"errors","return_type":"Array(String)","visibility":"Public","body":"@errors"}},{"html_id":"errors=(errors:Array(String))-instance-method","name":"errors=","doc":"WARNING: The value is determined automatically.","summary":"<p><span class=\"flag yellow\">WARNING</span>  The value is determined automatically.</p>","abstract":false,"args":[{"name":"errors","external_name":"errors","restriction":"Array(String)"}],"args_string":"(errors : Array(String))","args_html":"(errors : Array(String))","location":{"filename":"src/dynfork/fields/field.cr","line_number":31,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/field.cr#L31"},"def":{"name":"errors=","args":[{"name":"errors","external_name":"errors","restriction":"Array(String)"}],"visibility":"Public","body":"@errors = errors"}},{"html_id":"field_type:String-instance-method","name":"field_type","doc":"Field type - Structure Name.","summary":"<p>Field type - Structure Name.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/field.cr","line_number":15,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/field.cr#L15"},"def":{"name":"field_type","return_type":"String","visibility":"Public","body":"@field_type"}},{"html_id":"group:UInt8-instance-method","name":"group","abstract":false,"location":{"filename":"src/dynfork/fields/field.cr","line_number":35,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/field.cr#L35"},"def":{"name":"group","return_type":"UInt8","visibility":"Public","body":"@group"}},{"html_id":"hide=(hide:Bool)-instance-method","name":"hide=","doc":"Hide field from user.","summary":"<p>Hide field from user.</p>","abstract":false,"args":[{"name":"hide","external_name":"hide","restriction":"Bool"}],"args_string":"(hide : Bool)","args_html":"(hide : Bool)","location":{"filename":"src/dynfork/fields/field.cr","line_number":23,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/field.cr#L23"},"def":{"name":"hide=","args":[{"name":"hide","external_name":"hide","restriction":"Bool"}],"visibility":"Public","body":"@hide = hide"}},{"html_id":"hide?:Bool-instance-method","name":"hide?","doc":"Hide field from user.","summary":"<p>Hide field from user.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/field.cr","line_number":23,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/field.cr#L23"},"def":{"name":"hide?","return_type":"Bool","visibility":"Public","body":"@hide"}},{"html_id":"hint:String-instance-method","name":"hint","doc":"Additional explanation for the user.","summary":"<p>Additional explanation for the user.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/field.cr","line_number":27,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/field.cr#L27"},"def":{"name":"hint","return_type":"String","visibility":"Public","body":"@hint"}},{"html_id":"id:String-instance-method","name":"id","doc":"*Format: \"ModelName--field-name\"*\nWARNING: The value is determined automatically.","summary":"<p><em>Format: &quot;ModelName--field-name&quot;</em> WARNING: The value is determined automatically.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/field.cr","line_number":8,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/field.cr#L8"},"def":{"name":"id","return_type":"String","visibility":"Public","body":"@id"}},{"html_id":"id=(id:String)-instance-method","name":"id=","doc":"*Format: \"ModelName--field-name\"*\nWARNING: The value is determined automatically.","summary":"<p><em>Format: &quot;ModelName--field-name&quot;</em> WARNING: The value is determined automatically.</p>","abstract":false,"args":[{"name":"id","external_name":"id","restriction":"String"}],"args_string":"(id : String)","args_html":"(id : String)","location":{"filename":"src/dynfork/fields/field.cr","line_number":8,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/field.cr#L8"},"def":{"name":"id=","args":[{"name":"id","external_name":"id","restriction":"String"}],"visibility":"Public","body":"@id = id"}},{"html_id":"ignored?:Bool-instance-method","name":"ignored?","doc":"If true, the value of this field is not saved in the database.","summary":"<p>If true, the value of this field is not saved in the database.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/field.cr","line_number":25,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/field.cr#L25"},"def":{"name":"ignored?","return_type":"Bool","visibility":"Public","body":"@ignored"}},{"html_id":"label:String-instance-method","name":"label","doc":"Text label for a web form field.","summary":"<p>Text label for a web form field.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/field.cr","line_number":10,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/field.cr#L10"},"def":{"name":"label","return_type":"String","visibility":"Public","body":"@label"}},{"html_id":"name:String-instance-method","name":"name","doc":"Field name.\nWARNING: The value is determined automatically.","summary":"<p>Field name.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/field.cr","line_number":13,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/field.cr#L13"},"def":{"name":"name","return_type":"String","visibility":"Public","body":"@name"}},{"html_id":"name=(name:String)-instance-method","name":"name=","doc":"Field name.\nWARNING: The value is determined automatically.","summary":"<p>Field name.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : String)","location":{"filename":"src/dynfork/fields/field.cr","line_number":13,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/field.cr#L13"},"def":{"name":"name=","args":[{"name":"name","external_name":"name","restriction":"String"}],"visibility":"Public","body":"@name = name"}},{"html_id":"readonly=(readonly:Bool)-instance-method","name":"readonly=","doc":"Specifies that the field cannot be modified by the user.","summary":"<p>Specifies that the field cannot be modified by the user.</p>","abstract":false,"args":[{"name":"readonly","external_name":"readonly","restriction":"Bool"}],"args_string":"(readonly : Bool)","args_html":"(readonly : Bool)","location":{"filename":"src/dynfork/fields/field.cr","line_number":21,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/field.cr#L21"},"def":{"name":"readonly=","args":[{"name":"readonly","external_name":"readonly","restriction":"Bool"}],"visibility":"Public","body":"@readonly = readonly"}},{"html_id":"readonly?:Bool-instance-method","name":"readonly?","doc":"Specifies that the field cannot be modified by the user.","summary":"<p>Specifies that the field cannot be modified by the user.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/field.cr","line_number":21,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/field.cr#L21"},"def":{"name":"readonly?","return_type":"Bool","visibility":"Public","body":"@readonly"}},{"html_id":"required?:Bool-instance-method","name":"required?","doc":"Required field.","summary":"<p>Required field.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/field.cr","line_number":17,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/field.cr#L17"},"def":{"name":"required?","return_type":"Bool","visibility":"Public","body":"@required"}},{"html_id":"slug_sources:Array(String)-instance-method","name":"slug_sources","abstract":false,"location":{"filename":"src/dynfork/fields/field.cr","line_number":39,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/field.cr#L39"},"def":{"name":"slug_sources","return_type":"Array(String)","visibility":"Public","body":"Array(String).new"}},{"html_id":"warning:String-instance-method","name":"warning","doc":"Warning information.","summary":"<p>Warning information.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/field.cr","line_number":29,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/field.cr#L29"},"def":{"name":"warning","return_type":"String","visibility":"Public","body":"@warning"}},{"html_id":"warning=(warning:String)-instance-method","name":"warning=","doc":"Warning information.","summary":"<p>Warning information.</p>","abstract":false,"args":[{"name":"warning","external_name":"warning","restriction":"String"}],"args_string":"(warning : String)","args_html":"(warning : String)","location":{"filename":"src/dynfork/fields/field.cr","line_number":29,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/field.cr#L29"},"def":{"name":"warning=","args":[{"name":"warning","external_name":"warning","restriction":"String"}],"visibility":"Public","body":"@warning = warning"}}]},{"html_id":"dynfork/DynFork/Fields/FileField","path":"DynFork/Fields/FileField.html","kind":"struct","full_name":"DynFork::Fields::FileField","name":"FileField","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},"ancestors":[{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},{"html_id":"dynfork/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dynfork/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/fields/file.cr","line_number":6,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/file.cr#L6"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Fields","kind":"module","full_name":"DynFork::Fields","name":"Fields"},"doc":"File upload field.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/files\" target=\"_blank\">example</a>.","summary":"<p>File upload field.</p>","constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"File upload field.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/files\" target=\"_blank\">example</a>.","summary":"<p>File upload field.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/dynfork/fields/file.cr","line_number":6,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/file.cr#L6"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}},{"html_id":"new(label:String=\"\",default:String|Nil=nil,target_dir:String=\"files\",accept:String=\"\",placeholder:String=\"\",maxsize:Int64=2097152,hide:Bool=false,required:Bool=false,disabled:Bool=false,readonly:Bool=false,ignored:Bool=false,hint:String=\"\",warning:String=\"\")-class-method","name":"new","abstract":false,"args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"default","default_value":"nil","external_name":"default","restriction":"String | ::Nil"},{"name":"target_dir","default_value":"\"files\"","external_name":"target_dir","restriction":"String"},{"name":"accept","default_value":"\"\"","external_name":"accept","restriction":"String"},{"name":"placeholder","default_value":"\"\"","external_name":"placeholder","restriction":"String"},{"name":"maxsize","default_value":"2097152","external_name":"maxsize","restriction":"Int64"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"},{"name":"warning","default_value":"\"\"","external_name":"warning","restriction":"String"}],"args_string":"(label : String = \"\", default : String | Nil = nil, target_dir : String = \"files\", accept : String = \"\", placeholder : String = \"\", maxsize : Int64 = 2097152, hide : Bool = false, required : Bool = false, disabled : Bool = false, readonly : Bool = false, ignored : Bool = false, hint : String = \"\", warning : String = \"\")","args_html":"(label : String = <span class=\"s\">&quot;&quot;</span>, default : String | Nil = <span class=\"n\">nil</span>, target_dir : String = <span class=\"s\">&quot;files&quot;</span>, accept : String = <span class=\"s\">&quot;&quot;</span>, placeholder : String = <span class=\"s\">&quot;&quot;</span>, maxsize : Int64 = <span class=\"n\">2097152</span>, hide : Bool = <span class=\"n\">false</span>, required : Bool = <span class=\"n\">false</span>, disabled : Bool = <span class=\"n\">false</span>, readonly : Bool = <span class=\"n\">false</span>, ignored : Bool = <span class=\"n\">false</span>, hint : String = <span class=\"s\">&quot;&quot;</span>, warning : String = <span class=\"s\">&quot;&quot;</span>)","location":{"filename":"src/dynfork/fields/file.cr","line_number":121,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/file.cr#L121"},"def":{"name":"new","args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"default","default_value":"nil","external_name":"default","restriction":"String | ::Nil"},{"name":"target_dir","default_value":"\"files\"","external_name":"target_dir","restriction":"String"},{"name":"accept","default_value":"\"\"","external_name":"accept","restriction":"String"},{"name":"placeholder","default_value":"\"\"","external_name":"placeholder","restriction":"String"},{"name":"maxsize","default_value":"2097152","external_name":"maxsize","restriction":"Int64"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"},{"name":"warning","default_value":"\"\"","external_name":"warning","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(label, default, target_dir, accept, placeholder, maxsize, hide, required, disabled, readonly, ignored, hint, warning)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"accept:String-instance-method","name":"accept","doc":"HTML attribute: accept\n<br>\nDescribing which file types to allow.\n<br>\n_Example: \".pdf,.doc,.docx,application/msword\"_\nNOTE: https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/accept#unique_file_type_specifiers","summary":"<p>HTML attribute: accept <br> Describing which file types to allow.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/file.cr","line_number":31,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/file.cr#L31"},"def":{"name":"accept","return_type":"String","visibility":"Public","body":"@accept"}},{"html_id":"default:String|Nil-instance-method","name":"default","doc":"Default file path.\n<br>\n_Example: \"public/media/default/nodoc.docx\"_","summary":"<p>Default file path.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/file.cr","line_number":16,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/file.cr#L16"},"def":{"name":"default","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @default).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::FileField#default cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"default?:String|Nil|Nil-instance-method","name":"default?","doc":"Default file path.\n<br>\n_Example: \"public/media/default/nodoc.docx\"_","summary":"<p>Default file path.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/file.cr","line_number":16,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/file.cr#L16"},"def":{"name":"default?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@default"}},{"html_id":"extract_file_data?:DynFork::Globals::FileData|Nil-instance-method","name":"extract_file_data?","doc":"For the `DynFork::QPaladins::Check#check` method.","summary":"<p>For the <code><a href=\"../../DynFork/QPaladins/Check.html#check%28collection_ptr%3APointer%28Mongo%3A%3ACollection%29%2Csave%3F%3ABool%3Dfalse%29%3ADynFork%3A%3AGlobals%3A%3AOutputData-instance-method\">DynFork::QPaladins::Check#check</a></code> method.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/file.cr","line_number":239,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/file.cr#L239"},"def":{"name":"extract_file_data?","return_type":"DynFork::Globals::FileData | ::Nil","visibility":"Public","body":"@value"}},{"html_id":"extract_file_path?:String|Nil-instance-method","name":"extract_file_path?","doc":"For the `DynFork::QPaladins::Check#check` method.","summary":"<p>For the <code><a href=\"../../DynFork/QPaladins/Check.html#check%28collection_ptr%3APointer%28Mongo%3A%3ACollection%29%2Csave%3F%3ABool%3Dfalse%29%3ADynFork%3A%3AGlobals%3A%3AOutputData-instance-method\">DynFork::QPaladins::Check#check</a></code> method.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/file.cr","line_number":244,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/file.cr#L244"},"def":{"name":"extract_file_path?","return_type":"String | ::Nil","visibility":"Public","body":"if @value.nil?\nelse\n  @value.path\nend"}},{"html_id":"field_type:String-instance-method","name":"field_type","doc":"Field type - Structure Name.","summary":"<p>Field type - Structure Name.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/file.cr","line_number":8,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/file.cr#L8"},"def":{"name":"field_type","return_type":"String","visibility":"Public","body":"@field_type"}},{"html_id":"from_base64(base64:String|Nil=nil,filename:String|Nil=nil,delete:Bool=false):Nil-instance-method","name":"from_base64","doc":"Convert base64 to a file and save in the target directory.\nfilename: _Example: foo.pdf_","summary":"<p>Convert base64 to a file and save in the target directory.</p>","abstract":false,"args":[{"name":"base64","default_value":"nil","external_name":"base64","restriction":"String | ::Nil"},{"name":"filename","default_value":"nil","external_name":"filename","restriction":"String | ::Nil"},{"name":"delete","default_value":"false","external_name":"delete","restriction":"Bool"}],"args_string":"(base64 : String | Nil = nil, filename : String | Nil = nil, delete : Bool = false) : Nil","args_html":"(base64 : String | Nil = <span class=\"n\">nil</span>, filename : String | Nil = <span class=\"n\">nil</span>, delete : Bool = <span class=\"n\">false</span>) : Nil","location":{"filename":"src/dynfork/fields/file.cr","line_number":141,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/file.cr#L141"},"def":{"name":"from_base64","args":[{"name":"base64","default_value":"nil","external_name":"base64","restriction":"String | ::Nil"},{"name":"filename","default_value":"nil","external_name":"filename","restriction":"String | ::Nil"},{"name":"delete","default_value":"false","external_name":"delete","restriction":"Bool"}],"return_type":"Nil","visibility":"Public","body":"value = DynFork::Globals::FileData.new\nvalue.delete = delete\nif base64.nil?\nelse\n  extension = Path[filename].extension\n  if extension.empty?\n    raise(DynFork::Errors::Panic.new(\"The file `#{filename}` has no extension.\"))\n  end\n  base64.each_char_with_index do |char, index|\n    if char == ','\n      base64 = base64.delete_at(0, index + 1)\n      break\n    end\n    if index == 40\n      break\n    end\n  end\n  target_name = \"#{UUID.v4}#{extension}\"\n  date : String = Time.utc.to_s(\"%Y-%m-%d\")\n  target_path : String = \"#{@media_root}/#{@target_dir}/#{date}\"\n  if Dir.exists?(target_path)\n  else\n    Dir.mkdir_p(path: target_path, mode: 511)\n  end\n  target_path = target_path + \"/#{target_name}\"\n  File.write(filename: target_path, content: Base64.decode_string(base64), perm: File::Permissions.new(420))\n  value.path = target_path\n  value.url = \"#{@media_url}/#{@target_dir}/#{date}/#{target_name}\"\n  value.name = filename.not_nil!\n  value.size = File.size(@value.path)\nend\n@value = value\n"}},{"html_id":"from_path(path:String|Nil=nil,delete:Bool=false):Nil-instance-method","name":"from_path","doc":"Convert path to a file and save in the target directory.","summary":"<p>Convert path to a file and save in the target directory.</p>","abstract":false,"args":[{"name":"path","default_value":"nil","external_name":"path","restriction":"String | ::Nil"},{"name":"delete","default_value":"false","external_name":"delete","restriction":"Bool"}],"args_string":"(path : String | Nil = nil, delete : Bool = false) : Nil","args_html":"(path : String | Nil = <span class=\"n\">nil</span>, delete : Bool = <span class=\"n\">false</span>) : Nil","location":{"filename":"src/dynfork/fields/file.cr","line_number":192,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/file.cr#L192"},"def":{"name":"from_path","args":[{"name":"path","default_value":"nil","external_name":"path","restriction":"String | ::Nil"},{"name":"delete","default_value":"false","external_name":"delete","restriction":"Bool"}],"return_type":"Nil","visibility":"Public","body":"value = DynFork::Globals::FileData.new\nvalue.delete = delete\nif path.nil?\nelse\n  extension = Path[path].extension\n  if extension.empty?\n    raise(DynFork::Errors::Panic.new(\"The file `#{path}` has no extension.\"))\n  end\n  target_name = \"#{UUID.v4}#{extension}\"\n  date : String = Time.utc.to_s(\"%Y-%m-%d\")\n  target_path : String = \"#{@media_root}/#{@target_dir}/#{date}\"\n  if Dir.exists?(target_path)\n  else\n    Dir.mkdir_p(path: target_path, mode: 511)\n  end\n  target_path = target_path + \"/#{target_name}\"\n  File.write(filename: target_path, content: File.read(path), perm: File::Permissions.new(420))\n  value.path = target_path\n  value.url = \"#{@media_url}/#{@target_dir}/#{date}/#{target_name}\"\n  value.name = File.basename(path)\n  value.size = File.size(target_path)\nend\n@value = value\n"}},{"html_id":"group:UInt8-instance-method","name":"group","doc":"To optimize field traversal in the `paladins/check()` method.\nWARNING: It is recommended not to change.","summary":"<p>To optimize field traversal in the <code>paladins/check()</code> method.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/file.cr","line_number":39,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/file.cr#L39"},"def":{"name":"group","return_type":"UInt8","visibility":"Public","body":"@group"}},{"html_id":"input_type:String|Nil-instance-method","name":"input_type","doc":"Html tag: input type=\"file\".","summary":"<p>Html tag: input type=&quot;file&quot;.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/file.cr","line_number":10,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/file.cr#L10"},"def":{"name":"input_type","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @input_type).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::FileField#input_type cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"input_type?:String|Nil|Nil-instance-method","name":"input_type?","doc":"Html tag: input type=\"file\".","summary":"<p>Html tag: input type=&quot;file&quot;.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/file.cr","line_number":10,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/file.cr#L10"},"def":{"name":"input_type?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@input_type"}},{"html_id":"maxsize:Int64-instance-method","name":"maxsize","doc":"The maximum allowed file size in bytes.\nNOTE: 1 MB = 1048576 Bytes (in binary).","summary":"<p>The maximum allowed file size in bytes.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/file.cr","line_number":36,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/file.cr#L36"},"def":{"name":"maxsize","return_type":"Int64","visibility":"Public","body":"@maxsize"}},{"html_id":"media_root:String-instance-method","name":"media_root","doc":"Root directory for storing media files.","summary":"<p>Root directory for storing media files.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/file.cr","line_number":18,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/file.cr#L18"},"def":{"name":"media_root","return_type":"String","visibility":"Public","body":"@media_root"}},{"html_id":"media_url:String-instance-method","name":"media_url","doc":"URL address for the media directory.","summary":"<p>URL address for the media directory.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/file.cr","line_number":20,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/file.cr#L20"},"def":{"name":"media_url","return_type":"String","visibility":"Public","body":"@media_url"}},{"html_id":"placeholder:String-instance-method","name":"placeholder","doc":"Displays prompt text.","summary":"<p>Displays prompt text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/file.cr","line_number":33,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/file.cr#L33"},"def":{"name":"placeholder","return_type":"String","visibility":"Public","body":"@placeholder"}},{"html_id":"refrash_val_file_data(val:DynFork::Globals::FileData):Nil-instance-method","name":"refrash_val_file_data","doc":"For the `DynFork::QPaladins::Tools#refrash_fields` method.","summary":"<p>For the <code><a href=\"../../DynFork/QPaladins/Tools.html#refrash_fields%28doc_ptr%3APointer%28BSON%7CNil%29%29%3ANil-instance-method\">DynFork::QPaladins::Tools#refrash_fields</a></code> method.</p>","abstract":false,"args":[{"name":"val","external_name":"val","restriction":"DynFork::Globals::FileData"}],"args_string":"(val : DynFork::Globals::FileData) : Nil","args_html":"(val : <a href=\"../../DynFork/Globals/Types/FileData.html\">DynFork::Globals::FileData</a>) : Nil","location":{"filename":"src/dynfork/fields/file.cr","line_number":234,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/file.cr#L234"},"def":{"name":"refrash_val_file_data","args":[{"name":"val","external_name":"val","restriction":"DynFork::Globals::FileData"}],"return_type":"Nil","visibility":"Public","body":"@value = val"}},{"html_id":"target_dir:String-instance-method","name":"target_dir","doc":"Directory for files inside media directory.\n<br>\n_Examples: files|resume|reports_","summary":"<p>Directory for files inside media directory.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/file.cr","line_number":24,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/file.cr#L24"},"def":{"name":"target_dir","return_type":"String","visibility":"Public","body":"@target_dir"}},{"html_id":"value:DynFork::Globals::FileData|Nil-instance-method","name":"value","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value","return_type":"DynFork::Globals::FileData | ::Nil","visibility":"Public","body":"if (value = @value).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::FileField#value cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"value=(value:DynFork::Globals::FileData|Nil)-instance-method","name":"value=","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"DynFork::Globals::FileData | ::Nil"}],"args_string":"(value : DynFork::Globals::FileData | Nil)","args_html":"(value : <a href=\"../../DynFork/Globals/Types/FileData.html\">DynFork::Globals::FileData</a> | Nil)","location":{"filename":"src/dynfork/fields/file.cr","line_number":12,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/file.cr#L12"},"def":{"name":"value=","args":[{"name":"value","external_name":"value","restriction":"DynFork::Globals::FileData | ::Nil"}],"visibility":"Public","body":"@value = value"}},{"html_id":"value?:DynFork::Globals::FileData|Nil|Nil-instance-method","name":"value?","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value?","return_type":"DynFork::Globals::FileData | ::Nil | ::Nil","visibility":"Public","body":"@value"}}]},{"html_id":"dynfork/DynFork/Fields/HashField","path":"DynFork/Fields/HashField.html","kind":"struct","full_name":"DynFork::Fields::HashField","name":"HashField","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},"ancestors":[{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},{"html_id":"dynfork/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dynfork/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/fields/hash.cr","line_number":5,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/hash.cr#L5"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Fields","kind":"module","full_name":"DynFork::Fields","name":"Fields"},"doc":"This type was created specifically for the hash field.","summary":"<p>This type was created specifically for the hash field.</p>","constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"This type was created specifically for the hash field.","summary":"<p>This type was created specifically for the hash field.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/dynfork/fields/hash.cr","line_number":5,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/hash.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}},{"html_id":"new(label:String=\"DocumentID\",placeholder:String=\"EnterdocumentID\",hide:Bool=false,unique:Bool=false,required:Bool=false,disabled:Bool=false,readonly:Bool=false,ignored:Bool=false,hint:String=\"ForenteradocumentID.\")-class-method","name":"new","abstract":false,"args":[{"name":"label","default_value":"\"Document ID\"","external_name":"label","restriction":"String"},{"name":"placeholder","default_value":"\"Enter document ID\"","external_name":"placeholder","restriction":"String"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"unique","default_value":"false","external_name":"unique","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"For enter a document ID.\"","external_name":"hint","restriction":"String"}],"args_string":"(label : String = \"Document ID\", placeholder : String = \"Enter document ID\", hide : Bool = false, unique : Bool = false, required : Bool = false, disabled : Bool = false, readonly : Bool = false, ignored : Bool = false, hint : String = \"For enter a document ID.\")","args_html":"(label : String = <span class=\"s\">&quot;Document ID&quot;</span>, placeholder : String = <span class=\"s\">&quot;Enter document ID&quot;</span>, hide : Bool = <span class=\"n\">false</span>, unique : Bool = <span class=\"n\">false</span>, required : Bool = <span class=\"n\">false</span>, disabled : Bool = <span class=\"n\">false</span>, readonly : Bool = <span class=\"n\">false</span>, ignored : Bool = <span class=\"n\">false</span>, hint : String = <span class=\"s\">&quot;For enter a document ID.&quot;</span>)","location":{"filename":"src/dynfork/fields/hash.cr","line_number":132,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/hash.cr#L132"},"def":{"name":"new","args":[{"name":"label","default_value":"\"Document ID\"","external_name":"label","restriction":"String"},{"name":"placeholder","default_value":"\"Enter document ID\"","external_name":"placeholder","restriction":"String"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"unique","default_value":"false","external_name":"unique","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"For enter a document ID.\"","external_name":"hint","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(label, placeholder, hide, unique, required, disabled, readonly, ignored, hint)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"alerts:Array(String)-instance-method","name":"alerts","doc":"Alerts for the entire web form.\nWARNING: Assigned automatically.","summary":"<p>Alerts for the entire web form.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/hash.cr","line_number":24,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/hash.cr#L24"},"def":{"name":"alerts","return_type":"Array(String)","visibility":"Public","body":"@alerts"}},{"html_id":"alerts=(alerts:Array(String))-instance-method","name":"alerts=","doc":"Alerts for the entire web form.\nWARNING: Assigned automatically.","summary":"<p>Alerts for the entire web form.</p>","abstract":false,"args":[{"name":"alerts","external_name":"alerts","restriction":"Array(String)"}],"args_string":"(alerts : Array(String))","args_html":"(alerts : Array(String))","location":{"filename":"src/dynfork/fields/hash.cr","line_number":24,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/hash.cr#L24"},"def":{"name":"alerts=","args":[{"name":"alerts","external_name":"alerts","restriction":"Array(String)"}],"visibility":"Public","body":"@alerts = alerts"}},{"html_id":"field_type:String-instance-method","name":"field_type","doc":"Field type - Structure Name.","summary":"<p>Field type - Structure Name.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/hash.cr","line_number":7,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/hash.cr#L7"},"def":{"name":"field_type","return_type":"String","visibility":"Public","body":"@field_type"}},{"html_id":"group:UInt8-instance-method","name":"group","doc":"To optimize field traversal in the `paladins/check` method.\nWARNING: It is recommended not to change.","summary":"<p>To optimize field traversal in the <code>paladins/check</code> method.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/hash.cr","line_number":27,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/hash.cr#L27"},"def":{"name":"group","return_type":"UInt8","visibility":"Public","body":"@group"}},{"html_id":"hide=(hide:Bool)-instance-method","name":"hide=","doc":"Hide field from user.","summary":"<p>Hide field from user.</p>","abstract":false,"args":[{"name":"hide","external_name":"hide","restriction":"Bool"}],"args_string":"(hide : Bool)","args_html":"(hide : Bool)","location":{"filename":"src/dynfork/fields/hash.cr","line_number":21,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/hash.cr#L21"},"def":{"name":"hide=","args":[{"name":"hide","external_name":"hide","restriction":"Bool"}],"visibility":"Public","body":"@hide = hide"}},{"html_id":"hide?:Bool-instance-method","name":"hide?","doc":"Hide field from user.","summary":"<p>Hide field from user.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/hash.cr","line_number":21,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/hash.cr#L21"},"def":{"name":"hide?","return_type":"Bool","visibility":"Public","body":"@hide"}},{"html_id":"input_type:String|Nil-instance-method","name":"input_type","doc":"Html tag: input type=\"text\".","summary":"<p>Html tag: input type=&quot;text&quot;.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/hash.cr","line_number":9,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/hash.cr#L9"},"def":{"name":"input_type","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @input_type).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::HashField#input_type cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"input_type?:String|Nil|Nil-instance-method","name":"input_type?","doc":"Html tag: input type=\"text\".","summary":"<p>Html tag: input type=&quot;text&quot;.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/hash.cr","line_number":9,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/hash.cr#L9"},"def":{"name":"input_type?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@input_type"}},{"html_id":"maxlength:UInt32|Nil-instance-method","name":"maxlength","doc":"The maximum number of characters allowed in the text.","summary":"<p>The maximum number of characters allowed in the text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/hash.cr","line_number":15,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/hash.cr#L15"},"def":{"name":"maxlength","return_type":"UInt32 | ::Nil","visibility":"Public","body":"if (value = @maxlength).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::HashField#maxlength cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"maxlength?:UInt32|Nil|Nil-instance-method","name":"maxlength?","doc":"The maximum number of characters allowed in the text.","summary":"<p>The maximum number of characters allowed in the text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/hash.cr","line_number":15,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/hash.cr#L15"},"def":{"name":"maxlength?","return_type":"UInt32 | ::Nil | ::Nil","visibility":"Public","body":"@maxlength"}},{"html_id":"minlength:UInt32|Nil-instance-method","name":"minlength","doc":"The minimum number of characters allowed in the text.","summary":"<p>The minimum number of characters allowed in the text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/hash.cr","line_number":17,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/hash.cr#L17"},"def":{"name":"minlength","return_type":"UInt32 | ::Nil","visibility":"Public","body":"if (value = @minlength).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::HashField#minlength cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"minlength?:UInt32|Nil|Nil-instance-method","name":"minlength?","doc":"The minimum number of characters allowed in the text.","summary":"<p>The minimum number of characters allowed in the text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/hash.cr","line_number":17,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/hash.cr#L17"},"def":{"name":"minlength?","return_type":"UInt32 | ::Nil | ::Nil","visibility":"Public","body":"@minlength"}},{"html_id":"object_id:BSON::ObjectId|Nil-instance-method","name":"object_id","doc":"Get ObjectId from value.","summary":"<p>Get ObjectId from value.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/hash.cr","line_number":149,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/hash.cr#L149"},"def":{"name":"object_id","return_type":"BSON::ObjectId | ::Nil","visibility":"Public","body":"if value : String | ::Nil = @value.presence\n  return BSON::ObjectId.new(value.not_nil!)\nend\nnil\n"}},{"html_id":"placeholder:String-instance-method","name":"placeholder","doc":"Displays prompt text.","summary":"<p>Displays prompt text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/hash.cr","line_number":13,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/hash.cr#L13"},"def":{"name":"placeholder","return_type":"String","visibility":"Public","body":"@placeholder"}},{"html_id":"refrash_val_str(val:String):Nil-instance-method","name":"refrash_val_str","doc":"For the `DynFork::QPaladins::Tools#refrash_fields` method.","summary":"<p>For the <code><a href=\"../../DynFork/QPaladins/Tools.html#refrash_fields%28doc_ptr%3APointer%28BSON%7CNil%29%29%3ANil-instance-method\">DynFork::QPaladins::Tools#refrash_fields</a></code> method.</p>","abstract":false,"args":[{"name":"val","external_name":"val","restriction":"String"}],"args_string":"(val : String) : Nil","args_html":"(val : String) : Nil","location":{"filename":"src/dynfork/fields/hash.cr","line_number":157,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/hash.cr#L157"},"def":{"name":"refrash_val_str","args":[{"name":"val","external_name":"val","restriction":"String"}],"return_type":"Nil","visibility":"Public","body":"@value = val"}},{"html_id":"unique?:Bool-instance-method","name":"unique?","doc":"The unique value of a field in a collection.","summary":"<p>The unique value of a field in a collection.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/hash.cr","line_number":19,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/hash.cr#L19"},"def":{"name":"unique?","return_type":"Bool","visibility":"Public","body":"@unique"}},{"html_id":"value:String|Nil-instance-method","name":"value","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @value).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::HashField#value cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"value=(value:String|Nil)-instance-method","name":"value=","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String | ::Nil"}],"args_string":"(value : String | Nil)","args_html":"(value : String | Nil)","location":{"filename":"src/dynfork/fields/hash.cr","line_number":11,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/hash.cr#L11"},"def":{"name":"value=","args":[{"name":"value","external_name":"value","restriction":"String | ::Nil"}],"visibility":"Public","body":"@value = value"}},{"html_id":"value?:String|Nil|Nil-instance-method","name":"value?","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@value"}}]},{"html_id":"dynfork/DynFork/Fields/I64Field","path":"DynFork/Fields/I64Field.html","kind":"struct","full_name":"DynFork::Fields::I64Field","name":"I64Field","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},"ancestors":[{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},{"html_id":"dynfork/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dynfork/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/fields/numbers.cr","line_number":5,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L5"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Fields","kind":"module","full_name":"DynFork::Fields","name":"Fields"},"doc":"Field for entering integer 64-bit numbers.","summary":"<p>Field for entering integer 64-bit numbers.</p>","constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"Field for entering integer 64-bit numbers.","summary":"<p>Field for entering integer 64-bit numbers.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/dynfork/fields/numbers.cr","line_number":5,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}},{"html_id":"new(label:String=\"\",default:Int64|Nil=nil,input_type:String|Nil=\"number\",placeholder:String=\"\",max:Int64|Nil=Int64::MAX,min:Int64|Nil=Int64::MIN,step:Int64|Nil=1,hide:Bool=false,unique:Bool=false,required:Bool=false,disabled:Bool=false,readonly:Bool=false,ignored:Bool=false,hint:String=\"\",warning:String=\"\")-class-method","name":"new","abstract":false,"args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"default","default_value":"nil","external_name":"default","restriction":"Int64 | ::Nil"},{"name":"input_type","default_value":"\"number\"","external_name":"input_type","restriction":"String | ::Nil"},{"name":"placeholder","default_value":"\"\"","external_name":"placeholder","restriction":"String"},{"name":"max","default_value":"Int64::MAX","external_name":"max","restriction":"Int64 | ::Nil"},{"name":"min","default_value":"Int64::MIN","external_name":"min","restriction":"Int64 | ::Nil"},{"name":"step","default_value":"1","external_name":"step","restriction":"Int64 | ::Nil"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"unique","default_value":"false","external_name":"unique","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"},{"name":"warning","default_value":"\"\"","external_name":"warning","restriction":"String"}],"args_string":"(label : String = \"\", default : Int64 | Nil = nil, input_type : String | Nil = \"number\", placeholder : String = \"\", max : Int64 | Nil = Int64::MAX, min : Int64 | Nil = Int64::MIN, step : Int64 | Nil = 1, hide : Bool = false, unique : Bool = false, required : Bool = false, disabled : Bool = false, readonly : Bool = false, ignored : Bool = false, hint : String = \"\", warning : String = \"\")","args_html":"(label : String = <span class=\"s\">&quot;&quot;</span>, default : Int64 | Nil = <span class=\"n\">nil</span>, input_type : String | Nil = <span class=\"s\">&quot;number&quot;</span>, placeholder : String = <span class=\"s\">&quot;&quot;</span>, max : Int64 | Nil = <span class=\"t\">Int64</span><span class=\"t\">::</span><span class=\"t\">MAX</span>, min : Int64 | Nil = <span class=\"t\">Int64</span><span class=\"t\">::</span><span class=\"t\">MIN</span>, step : Int64 | Nil = <span class=\"n\">1</span>, hide : Bool = <span class=\"n\">false</span>, unique : Bool = <span class=\"n\">false</span>, required : Bool = <span class=\"n\">false</span>, disabled : Bool = <span class=\"n\">false</span>, readonly : Bool = <span class=\"n\">false</span>, ignored : Bool = <span class=\"n\">false</span>, hint : String = <span class=\"s\">&quot;&quot;</span>, warning : String = <span class=\"s\">&quot;&quot;</span>)","location":{"filename":"src/dynfork/fields/numbers.cr","line_number":123,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L123"},"def":{"name":"new","args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"default","default_value":"nil","external_name":"default","restriction":"Int64 | ::Nil"},{"name":"input_type","default_value":"\"number\"","external_name":"input_type","restriction":"String | ::Nil"},{"name":"placeholder","default_value":"\"\"","external_name":"placeholder","restriction":"String"},{"name":"max","default_value":"Int64::MAX","external_name":"max","restriction":"Int64 | ::Nil"},{"name":"min","default_value":"Int64::MIN","external_name":"min","restriction":"Int64 | ::Nil"},{"name":"step","default_value":"1","external_name":"step","restriction":"Int64 | ::Nil"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"unique","default_value":"false","external_name":"unique","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"},{"name":"warning","default_value":"\"\"","external_name":"warning","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(label, default, input_type, placeholder, max, min, step, hide, unique, required, disabled, readonly, ignored, hint, warning)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"default:Int64|Nil-instance-method","name":"default","doc":"Value by default.","summary":"<p>Value by default.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/numbers.cr","line_number":13,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L13"},"def":{"name":"default","return_type":"Int64 | ::Nil","visibility":"Public","body":"if (value = @default).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::I64Field#default cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"default?:Int64|Nil|Nil-instance-method","name":"default?","doc":"Value by default.","summary":"<p>Value by default.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/numbers.cr","line_number":13,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L13"},"def":{"name":"default?","return_type":"Int64 | ::Nil | ::Nil","visibility":"Public","body":"@default"}},{"html_id":"extract_default_i64?:Int64|Nil-instance-method","name":"extract_default_i64?","doc":"For the `DynFork::QPaladins::Check#check` method.","summary":"<p>For the <code><a href=\"../../DynFork/QPaladins/Check.html#check%28collection_ptr%3APointer%28Mongo%3A%3ACollection%29%2Csave%3F%3ABool%3Dfalse%29%3ADynFork%3A%3AGlobals%3A%3AOutputData-instance-method\">DynFork::QPaladins::Check#check</a></code> method.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/numbers.cr","line_number":156,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L156"},"def":{"name":"extract_default_i64?","return_type":"Int64 | ::Nil","visibility":"Public","body":"@default"}},{"html_id":"extract_val_i64?:Int64|Nil-instance-method","name":"extract_val_i64?","doc":"For the `DynFork::QPaladins::Check#check` method.","summary":"<p>For the <code><a href=\"../../DynFork/QPaladins/Check.html#check%28collection_ptr%3APointer%28Mongo%3A%3ACollection%29%2Csave%3F%3ABool%3Dfalse%29%3ADynFork%3A%3AGlobals%3A%3AOutputData-instance-method\">DynFork::QPaladins::Check#check</a></code> method.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/numbers.cr","line_number":151,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L151"},"def":{"name":"extract_val_i64?","return_type":"Int64 | ::Nil","visibility":"Public","body":"@value"}},{"html_id":"field_type:String-instance-method","name":"field_type","doc":"Field type - Structure Name.","summary":"<p>Field type - Structure Name.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/numbers.cr","line_number":7,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L7"},"def":{"name":"field_type","return_type":"String","visibility":"Public","body":"@field_type"}},{"html_id":"group:UInt8-instance-method","name":"group","doc":"To optimize field traversal in the `paladins/check()` method.\nWARNING: It is recommended not to change.","summary":"<p>To optimize field traversal in the <code>paladins/check()</code> method.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/numbers.cr","line_number":26,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L26"},"def":{"name":"group","return_type":"UInt8","visibility":"Public","body":"@group"}},{"html_id":"input_type:String|Nil-instance-method","name":"input_type","doc":"Html tag: input type=\"number|range\".","summary":"<p>Html tag: input type=&quot;number|range&quot;.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/numbers.cr","line_number":9,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L9"},"def":{"name":"input_type","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @input_type).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::I64Field#input_type cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"input_type?:String|Nil|Nil-instance-method","name":"input_type?","doc":"Html tag: input type=\"number|range\".","summary":"<p>Html tag: input type=&quot;number|range&quot;.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/numbers.cr","line_number":9,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L9"},"def":{"name":"input_type?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@input_type"}},{"html_id":"max:Int64|Nil-instance-method","name":"max","doc":"The maximum number of characters allowed in the text.","summary":"<p>The maximum number of characters allowed in the text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/numbers.cr","line_number":17,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L17"},"def":{"name":"max","return_type":"Int64 | ::Nil","visibility":"Public","body":"if (value = @max).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::I64Field#max cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"max?:Int64|Nil|Nil-instance-method","name":"max?","doc":"The maximum number of characters allowed in the text.","summary":"<p>The maximum number of characters allowed in the text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/numbers.cr","line_number":17,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L17"},"def":{"name":"max?","return_type":"Int64 | ::Nil | ::Nil","visibility":"Public","body":"@max"}},{"html_id":"min:Int64|Nil-instance-method","name":"min","doc":"The minimum number of characters allowed in the text.","summary":"<p>The minimum number of characters allowed in the text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/numbers.cr","line_number":19,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L19"},"def":{"name":"min","return_type":"Int64 | ::Nil","visibility":"Public","body":"if (value = @min).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::I64Field#min cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"min?:Int64|Nil|Nil-instance-method","name":"min?","doc":"The minimum number of characters allowed in the text.","summary":"<p>The minimum number of characters allowed in the text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/numbers.cr","line_number":19,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L19"},"def":{"name":"min?","return_type":"Int64 | ::Nil | ::Nil","visibility":"Public","body":"@min"}},{"html_id":"placeholder:String-instance-method","name":"placeholder","doc":"Displays prompt text.","summary":"<p>Displays prompt text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/numbers.cr","line_number":15,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L15"},"def":{"name":"placeholder","return_type":"String","visibility":"Public","body":"@placeholder"}},{"html_id":"refrash_val_i64(val:Int64):Nil-instance-method","name":"refrash_val_i64","doc":"For the `DynFork::QPaladins::Tools#refrash_fields` method.","summary":"<p>For the <code><a href=\"../../DynFork/QPaladins/Tools.html#refrash_fields%28doc_ptr%3APointer%28BSON%7CNil%29%29%3ANil-instance-method\">DynFork::QPaladins::Tools#refrash_fields</a></code> method.</p>","abstract":false,"args":[{"name":"val","external_name":"val","restriction":"Int64"}],"args_string":"(val : Int64) : Nil","args_html":"(val : Int64) : Nil","location":{"filename":"src/dynfork/fields/numbers.cr","line_number":146,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L146"},"def":{"name":"refrash_val_i64","args":[{"name":"val","external_name":"val","restriction":"Int64"}],"return_type":"Nil","visibility":"Public","body":"@value = val"}},{"html_id":"step:Int64|Nil-instance-method","name":"step","doc":"Increment step for numeric fields.","summary":"<p>Increment step for numeric fields.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/numbers.cr","line_number":21,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L21"},"def":{"name":"step","return_type":"Int64 | ::Nil","visibility":"Public","body":"if (value = @step).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::I64Field#step cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"step?:Int64|Nil|Nil-instance-method","name":"step?","doc":"Increment step for numeric fields.","summary":"<p>Increment step for numeric fields.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/numbers.cr","line_number":21,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L21"},"def":{"name":"step?","return_type":"Int64 | ::Nil | ::Nil","visibility":"Public","body":"@step"}},{"html_id":"unique?:Bool-instance-method","name":"unique?","doc":"The unique value of a field in a collection.","summary":"<p>The unique value of a field in a collection.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/numbers.cr","line_number":23,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L23"},"def":{"name":"unique?","return_type":"Bool","visibility":"Public","body":"@unique"}},{"html_id":"value:Int64|Nil-instance-method","name":"value","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value","return_type":"Int64 | ::Nil","visibility":"Public","body":"if (value = @value).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::I64Field#value cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"value=(value:Int64|Nil)-instance-method","name":"value=","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Int64 | ::Nil"}],"args_string":"(value : Int64 | Nil)","args_html":"(value : Int64 | Nil)","location":{"filename":"src/dynfork/fields/numbers.cr","line_number":11,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/numbers.cr#L11"},"def":{"name":"value=","args":[{"name":"value","external_name":"value","restriction":"Int64 | ::Nil"}],"visibility":"Public","body":"@value = value"}},{"html_id":"value?:Int64|Nil|Nil-instance-method","name":"value?","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value?","return_type":"Int64 | ::Nil | ::Nil","visibility":"Public","body":"@value"}}]},{"html_id":"dynfork/DynFork/Fields/ImageField","path":"DynFork/Fields/ImageField.html","kind":"struct","full_name":"DynFork::Fields::ImageField","name":"ImageField","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},"ancestors":[{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},{"html_id":"dynfork/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dynfork/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/fields/image.cr","line_number":6,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/image.cr#L6"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Fields","kind":"module","full_name":"DynFork::Fields","name":"Fields"},"doc":"File upload field.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/files\" target=\"_blank\">example</a>.","summary":"<p>File upload field.</p>","constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"File upload field.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/files\" target=\"_blank\">example</a>.","summary":"<p>File upload field.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/dynfork/fields/image.cr","line_number":6,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/image.cr#L6"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}},{"html_id":"new(label:String=\"\",default:String|Nil=nil,placeholder:String=\"\",target_dir:String=\"images\",thumbnails:Array(Tuple(String,Int32))|Nil=nil,maxsize:Int64=2097152,hide:Bool=false,required:Bool=false,disabled:Bool=false,readonly:Bool=false,ignored:Bool=false,hint:String=I18n.t(\"allowed_files.interpolation\",types:\"jpeg,jpg,png,webp\"),warning:String=\"\")-class-method","name":"new","abstract":false,"args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"default","default_value":"nil","external_name":"default","restriction":"String | ::Nil"},{"name":"placeholder","default_value":"\"\"","external_name":"placeholder","restriction":"String"},{"name":"target_dir","default_value":"\"images\"","external_name":"target_dir","restriction":"String"},{"name":"thumbnails","default_value":"nil","external_name":"thumbnails","restriction":"Array(::Tuple(String, Int32)) | ::Nil"},{"name":"maxsize","default_value":"2097152","external_name":"maxsize","restriction":"Int64"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"I18n.t(\"allowed_files.interpolation\", types: \"jpeg, jpg, png, webp\")","external_name":"hint","restriction":"String"},{"name":"warning","default_value":"\"\"","external_name":"warning","restriction":"String"}],"args_string":"(label : String = \"\", default : String | Nil = nil, placeholder : String = \"\", target_dir : String = \"images\", thumbnails : Array(Tuple(String, Int32)) | Nil = nil, maxsize : Int64 = 2097152, hide : Bool = false, required : Bool = false, disabled : Bool = false, readonly : Bool = false, ignored : Bool = false, hint : String = I18n.t(\"allowed_files.interpolation\", types: \"jpeg, jpg, png, webp\"), warning : String = \"\")","args_html":"(label : String = <span class=\"s\">&quot;&quot;</span>, default : String | Nil = <span class=\"n\">nil</span>, placeholder : String = <span class=\"s\">&quot;&quot;</span>, target_dir : String = <span class=\"s\">&quot;images&quot;</span>, thumbnails : Array(Tuple(String, Int32)) | Nil = <span class=\"n\">nil</span>, maxsize : Int64 = <span class=\"n\">2097152</span>, hide : Bool = <span class=\"n\">false</span>, required : Bool = <span class=\"n\">false</span>, disabled : Bool = <span class=\"n\">false</span>, readonly : Bool = <span class=\"n\">false</span>, ignored : Bool = <span class=\"n\">false</span>, hint : String = <span class=\"t\">I18n</span>.t(<span class=\"s\">&quot;allowed_files.interpolation&quot;</span>, types: <span class=\"s\">&quot;jpeg, jpg, png, webp&quot;</span>), warning : String = <span class=\"s\">&quot;&quot;</span>)","location":{"filename":"src/dynfork/fields/image.cr","line_number":123,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/image.cr#L123"},"def":{"name":"new","args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"default","default_value":"nil","external_name":"default","restriction":"String | ::Nil"},{"name":"placeholder","default_value":"\"\"","external_name":"placeholder","restriction":"String"},{"name":"target_dir","default_value":"\"images\"","external_name":"target_dir","restriction":"String"},{"name":"thumbnails","default_value":"nil","external_name":"thumbnails","restriction":"Array(::Tuple(String, Int32)) | ::Nil"},{"name":"maxsize","default_value":"2097152","external_name":"maxsize","restriction":"Int64"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"I18n.t(\"allowed_files.interpolation\", types: \"jpeg, jpg, png, webp\")","external_name":"hint","restriction":"String"},{"name":"warning","default_value":"\"\"","external_name":"warning","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(label, default, placeholder, target_dir, thumbnails, maxsize, hide, required, disabled, readonly, ignored, hint, warning)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"accept:String-instance-method","name":"accept","doc":"HTML attribute: accept.\n<br>\nDescribing which file types to allow.\n<br>\n_Example: \"image/png,image/jpeg,image/webp\"_\nNOTE: https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/accept#unique_file_type_specifiers","summary":"<p>HTML attribute: accept.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/image.cr","line_number":33,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/image.cr#L33"},"def":{"name":"accept","return_type":"String","visibility":"Public","body":"@accept"}},{"html_id":"default:String|Nil-instance-method","name":"default","doc":"Default file path.\n<br>\n_Example: \"public/media/default/noavatar.jpg\"_","summary":"<p>Default file path.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/image.cr","line_number":16,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/image.cr#L16"},"def":{"name":"default","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @default).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::ImageField#default cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"default?:String|Nil|Nil-instance-method","name":"default?","doc":"Default file path.\n<br>\n_Example: \"public/media/default/noavatar.jpg\"_","summary":"<p>Default file path.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/image.cr","line_number":16,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/image.cr#L16"},"def":{"name":"default?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@default"}},{"html_id":"extract_images_dir_path?:String|Nil-instance-method","name":"extract_images_dir_path?","doc":"For the `DynFork::QPaladins::Check#check` method.","summary":"<p>For the <code><a href=\"../../DynFork/QPaladins/Check.html#check%28collection_ptr%3APointer%28Mongo%3A%3ACollection%29%2Csave%3F%3ABool%3Dfalse%29%3ADynFork%3A%3AGlobals%3A%3AOutputData-instance-method\">DynFork::QPaladins::Check#check</a></code> method.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/image.cr","line_number":268,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/image.cr#L268"},"def":{"name":"extract_images_dir_path?","return_type":"String | ::Nil","visibility":"Public","body":"if @value.nil?\nelse\n  @value.images_dir_path?\nend"}},{"html_id":"extract_img_data?:DynFork::Globals::ImageData|Nil-instance-method","name":"extract_img_data?","doc":"For the `DynFork::QPaladins::Check#check` method.","summary":"<p>For the <code><a href=\"../../DynFork/QPaladins/Check.html#check%28collection_ptr%3APointer%28Mongo%3A%3ACollection%29%2Csave%3F%3ABool%3Dfalse%29%3ADynFork%3A%3AGlobals%3A%3AOutputData-instance-method\">DynFork::QPaladins::Check#check</a></code> method.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/image.cr","line_number":263,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/image.cr#L263"},"def":{"name":"extract_img_data?","return_type":"DynFork::Globals::ImageData | ::Nil","visibility":"Public","body":"@value"}},{"html_id":"field_type:String-instance-method","name":"field_type","doc":"Field type - Structure Name.","summary":"<p>Field type - Structure Name.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/image.cr","line_number":8,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/image.cr#L8"},"def":{"name":"field_type","return_type":"String","visibility":"Public","body":"@field_type"}},{"html_id":"from_base64(base64:String|Nil=nil,filename:String|Nil=nil,delete:Bool=false)-instance-method","name":"from_base64","doc":"Convert base64 to a image and save in the target directory.\nfilename: _Example: foo.pdf_","summary":"<p>Convert base64 to a image and save in the target directory.</p>","abstract":false,"args":[{"name":"base64","default_value":"nil","external_name":"base64","restriction":"String | ::Nil"},{"name":"filename","default_value":"nil","external_name":"filename","restriction":"String | ::Nil"},{"name":"delete","default_value":"false","external_name":"delete","restriction":"Bool"}],"args_string":"(base64 : String | Nil = nil, filename : String | Nil = nil, delete : Bool = false)","args_html":"(base64 : String | Nil = <span class=\"n\">nil</span>, filename : String | Nil = <span class=\"n\">nil</span>, delete : Bool = <span class=\"n\">false</span>)","location":{"filename":"src/dynfork/fields/image.cr","line_number":143,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/image.cr#L143"},"def":{"name":"from_base64","args":[{"name":"base64","default_value":"nil","external_name":"base64","restriction":"String | ::Nil"},{"name":"filename","default_value":"nil","external_name":"filename","restriction":"String | ::Nil"},{"name":"delete","default_value":"false","external_name":"delete","restriction":"Bool"}],"visibility":"Public","body":"value = DynFork::Globals::ImageData.new\nvalue.delete = delete\nif base64.nil?\nelse\n  extension : String = Path[filename].extension\n  if extension.empty?\n    raise(DynFork::Errors::Panic.new(\"The image `#{filename}` has no extension.\"))\n  end\n  base64.each_char_with_index do |char, index|\n    if char == ','\n      base64 = base64.delete_at(0, index + 1)\n      break\n    end\n    if index == 40\n      break\n    end\n  end\n  uuid : String = UUID.v4.to_s\n  date : String = Time.utc.to_s(\"%Y-%m-%d\")\n  images_dir_path : String = \"#{@media_root}/#{@target_dir}/#{date}/#{uuid}\"\n  images_dir_url : String = \"#{@media_url}/#{@target_dir}/#{date}/#{uuid}\"\n  target_img_name = \"original#{extension}\"\n  target_path : String = \"#{images_dir_path}/#{target_img_name}\"\n  if Dir.exists?(images_dir_path)\n  else\n    Dir.mkdir_p(path: images_dir_path, mode: 511)\n  end\n  File.write(filename: target_path, content: Base64.decode_string(base64), perm: File::Permissions.new(420))\n  value.path = target_path\n  value.url = \"#{images_dir_url}/#{target_img_name}\"\n  value.name = File.basename(path)\n  value.extension = extension\n  value.images_dir_path = images_dir_path\n  value.images_dir_url = images_dir_url\n  value.size = File.size(path)\nend\n@value = value\n"}},{"html_id":"from_path(path:String|Nil=nil,delete:Bool=false)-instance-method","name":"from_path","doc":"Convert path to a image and save in the target directory.","summary":"<p>Convert path to a image and save in the target directory.</p>","abstract":false,"args":[{"name":"path","default_value":"nil","external_name":"path","restriction":"String | ::Nil"},{"name":"delete","default_value":"false","external_name":"delete","restriction":"Bool"}],"args_string":"(path : String | Nil = nil, delete : Bool = false)","args_html":"(path : String | Nil = <span class=\"n\">nil</span>, delete : Bool = <span class=\"n\">false</span>)","location":{"filename":"src/dynfork/fields/image.cr","line_number":205,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/image.cr#L205"},"def":{"name":"from_path","args":[{"name":"path","default_value":"nil","external_name":"path","restriction":"String | ::Nil"},{"name":"delete","default_value":"false","external_name":"delete","restriction":"Bool"}],"visibility":"Public","body":"value = DynFork::Globals::ImageData.new\nvalue.delete = delete\nif path.nil?\nelse\n  extension = Path[path].extension\n  if extension.empty?\n    raise(DynFork::Errors::Panic.new(\"The image `#{path}` has no extension.\"))\n  end\n  uuid : String = UUID.v4.to_s\n  date : String = Time.utc.to_s(\"%Y-%m-%d\")\n  images_dir_path : String = \"#{@media_root}/#{@target_dir}/#{date}/#{uuid}\"\n  images_dir_url : String = \"#{@media_url}/#{@target_dir}/#{date}/#{uuid}\"\n  target_img_name = \"original#{extension}\"\n  target_path : String = \"#{images_dir_path}/#{target_img_name}\"\n  if Dir.exists?(images_dir_path)\n  else\n    Dir.mkdir_p(path: images_dir_path, mode: 511)\n  end\n  File.write(filename: target_path, content: File.read(path), perm: File::Permissions.new(420))\n  value.path = target_path\n  value.url = \"#{images_dir_url}/#{target_img_name}\"\n  value.name = File.basename(path)\n  value.extension = extension\n  value.images_dir_path = images_dir_path\n  value.images_dir_url = images_dir_url\n  value.size = File.size(path)\nend\n@value = value\n"}},{"html_id":"group:UInt8-instance-method","name":"group","doc":"To optimize field traversal in the `paladins/check()` method.\nWARNING: It is recommended not to change.","summary":"<p>To optimize field traversal in the <code>paladins/check()</code> method.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/image.cr","line_number":43,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/image.cr#L43"},"def":{"name":"group","return_type":"UInt8","visibility":"Public","body":"@group"}},{"html_id":"input_type:String|Nil-instance-method","name":"input_type","doc":"Html tag: input type=\"file\".","summary":"<p>Html tag: input type=&quot;file&quot;.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/image.cr","line_number":10,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/image.cr#L10"},"def":{"name":"input_type","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @input_type).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::ImageField#input_type cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"input_type?:String|Nil|Nil-instance-method","name":"input_type?","doc":"Html tag: input type=\"file\".","summary":"<p>Html tag: input type=&quot;file&quot;.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/image.cr","line_number":10,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/image.cr#L10"},"def":{"name":"input_type?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@input_type"}},{"html_id":"maxsize:Int64-instance-method","name":"maxsize","doc":"The maximum allowed image size in bytes.\nNOTE: 1 MB = 1048576 Bytes (in binary).","summary":"<p>The maximum allowed image size in bytes.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/image.cr","line_number":40,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/image.cr#L40"},"def":{"name":"maxsize","return_type":"Int64","visibility":"Public","body":"@maxsize"}},{"html_id":"media_root:String-instance-method","name":"media_root","doc":"Root directory for storing media files.","summary":"<p>Root directory for storing media files.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/image.cr","line_number":20,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/image.cr#L20"},"def":{"name":"media_root","return_type":"String","visibility":"Public","body":"@media_root"}},{"html_id":"media_root=(media_root:String)-instance-method","name":"media_root=","doc":"Root directory for storing media files.","summary":"<p>Root directory for storing media files.</p>","abstract":false,"args":[{"name":"media_root","external_name":"media_root","restriction":"String"}],"args_string":"(media_root : String)","args_html":"(media_root : String)","location":{"filename":"src/dynfork/fields/image.cr","line_number":20,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/image.cr#L20"},"def":{"name":"media_root=","args":[{"name":"media_root","external_name":"media_root","restriction":"String"}],"visibility":"Public","body":"@media_root = media_root"}},{"html_id":"media_url:String-instance-method","name":"media_url","doc":"URL address for the media directory.","summary":"<p>URL address for the media directory.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/image.cr","line_number":22,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/image.cr#L22"},"def":{"name":"media_url","return_type":"String","visibility":"Public","body":"@media_url"}},{"html_id":"placeholder:String-instance-method","name":"placeholder","doc":"Displays prompt text.","summary":"<p>Displays prompt text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/image.cr","line_number":18,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/image.cr#L18"},"def":{"name":"placeholder","return_type":"String","visibility":"Public","body":"@placeholder"}},{"html_id":"refrash_val_img_data(val:DynFork::Globals::ImageData):Nil-instance-method","name":"refrash_val_img_data","doc":"For the `DynFork::QPaladins::Tools#refrash_fields` method.","summary":"<p>For the <code><a href=\"../../DynFork/QPaladins/Tools.html#refrash_fields%28doc_ptr%3APointer%28BSON%7CNil%29%29%3ANil-instance-method\">DynFork::QPaladins::Tools#refrash_fields</a></code> method.</p>","abstract":false,"args":[{"name":"val","external_name":"val","restriction":"DynFork::Globals::ImageData"}],"args_string":"(val : DynFork::Globals::ImageData) : Nil","args_html":"(val : <a href=\"../../DynFork/Globals/Types/ImageData.html\">DynFork::Globals::ImageData</a>) : Nil","location":{"filename":"src/dynfork/fields/image.cr","line_number":258,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/image.cr#L258"},"def":{"name":"refrash_val_img_data","args":[{"name":"val","external_name":"val","restriction":"DynFork::Globals::ImageData"}],"return_type":"Nil","visibility":"Public","body":"@value = val"}},{"html_id":"target_dir:String-instance-method","name":"target_dir","doc":"Directory for images inside media directory.\n<br>\n_Examples: avatars|photos|images_","summary":"<p>Directory for images inside media directory.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/image.cr","line_number":26,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/image.cr#L26"},"def":{"name":"target_dir","return_type":"String","visibility":"Public","body":"@target_dir"}},{"html_id":"thumbnails:Array(Tuple(String,Int32))|Nil-instance-method","name":"thumbnails","doc":"From one to four inclusive.\n<br>\n_Example: [{\"xs\", 150}, {\"sm\", 300}, {\"md\", 600}, {\"lg\", 1200}]_","summary":"<p>From one to four inclusive.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/image.cr","line_number":37,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/image.cr#L37"},"def":{"name":"thumbnails","return_type":"Array(::Tuple(String, Int32)) | ::Nil","visibility":"Public","body":"if (value = @thumbnails).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::ImageField#thumbnails cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"thumbnails?:Array(Tuple(String,Int32))|Nil|Nil-instance-method","name":"thumbnails?","doc":"From one to four inclusive.\n<br>\n_Example: [{\"xs\", 150}, {\"sm\", 300}, {\"md\", 600}, {\"lg\", 1200}]_","summary":"<p>From one to four inclusive.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/image.cr","line_number":37,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/image.cr#L37"},"def":{"name":"thumbnails?","return_type":"Array(::Tuple(String, Int32)) | ::Nil | ::Nil","visibility":"Public","body":"@thumbnails"}},{"html_id":"value:DynFork::Globals::ImageData|Nil-instance-method","name":"value","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value","return_type":"DynFork::Globals::ImageData | ::Nil","visibility":"Public","body":"if (value = @value).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::ImageField#value cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"value=(value:DynFork::Globals::ImageData|Nil)-instance-method","name":"value=","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"DynFork::Globals::ImageData | ::Nil"}],"args_string":"(value : DynFork::Globals::ImageData | Nil)","args_html":"(value : <a href=\"../../DynFork/Globals/Types/ImageData.html\">DynFork::Globals::ImageData</a> | Nil)","location":{"filename":"src/dynfork/fields/image.cr","line_number":12,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/image.cr#L12"},"def":{"name":"value=","args":[{"name":"value","external_name":"value","restriction":"DynFork::Globals::ImageData | ::Nil"}],"visibility":"Public","body":"@value = value"}},{"html_id":"value?:DynFork::Globals::ImageData|Nil|Nil-instance-method","name":"value?","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value?","return_type":"DynFork::Globals::ImageData | ::Nil | ::Nil","visibility":"Public","body":"@value"}}]},{"html_id":"dynfork/DynFork/Fields/IPField","path":"DynFork/Fields/IPField.html","kind":"struct","full_name":"DynFork::Fields::IPField","name":"IPField","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},"ancestors":[{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},{"html_id":"dynfork/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dynfork/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/fields/ip.cr","line_number":5,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/ip.cr#L5"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Fields","kind":"module","full_name":"DynFork::Fields","name":"Fields"},"doc":"Field for entering IP addresses.","summary":"<p>Field for entering IP addresses.</p>","constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"Field for entering IP addresses.","summary":"<p>Field for entering IP addresses.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/dynfork/fields/ip.cr","line_number":5,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/ip.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}},{"html_id":"new(label:String=\"\",default:String|Nil=nil,placeholder:String=\"\",maxlength:UInt32|Nil=256,hide:Bool=false,unique:Bool=false,required:Bool=false,disabled:Bool=false,readonly:Bool=false,ignored:Bool=false,hint:String=\"\")-class-method","name":"new","abstract":false,"args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"default","default_value":"nil","external_name":"default","restriction":"String | ::Nil"},{"name":"placeholder","default_value":"\"\"","external_name":"placeholder","restriction":"String"},{"name":"maxlength","default_value":"256","external_name":"maxlength","restriction":"UInt32 | ::Nil"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"unique","default_value":"false","external_name":"unique","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"}],"args_string":"(label : String = \"\", default : String | Nil = nil, placeholder : String = \"\", maxlength : UInt32 | Nil = 256, hide : Bool = false, unique : Bool = false, required : Bool = false, disabled : Bool = false, readonly : Bool = false, ignored : Bool = false, hint : String = \"\")","args_html":"(label : String = <span class=\"s\">&quot;&quot;</span>, default : String | Nil = <span class=\"n\">nil</span>, placeholder : String = <span class=\"s\">&quot;&quot;</span>, maxlength : UInt32 | Nil = <span class=\"n\">256</span>, hide : Bool = <span class=\"n\">false</span>, unique : Bool = <span class=\"n\">false</span>, required : Bool = <span class=\"n\">false</span>, disabled : Bool = <span class=\"n\">false</span>, readonly : Bool = <span class=\"n\">false</span>, ignored : Bool = <span class=\"n\">false</span>, hint : String = <span class=\"s\">&quot;&quot;</span>)","location":{"filename":"src/dynfork/fields/ip.cr","line_number":127,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/ip.cr#L127"},"def":{"name":"new","args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"default","default_value":"nil","external_name":"default","restriction":"String | ::Nil"},{"name":"placeholder","default_value":"\"\"","external_name":"placeholder","restriction":"String"},{"name":"maxlength","default_value":"256","external_name":"maxlength","restriction":"UInt32 | ::Nil"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"unique","default_value":"false","external_name":"unique","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(label, default, placeholder, maxlength, hide, unique, required, disabled, readonly, ignored, hint)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"default:String|Nil-instance-method","name":"default","doc":"Value by default.","summary":"<p>Value by default.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/ip.cr","line_number":13,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/ip.cr#L13"},"def":{"name":"default","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @default).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::IPField#default cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"default?:String|Nil|Nil-instance-method","name":"default?","doc":"Value by default.","summary":"<p>Value by default.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/ip.cr","line_number":13,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/ip.cr#L13"},"def":{"name":"default?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@default"}},{"html_id":"field_type:String-instance-method","name":"field_type","doc":"Field type - Structure Name.","summary":"<p>Field type - Structure Name.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/ip.cr","line_number":7,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/ip.cr#L7"},"def":{"name":"field_type","return_type":"String","visibility":"Public","body":"@field_type"}},{"html_id":"group:UInt8-instance-method","name":"group","doc":"To optimize field traversal in the `paladins/check()` method.\nWARNING: It is recommended not to change.","summary":"<p>To optimize field traversal in the <code>paladins/check()</code> method.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/ip.cr","line_number":24,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/ip.cr#L24"},"def":{"name":"group","return_type":"UInt8","visibility":"Public","body":"@group"}},{"html_id":"input_type:String|Nil-instance-method","name":"input_type","doc":"Html tag: input type=\"text\".","summary":"<p>Html tag: input type=&quot;text&quot;.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/ip.cr","line_number":9,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/ip.cr#L9"},"def":{"name":"input_type","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @input_type).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::IPField#input_type cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"input_type?:String|Nil|Nil-instance-method","name":"input_type?","doc":"Html tag: input type=\"text\".","summary":"<p>Html tag: input type=&quot;text&quot;.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/ip.cr","line_number":9,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/ip.cr#L9"},"def":{"name":"input_type?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@input_type"}},{"html_id":"maxlength:UInt32|Nil-instance-method","name":"maxlength","doc":"The maximum number of characters allowed in the text.","summary":"<p>The maximum number of characters allowed in the text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/ip.cr","line_number":17,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/ip.cr#L17"},"def":{"name":"maxlength","return_type":"UInt32 | ::Nil","visibility":"Public","body":"if (value = @maxlength).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::IPField#maxlength cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"maxlength?:UInt32|Nil|Nil-instance-method","name":"maxlength?","doc":"The maximum number of characters allowed in the text.","summary":"<p>The maximum number of characters allowed in the text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/ip.cr","line_number":17,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/ip.cr#L17"},"def":{"name":"maxlength?","return_type":"UInt32 | ::Nil | ::Nil","visibility":"Public","body":"@maxlength"}},{"html_id":"minlength:UInt32|Nil-instance-method","name":"minlength","doc":"The minimum number of characters allowed in the text.","summary":"<p>The minimum number of characters allowed in the text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/ip.cr","line_number":19,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/ip.cr#L19"},"def":{"name":"minlength","return_type":"UInt32 | ::Nil","visibility":"Public","body":"if (value = @minlength).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::IPField#minlength cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"minlength?:UInt32|Nil|Nil-instance-method","name":"minlength?","doc":"The minimum number of characters allowed in the text.","summary":"<p>The minimum number of characters allowed in the text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/ip.cr","line_number":19,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/ip.cr#L19"},"def":{"name":"minlength?","return_type":"UInt32 | ::Nil | ::Nil","visibility":"Public","body":"@minlength"}},{"html_id":"placeholder:String-instance-method","name":"placeholder","doc":"Displays prompt text.","summary":"<p>Displays prompt text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/ip.cr","line_number":15,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/ip.cr#L15"},"def":{"name":"placeholder","return_type":"String","visibility":"Public","body":"@placeholder"}},{"html_id":"refrash_val_str(val:String):Nil-instance-method","name":"refrash_val_str","doc":"For the `DynFork::QPaladins::Tools#refrash_fields` method.","summary":"<p>For the <code><a href=\"../../DynFork/QPaladins/Tools.html#refrash_fields%28doc_ptr%3APointer%28BSON%7CNil%29%29%3ANil-instance-method\">DynFork::QPaladins::Tools#refrash_fields</a></code> method.</p>","abstract":false,"args":[{"name":"val","external_name":"val","restriction":"String"}],"args_string":"(val : String) : Nil","args_html":"(val : String) : Nil","location":{"filename":"src/dynfork/fields/ip.cr","line_number":145,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/ip.cr#L145"},"def":{"name":"refrash_val_str","args":[{"name":"val","external_name":"val","restriction":"String"}],"return_type":"Nil","visibility":"Public","body":"@value = val"}},{"html_id":"unique?:Bool-instance-method","name":"unique?","doc":"The unique value of a field in a collection.","summary":"<p>The unique value of a field in a collection.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/ip.cr","line_number":21,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/ip.cr#L21"},"def":{"name":"unique?","return_type":"Bool","visibility":"Public","body":"@unique"}},{"html_id":"value:String|Nil-instance-method","name":"value","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @value).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::IPField#value cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"value=(value:String|Nil)-instance-method","name":"value=","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String | ::Nil"}],"args_string":"(value : String | Nil)","args_html":"(value : String | Nil)","location":{"filename":"src/dynfork/fields/ip.cr","line_number":11,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/ip.cr#L11"},"def":{"name":"value=","args":[{"name":"value","external_name":"value","restriction":"String | ::Nil"}],"visibility":"Public","body":"@value = value"}},{"html_id":"value?:String|Nil|Nil-instance-method","name":"value?","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@value"}}]},{"html_id":"dynfork/DynFork/Fields/PasswordField","path":"DynFork/Fields/PasswordField.html","kind":"struct","full_name":"DynFork::Fields::PasswordField","name":"PasswordField","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},"ancestors":[{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},{"html_id":"dynfork/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dynfork/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/fields/password.cr","line_number":9,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/password.cr#L9"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Fields","kind":"module","full_name":"DynFork::Fields","name":"Fields"},"doc":"Field for entering password.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/password\" target=\"_blank\">example</a>.\nWARNING: Default regular expression: /^[-._!\"`'#%&,:;<>=@{}~\\$\\(\\)\\*\\+\\/\\\\\\?\\[\\]\\^\\|a-zA-Z0-9]+$/\nWARNING: Valid characters by default: a-z A-Z 0-9 - . _ ! \" ` ' # % & , : ; < > = @ { } ~ $ ( ) * + / \\ ? [ ] ^ |\nWARNING: Default number of characters: max = 256, min = 8","summary":"<p>Field for entering password.</p>","constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"Field for entering password.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/password\" target=\"_blank\">example</a>.\nWARNING: Default regular expression: /^[-._!\"`'#%&,:;<>=@{}~\\$\\(\\)\\*\\+\\/\\\\\\?\\[\\]\\^\\|a-zA-Z0-9]+$/\nWARNING: Valid characters by default: a-z A-Z 0-9 - . _ ! \" ` ' # % & , : ; < > = @ { } ~ $ ( ) * + / \\ ? [ ] ^ |\nWARNING: Default number of characters: max = 256, min = 8","summary":"<p>Field for entering password.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/dynfork/fields/password.cr","line_number":9,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/password.cr#L9"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}},{"html_id":"new(label:String=\"\",placeholder:String=\"\",maxlength:UInt32|Nil=256,minlength:UInt32|Nil=8,regex:String|Nil=nil,regex_err_msg:String|Nil=nil,hide:Bool=false,required:Bool=true,ignored:Bool=false,hint:String=\"\",warning:String=\"\")-class-method","name":"new","abstract":false,"args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"placeholder","default_value":"\"\"","external_name":"placeholder","restriction":"String"},{"name":"maxlength","default_value":"256","external_name":"maxlength","restriction":"UInt32 | ::Nil"},{"name":"minlength","default_value":"8","external_name":"minlength","restriction":"UInt32 | ::Nil"},{"name":"regex","default_value":"nil","external_name":"regex","restriction":"String | ::Nil"},{"name":"regex_err_msg","default_value":"nil","external_name":"regex_err_msg","restriction":"String | ::Nil"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"required","default_value":"true","external_name":"required","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"},{"name":"warning","default_value":"\"\"","external_name":"warning","restriction":"String"}],"args_string":"(label : String = \"\", placeholder : String = \"\", maxlength : UInt32 | Nil = 256, minlength : UInt32 | Nil = 8, regex : String | Nil = nil, regex_err_msg : String | Nil = nil, hide : Bool = false, required : Bool = true, ignored : Bool = false, hint : String = \"\", warning : String = \"\")","args_html":"(label : String = <span class=\"s\">&quot;&quot;</span>, placeholder : String = <span class=\"s\">&quot;&quot;</span>, maxlength : UInt32 | Nil = <span class=\"n\">256</span>, minlength : UInt32 | Nil = <span class=\"n\">8</span>, regex : String | Nil = <span class=\"n\">nil</span>, regex_err_msg : String | Nil = <span class=\"n\">nil</span>, hide : Bool = <span class=\"n\">false</span>, required : Bool = <span class=\"n\">true</span>, ignored : Bool = <span class=\"n\">false</span>, hint : String = <span class=\"s\">&quot;&quot;</span>, warning : String = <span class=\"s\">&quot;&quot;</span>)","location":{"filename":"src/dynfork/fields/password.cr","line_number":131,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/password.cr#L131"},"def":{"name":"new","args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"placeholder","default_value":"\"\"","external_name":"placeholder","restriction":"String"},{"name":"maxlength","default_value":"256","external_name":"maxlength","restriction":"UInt32 | ::Nil"},{"name":"minlength","default_value":"8","external_name":"minlength","restriction":"UInt32 | ::Nil"},{"name":"regex","default_value":"nil","external_name":"regex","restriction":"String | ::Nil"},{"name":"regex_err_msg","default_value":"nil","external_name":"regex_err_msg","restriction":"String | ::Nil"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"required","default_value":"true","external_name":"required","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"},{"name":"warning","default_value":"\"\"","external_name":"warning","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(label, placeholder, maxlength, minlength, regex, regex_err_msg, hide, required, ignored, hint, warning)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"field_type:String-instance-method","name":"field_type","doc":"Field type - Structure Name.","summary":"<p>Field type - Structure Name.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/password.cr","line_number":11,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/password.cr#L11"},"def":{"name":"field_type","return_type":"String","visibility":"Public","body":"@field_type"}},{"html_id":"group:UInt8-instance-method","name":"group","doc":"To optimize field traversal in the `paladins/check()` method.\nWARNING: It is recommended not to change.","summary":"<p>To optimize field traversal in the <code>paladins/check()</code> method.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/password.cr","line_number":28,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/password.cr#L28"},"def":{"name":"group","return_type":"UInt8","visibility":"Public","body":"@group"}},{"html_id":"input_type:String|Nil-instance-method","name":"input_type","doc":"Html tag: input type=\"password\".","summary":"<p>Html tag: input type=&quot;password&quot;.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/password.cr","line_number":13,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/password.cr#L13"},"def":{"name":"input_type","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @input_type).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::PasswordField#input_type cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"input_type?:String|Nil|Nil-instance-method","name":"input_type?","doc":"Html tag: input type=\"password\".","summary":"<p>Html tag: input type=&quot;password&quot;.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/password.cr","line_number":13,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/password.cr#L13"},"def":{"name":"input_type?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@input_type"}},{"html_id":"maxlength:UInt32|Nil-instance-method","name":"maxlength","doc":"The maximum number of characters allowed in the text.","summary":"<p>The maximum number of characters allowed in the text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/password.cr","line_number":19,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/password.cr#L19"},"def":{"name":"maxlength","return_type":"UInt32 | ::Nil","visibility":"Public","body":"if (value = @maxlength).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::PasswordField#maxlength cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"maxlength?:UInt32|Nil|Nil-instance-method","name":"maxlength?","doc":"The maximum number of characters allowed in the text.","summary":"<p>The maximum number of characters allowed in the text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/password.cr","line_number":19,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/password.cr#L19"},"def":{"name":"maxlength?","return_type":"UInt32 | ::Nil | ::Nil","visibility":"Public","body":"@maxlength"}},{"html_id":"minlength:UInt32|Nil-instance-method","name":"minlength","doc":"The minimum number of characters allowed in the text.","summary":"<p>The minimum number of characters allowed in the text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/password.cr","line_number":21,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/password.cr#L21"},"def":{"name":"minlength","return_type":"UInt32 | ::Nil","visibility":"Public","body":"if (value = @minlength).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::PasswordField#minlength cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"minlength?:UInt32|Nil|Nil-instance-method","name":"minlength?","doc":"The minimum number of characters allowed in the text.","summary":"<p>The minimum number of characters allowed in the text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/password.cr","line_number":21,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/password.cr#L21"},"def":{"name":"minlength?","return_type":"UInt32 | ::Nil | ::Nil","visibility":"Public","body":"@minlength"}},{"html_id":"placeholder:String-instance-method","name":"placeholder","doc":"Displays prompt text.","summary":"<p>Displays prompt text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/password.cr","line_number":17,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/password.cr#L17"},"def":{"name":"placeholder","return_type":"String","visibility":"Public","body":"@placeholder"}},{"html_id":"refrash_val_str(val:String):Nil-instance-method","name":"refrash_val_str","doc":"For the `DynFork::QPaladins::Tools#refrash_fields` method.","summary":"<p>For the <code><a href=\"../../DynFork/QPaladins/Tools.html#refrash_fields%28doc_ptr%3APointer%28BSON%7CNil%29%29%3ANil-instance-method\">DynFork::QPaladins::Tools#refrash_fields</a></code> method.</p>","abstract":false,"args":[{"name":"val","external_name":"val","restriction":"String"}],"args_string":"(val : String) : Nil","args_html":"(val : String) : Nil","location":{"filename":"src/dynfork/fields/password.cr","line_number":148,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/password.cr#L148"},"def":{"name":"refrash_val_str","args":[{"name":"val","external_name":"val","restriction":"String"}],"return_type":"Nil","visibility":"Public","body":"@value = val"}},{"html_id":"regex:String|Nil-instance-method","name":"regex","doc":"Regular expression to validate the value.","summary":"<p>Regular expression to validate the value.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/password.cr","line_number":23,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/password.cr#L23"},"def":{"name":"regex","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @regex).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::PasswordField#regex cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"regex?:String|Nil|Nil-instance-method","name":"regex?","doc":"Regular expression to validate the value.","summary":"<p>Regular expression to validate the value.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/password.cr","line_number":23,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/password.cr#L23"},"def":{"name":"regex?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@regex"}},{"html_id":"regex_err_msg:String|Nil-instance-method","name":"regex_err_msg","doc":"Error message.","summary":"<p>Error message.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/password.cr","line_number":25,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/password.cr#L25"},"def":{"name":"regex_err_msg","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @regex_err_msg).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::PasswordField#regex_err_msg cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"regex_err_msg?:String|Nil|Nil-instance-method","name":"regex_err_msg?","doc":"Error message.","summary":"<p>Error message.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/password.cr","line_number":25,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/password.cr#L25"},"def":{"name":"regex_err_msg?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@regex_err_msg"}},{"html_id":"value:String|Nil-instance-method","name":"value","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @value).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::PasswordField#value cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"value=(value:String|Nil)-instance-method","name":"value=","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String | ::Nil"}],"args_string":"(value : String | Nil)","args_html":"(value : String | Nil)","location":{"filename":"src/dynfork/fields/password.cr","line_number":15,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/password.cr#L15"},"def":{"name":"value=","args":[{"name":"value","external_name":"value","restriction":"String | ::Nil"}],"visibility":"Public","body":"@value = value"}},{"html_id":"value?:String|Nil|Nil-instance-method","name":"value?","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@value"}}]},{"html_id":"dynfork/DynFork/Fields/PhoneField","path":"DynFork/Fields/PhoneField.html","kind":"struct","full_name":"DynFork::Fields::PhoneField","name":"PhoneField","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},"ancestors":[{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},{"html_id":"dynfork/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dynfork/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/fields/phone.cr","line_number":5,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/phone.cr#L5"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Fields","kind":"module","full_name":"DynFork::Fields","name":"Fields"},"doc":"Field for entering Phone number.","summary":"<p>Field for entering Phone number.</p>","constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"Field for entering Phone number.","summary":"<p>Field for entering Phone number.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/dynfork/fields/phone.cr","line_number":5,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/phone.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}},{"html_id":"new(label:String=\"\",default:String|Nil=nil,placeholder:String=\"\",maxlength:UInt32|Nil=nil,minlength:UInt32|Nil=nil,regex:String|Nil=\"^[+]?[0-9]{8,15}$\",regex_err_msg:String|Nil=I18n.t(:invalid_phone),hide:Bool=false,unique:Bool=false,required:Bool=false,disabled:Bool=false,readonly:Bool=false,ignored:Bool=false,hint:String=I18n.t(\"format.interpolation\",sample:\"+xxxxxxxx...orxxxxxxxx...\"),warning:String=\"\")-class-method","name":"new","abstract":false,"args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"default","default_value":"nil","external_name":"default","restriction":"String | ::Nil"},{"name":"placeholder","default_value":"\"\"","external_name":"placeholder","restriction":"String"},{"name":"maxlength","default_value":"nil","external_name":"maxlength","restriction":"UInt32 | ::Nil"},{"name":"minlength","default_value":"nil","external_name":"minlength","restriction":"UInt32 | ::Nil"},{"name":"regex","default_value":"\"^[+]?[0-9]{8,15}$\"","external_name":"regex","restriction":"String | ::Nil"},{"name":"regex_err_msg","default_value":"I18n.t(:invalid_phone)","external_name":"regex_err_msg","restriction":"String | ::Nil"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"unique","default_value":"false","external_name":"unique","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"I18n.t(\"format.interpolation\", sample: \"+xxxxxxxx... or xxxxxxxx...\")","external_name":"hint","restriction":"String"},{"name":"warning","default_value":"\"\"","external_name":"warning","restriction":"String"}],"args_string":"(label : String = \"\", default : String | Nil = nil, placeholder : String = \"\", maxlength : UInt32 | Nil = nil, minlength : UInt32 | Nil = nil, regex : String | Nil = \"^[+]?[0-9]{8,15}$\", regex_err_msg : String | Nil = I18n.t(:invalid_phone), hide : Bool = false, unique : Bool = false, required : Bool = false, disabled : Bool = false, readonly : Bool = false, ignored : Bool = false, hint : String = I18n.t(\"format.interpolation\", sample: \"+xxxxxxxx... or xxxxxxxx...\"), warning : String = \"\")","args_html":"(label : String = <span class=\"s\">&quot;&quot;</span>, default : String | Nil = <span class=\"n\">nil</span>, placeholder : String = <span class=\"s\">&quot;&quot;</span>, maxlength : UInt32 | Nil = <span class=\"n\">nil</span>, minlength : UInt32 | Nil = <span class=\"n\">nil</span>, regex : String | Nil = <span class=\"s\">&quot;^[+]?[0-9]{8,15}$&quot;</span>, regex_err_msg : String | Nil = <span class=\"t\">I18n</span>.t(<span class=\"n\">:invalid_phone</span>), hide : Bool = <span class=\"n\">false</span>, unique : Bool = <span class=\"n\">false</span>, required : Bool = <span class=\"n\">false</span>, disabled : Bool = <span class=\"n\">false</span>, readonly : Bool = <span class=\"n\">false</span>, ignored : Bool = <span class=\"n\">false</span>, hint : String = <span class=\"t\">I18n</span>.t(<span class=\"s\">&quot;format.interpolation&quot;</span>, sample: <span class=\"s\">&quot;+xxxxxxxx... or xxxxxxxx...&quot;</span>), warning : String = <span class=\"s\">&quot;&quot;</span>)","location":{"filename":"src/dynfork/fields/phone.cr","line_number":127,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/phone.cr#L127"},"def":{"name":"new","args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"default","default_value":"nil","external_name":"default","restriction":"String | ::Nil"},{"name":"placeholder","default_value":"\"\"","external_name":"placeholder","restriction":"String"},{"name":"maxlength","default_value":"nil","external_name":"maxlength","restriction":"UInt32 | ::Nil"},{"name":"minlength","default_value":"nil","external_name":"minlength","restriction":"UInt32 | ::Nil"},{"name":"regex","default_value":"\"^[+]?[0-9]{8,15}$\"","external_name":"regex","restriction":"String | ::Nil"},{"name":"regex_err_msg","default_value":"I18n.t(:invalid_phone)","external_name":"regex_err_msg","restriction":"String | ::Nil"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"unique","default_value":"false","external_name":"unique","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"I18n.t(\"format.interpolation\", sample: \"+xxxxxxxx... or xxxxxxxx...\")","external_name":"hint","restriction":"String"},{"name":"warning","default_value":"\"\"","external_name":"warning","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(label, default, placeholder, maxlength, minlength, regex, regex_err_msg, hide, unique, required, disabled, readonly, ignored, hint, warning)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"default:String|Nil-instance-method","name":"default","doc":"Value by default.","summary":"<p>Value by default.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/phone.cr","line_number":13,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/phone.cr#L13"},"def":{"name":"default","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @default).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::PhoneField#default cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"default?:String|Nil|Nil-instance-method","name":"default?","doc":"Value by default.","summary":"<p>Value by default.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/phone.cr","line_number":13,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/phone.cr#L13"},"def":{"name":"default?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@default"}},{"html_id":"field_type:String-instance-method","name":"field_type","doc":"Field type - Structure Name.","summary":"<p>Field type - Structure Name.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/phone.cr","line_number":7,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/phone.cr#L7"},"def":{"name":"field_type","return_type":"String","visibility":"Public","body":"@field_type"}},{"html_id":"group:UInt8-instance-method","name":"group","doc":"To optimize field traversal in the `paladins/check()` method.\nWARNING: It is recommended not to change.","summary":"<p>To optimize field traversal in the <code>paladins/check()</code> method.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/phone.cr","line_number":28,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/phone.cr#L28"},"def":{"name":"group","return_type":"UInt8","visibility":"Public","body":"@group"}},{"html_id":"input_type:String|Nil-instance-method","name":"input_type","doc":"Html tag: input type=\"tel\".","summary":"<p>Html tag: input type=&quot;tel&quot;.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/phone.cr","line_number":9,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/phone.cr#L9"},"def":{"name":"input_type","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @input_type).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::PhoneField#input_type cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"input_type?:String|Nil|Nil-instance-method","name":"input_type?","doc":"Html tag: input type=\"tel\".","summary":"<p>Html tag: input type=&quot;tel&quot;.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/phone.cr","line_number":9,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/phone.cr#L9"},"def":{"name":"input_type?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@input_type"}},{"html_id":"maxlength:UInt32|Nil-instance-method","name":"maxlength","doc":"The maximum number of characters allowed in the text.","summary":"<p>The maximum number of characters allowed in the text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/phone.cr","line_number":17,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/phone.cr#L17"},"def":{"name":"maxlength","return_type":"UInt32 | ::Nil","visibility":"Public","body":"if (value = @maxlength).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::PhoneField#maxlength cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"maxlength?:UInt32|Nil|Nil-instance-method","name":"maxlength?","doc":"The maximum number of characters allowed in the text.","summary":"<p>The maximum number of characters allowed in the text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/phone.cr","line_number":17,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/phone.cr#L17"},"def":{"name":"maxlength?","return_type":"UInt32 | ::Nil | ::Nil","visibility":"Public","body":"@maxlength"}},{"html_id":"minlength:UInt32|Nil-instance-method","name":"minlength","doc":"The minimum number of characters allowed in the text.","summary":"<p>The minimum number of characters allowed in the text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/phone.cr","line_number":19,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/phone.cr#L19"},"def":{"name":"minlength","return_type":"UInt32 | ::Nil","visibility":"Public","body":"if (value = @minlength).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::PhoneField#minlength cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"minlength?:UInt32|Nil|Nil-instance-method","name":"minlength?","doc":"The minimum number of characters allowed in the text.","summary":"<p>The minimum number of characters allowed in the text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/phone.cr","line_number":19,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/phone.cr#L19"},"def":{"name":"minlength?","return_type":"UInt32 | ::Nil | ::Nil","visibility":"Public","body":"@minlength"}},{"html_id":"placeholder:String-instance-method","name":"placeholder","doc":"Displays prompt text.","summary":"<p>Displays prompt text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/phone.cr","line_number":15,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/phone.cr#L15"},"def":{"name":"placeholder","return_type":"String","visibility":"Public","body":"@placeholder"}},{"html_id":"refrash_val_str(val:String):Nil-instance-method","name":"refrash_val_str","doc":"For the `DynFork::QPaladins::Tools#refrash_fields` method.","summary":"<p>For the <code><a href=\"../../DynFork/QPaladins/Tools.html#refrash_fields%28doc_ptr%3APointer%28BSON%7CNil%29%29%3ANil-instance-method\">DynFork::QPaladins::Tools#refrash_fields</a></code> method.</p>","abstract":false,"args":[{"name":"val","external_name":"val","restriction":"String"}],"args_string":"(val : String) : Nil","args_html":"(val : String) : Nil","location":{"filename":"src/dynfork/fields/phone.cr","line_number":148,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/phone.cr#L148"},"def":{"name":"refrash_val_str","args":[{"name":"val","external_name":"val","restriction":"String"}],"return_type":"Nil","visibility":"Public","body":"@value = val"}},{"html_id":"regex:String|Nil-instance-method","name":"regex","doc":"Regular expression to validate the `value`.","summary":"<p>Regular expression to validate the <code><a href=\"../../DynFork/Fields/PhoneField.html#value%3AString%7CNil-instance-method\">#value</a></code>.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/phone.cr","line_number":21,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/phone.cr#L21"},"def":{"name":"regex","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @regex).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::PhoneField#regex cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"regex?:String|Nil|Nil-instance-method","name":"regex?","doc":"Regular expression to validate the `value`.","summary":"<p>Regular expression to validate the <code><a href=\"../../DynFork/Fields/PhoneField.html#value%3AString%7CNil-instance-method\">#value</a></code>.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/phone.cr","line_number":21,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/phone.cr#L21"},"def":{"name":"regex?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@regex"}},{"html_id":"regex_err_msg:String|Nil-instance-method","name":"regex_err_msg","doc":"Error message.","summary":"<p>Error message.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/phone.cr","line_number":23,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/phone.cr#L23"},"def":{"name":"regex_err_msg","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @regex_err_msg).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::PhoneField#regex_err_msg cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"regex_err_msg?:String|Nil|Nil-instance-method","name":"regex_err_msg?","doc":"Error message.","summary":"<p>Error message.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/phone.cr","line_number":23,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/phone.cr#L23"},"def":{"name":"regex_err_msg?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@regex_err_msg"}},{"html_id":"unique?:Bool-instance-method","name":"unique?","doc":"The unique value of a field in a collection.","summary":"<p>The unique value of a field in a collection.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/phone.cr","line_number":25,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/phone.cr#L25"},"def":{"name":"unique?","return_type":"Bool","visibility":"Public","body":"@unique"}},{"html_id":"value:String|Nil-instance-method","name":"value","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @value).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::PhoneField#value cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"value=(value:String|Nil)-instance-method","name":"value=","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String | ::Nil"}],"args_string":"(value : String | Nil)","args_html":"(value : String | Nil)","location":{"filename":"src/dynfork/fields/phone.cr","line_number":11,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/phone.cr#L11"},"def":{"name":"value=","args":[{"name":"value","external_name":"value","restriction":"String | ::Nil"}],"visibility":"Public","body":"@value = value"}},{"html_id":"value?:String|Nil|Nil-instance-method","name":"value?","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@value"}}]},{"html_id":"dynfork/DynFork/Fields/SlugField","path":"DynFork/Fields/SlugField.html","kind":"struct","full_name":"DynFork::Fields::SlugField","name":"SlugField","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},"ancestors":[{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},{"html_id":"dynfork/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dynfork/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/fields/slug.cr","line_number":10,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/slug.cr#L10"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Fields","kind":"module","full_name":"DynFork::Fields","name":"Fields"},"doc":"Automatically creates a label from letters, numbers, and hyphens.\n<br>\nConvenient to use for Url addresses.\n<br>\nWARNING: Allowed field types: _HashField_, _TextField_, _EmailField_,\n_DateField_, _DateTimeField_, _I64Field_, _F64Field_.","summary":"<p>Automatically creates a label from letters, numbers, and hyphens.</p>","constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"Automatically creates a label from letters, numbers, and hyphens.\n<br>\nConvenient to use for Url addresses.\n<br>\nWARNING: Allowed field types: _HashField_, _TextField_, _EmailField_,\n_DateField_, _DateTimeField_, _I64Field_, _F64Field_.","summary":"<p>Automatically creates a label from letters, numbers, and hyphens.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/dynfork/fields/slug.cr","line_number":10,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/slug.cr#L10"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}},{"html_id":"new(label:String=\"\",placeholder:String=\"\",hide:Bool=false,disabled:Bool=false,readonly:Bool=true,ignored:Bool=false,slug_sources:Array(String)=[\"hash\"],hint:String=\"\",warning:String=\"\")-class-method","name":"new","abstract":false,"args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"placeholder","default_value":"\"\"","external_name":"placeholder","restriction":"String"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"true","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"slug_sources","default_value":"[\"hash\"]","external_name":"slug_sources","restriction":"Array(String)"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"},{"name":"warning","default_value":"\"\"","external_name":"warning","restriction":"String"}],"args_string":"(label : String = \"\", placeholder : String = \"\", hide : Bool = false, disabled : Bool = false, readonly : Bool = true, ignored : Bool = false, slug_sources : Array(String) = [\"hash\"], hint : String = \"\", warning : String = \"\")","args_html":"(label : String = <span class=\"s\">&quot;&quot;</span>, placeholder : String = <span class=\"s\">&quot;&quot;</span>, hide : Bool = <span class=\"n\">false</span>, disabled : Bool = <span class=\"n\">false</span>, readonly : Bool = <span class=\"n\">true</span>, ignored : Bool = <span class=\"n\">false</span>, slug_sources : Array(String) = [<span class=\"s\">&quot;hash&quot;</span>], hint : String = <span class=\"s\">&quot;&quot;</span>, warning : String = <span class=\"s\">&quot;&quot;</span>)","location":{"filename":"src/dynfork/fields/slug.cr","line_number":144,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/slug.cr#L144"},"def":{"name":"new","args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"placeholder","default_value":"\"\"","external_name":"placeholder","restriction":"String"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"true","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"slug_sources","default_value":"[\"hash\"]","external_name":"slug_sources","restriction":"Array(String)"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"},{"name":"warning","default_value":"\"\"","external_name":"warning","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(label, placeholder, hide, disabled, readonly, ignored, slug_sources, hint, warning)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"field_type:String-instance-method","name":"field_type","doc":"Field type - Structure Name.","summary":"<p>Field type - Structure Name.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/slug.cr","line_number":12,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/slug.cr#L12"},"def":{"name":"field_type","return_type":"String","visibility":"Public","body":"@field_type"}},{"html_id":"group:UInt8-instance-method","name":"group","doc":"To optimize field traversal in the `paladins/check()` method.\nWARNING: It is recommended not to change.","summary":"<p>To optimize field traversal in the <code>paladins/check()</code> method.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/slug.cr","line_number":29,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/slug.cr#L29"},"def":{"name":"group","return_type":"UInt8","visibility":"Public","body":"@group"}},{"html_id":"input_type:String|Nil-instance-method","name":"input_type","doc":"Html tag: input type=\"text\".","summary":"<p>Html tag: input type=&quot;text&quot;.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/slug.cr","line_number":14,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/slug.cr#L14"},"def":{"name":"input_type","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @input_type).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::SlugField#input_type cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"input_type?:String|Nil|Nil-instance-method","name":"input_type?","doc":"Html tag: input type=\"text\".","summary":"<p>Html tag: input type=&quot;text&quot;.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/slug.cr","line_number":14,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/slug.cr#L14"},"def":{"name":"input_type?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@input_type"}},{"html_id":"placeholder:String-instance-method","name":"placeholder","doc":"Displays prompt text.","summary":"<p>Displays prompt text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/slug.cr","line_number":18,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/slug.cr#L18"},"def":{"name":"placeholder","return_type":"String","visibility":"Public","body":"@placeholder"}},{"html_id":"refrash_val_str(val:String):Nil-instance-method","name":"refrash_val_str","doc":"For the `DynFork::QPaladins::Tools#refrash_fields` method.","summary":"<p>For the <code><a href=\"../../DynFork/QPaladins/Tools.html#refrash_fields%28doc_ptr%3APointer%28BSON%7CNil%29%29%3ANil-instance-method\">DynFork::QPaladins::Tools#refrash_fields</a></code> method.</p>","abstract":false,"args":[{"name":"val","external_name":"val","restriction":"String"}],"args_string":"(val : String) : Nil","args_html":"(val : String) : Nil","location":{"filename":"src/dynfork/fields/slug.cr","line_number":164,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/slug.cr#L164"},"def":{"name":"refrash_val_str","args":[{"name":"val","external_name":"val","restriction":"String"}],"return_type":"Nil","visibility":"Public","body":"@value = val"}},{"html_id":"slug_sources:Array(String)-instance-method","name":"slug_sources","doc":"Getter for 'slug_sources'.","summary":"<p>Getter for 'slug_sources'.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/slug.cr","line_number":159,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/slug.cr#L159"},"def":{"name":"slug_sources","return_type":"Array(String)","visibility":"Public","body":"@slug_sources"}},{"html_id":"unique?:Bool-instance-method","name":"unique?","doc":"The unique value of a field in a collection.","summary":"<p>The unique value of a field in a collection.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/slug.cr","line_number":20,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/slug.cr#L20"},"def":{"name":"unique?","return_type":"Bool","visibility":"Public","body":"@unique"}},{"html_id":"value:String|Nil-instance-method","name":"value","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @value).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::SlugField#value cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"value=(value:String|Nil)-instance-method","name":"value=","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String | ::Nil"}],"args_string":"(value : String | Nil)","args_html":"(value : String | Nil)","location":{"filename":"src/dynfork/fields/slug.cr","line_number":16,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/slug.cr#L16"},"def":{"name":"value=","args":[{"name":"value","external_name":"value","restriction":"String | ::Nil"}],"visibility":"Public","body":"@value = value"}},{"html_id":"value?:String|Nil|Nil-instance-method","name":"value?","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@value"}}]},{"html_id":"dynfork/DynFork/Fields/TextField","path":"DynFork/Fields/TextField.html","kind":"struct","full_name":"DynFork::Fields::TextField","name":"TextField","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},"ancestors":[{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},{"html_id":"dynfork/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dynfork/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/fields/text.cr","line_number":5,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/text.cr#L5"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Fields","kind":"module","full_name":"DynFork::Fields","name":"Fields"},"doc":"A field for entering a text string.","summary":"<p>A field for entering a text string.</p>","constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"A field for entering a text string.","summary":"<p>A field for entering a text string.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/dynfork/fields/text.cr","line_number":5,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/text.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}},{"html_id":"new(label:String=\"\",default:String|Nil=nil,placeholder:String=\"\",maxlength:UInt32|Nil=256,minlength:UInt32|Nil=0,regex:String|Nil=nil,regex_err_msg:String|Nil=nil,hide:Bool=false,unique:Bool=false,textarea:Bool=false,use_editor:Bool=false,required:Bool=false,disabled:Bool=false,readonly:Bool=false,ignored:Bool=false,hint:String=\"\")-class-method","name":"new","abstract":false,"args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"default","default_value":"nil","external_name":"default","restriction":"String | ::Nil"},{"name":"placeholder","default_value":"\"\"","external_name":"placeholder","restriction":"String"},{"name":"maxlength","default_value":"256","external_name":"maxlength","restriction":"UInt32 | ::Nil"},{"name":"minlength","default_value":"0","external_name":"minlength","restriction":"UInt32 | ::Nil"},{"name":"regex","default_value":"nil","external_name":"regex","restriction":"String | ::Nil"},{"name":"regex_err_msg","default_value":"nil","external_name":"regex_err_msg","restriction":"String | ::Nil"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"unique","default_value":"false","external_name":"unique","restriction":"Bool"},{"name":"textarea","default_value":"false","external_name":"textarea","restriction":"Bool"},{"name":"use_editor","default_value":"false","external_name":"use_editor","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"}],"args_string":"(label : String = \"\", default : String | Nil = nil, placeholder : String = \"\", maxlength : UInt32 | Nil = 256, minlength : UInt32 | Nil = 0, regex : String | Nil = nil, regex_err_msg : String | Nil = nil, hide : Bool = false, unique : Bool = false, textarea : Bool = false, use_editor : Bool = false, required : Bool = false, disabled : Bool = false, readonly : Bool = false, ignored : Bool = false, hint : String = \"\")","args_html":"(label : String = <span class=\"s\">&quot;&quot;</span>, default : String | Nil = <span class=\"n\">nil</span>, placeholder : String = <span class=\"s\">&quot;&quot;</span>, maxlength : UInt32 | Nil = <span class=\"n\">256</span>, minlength : UInt32 | Nil = <span class=\"n\">0</span>, regex : String | Nil = <span class=\"n\">nil</span>, regex_err_msg : String | Nil = <span class=\"n\">nil</span>, hide : Bool = <span class=\"n\">false</span>, unique : Bool = <span class=\"n\">false</span>, textarea : Bool = <span class=\"n\">false</span>, use_editor : Bool = <span class=\"n\">false</span>, required : Bool = <span class=\"n\">false</span>, disabled : Bool = <span class=\"n\">false</span>, readonly : Bool = <span class=\"n\">false</span>, ignored : Bool = <span class=\"n\">false</span>, hint : String = <span class=\"s\">&quot;&quot;</span>)","location":{"filename":"src/dynfork/fields/text.cr","line_number":129,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/text.cr#L129"},"def":{"name":"new","args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"default","default_value":"nil","external_name":"default","restriction":"String | ::Nil"},{"name":"placeholder","default_value":"\"\"","external_name":"placeholder","restriction":"String"},{"name":"maxlength","default_value":"256","external_name":"maxlength","restriction":"UInt32 | ::Nil"},{"name":"minlength","default_value":"0","external_name":"minlength","restriction":"UInt32 | ::Nil"},{"name":"regex","default_value":"nil","external_name":"regex","restriction":"String | ::Nil"},{"name":"regex_err_msg","default_value":"nil","external_name":"regex_err_msg","restriction":"String | ::Nil"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"unique","default_value":"false","external_name":"unique","restriction":"Bool"},{"name":"textarea","default_value":"false","external_name":"textarea","restriction":"Bool"},{"name":"use_editor","default_value":"false","external_name":"use_editor","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(label, default, placeholder, maxlength, minlength, regex, regex_err_msg, hide, unique, textarea, use_editor, required, disabled, readonly, ignored, hint)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"default:String|Nil-instance-method","name":"default","doc":"Value by default.","summary":"<p>Value by default.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/text.cr","line_number":17,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/text.cr#L17"},"def":{"name":"default","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @default).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::TextField#default cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"default?:String|Nil|Nil-instance-method","name":"default?","doc":"Value by default.","summary":"<p>Value by default.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/text.cr","line_number":17,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/text.cr#L17"},"def":{"name":"default?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@default"}},{"html_id":"field_type:String-instance-method","name":"field_type","doc":"Field type - Structure Name.","summary":"<p>Field type - Structure Name.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/text.cr","line_number":7,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/text.cr#L7"},"def":{"name":"field_type","return_type":"String","visibility":"Public","body":"@field_type"}},{"html_id":"group:UInt8-instance-method","name":"group","doc":"To optimize field traversal in the `paladins/check()` method.\nWARNING: It is recommended not to change.","summary":"<p>To optimize field traversal in the <code>paladins/check()</code> method.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/text.cr","line_number":32,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/text.cr#L32"},"def":{"name":"group","return_type":"UInt8","visibility":"Public","body":"@group"}},{"html_id":"input_type:String|Nil-instance-method","name":"input_type","doc":"Html tag: input type=\"text\".","summary":"<p>Html tag: input type=&quot;text&quot;.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/text.cr","line_number":9,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/text.cr#L9"},"def":{"name":"input_type","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @input_type).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::TextField#input_type cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"input_type?:String|Nil|Nil-instance-method","name":"input_type?","doc":"Html tag: input type=\"text\".","summary":"<p>Html tag: input type=&quot;text&quot;.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/text.cr","line_number":9,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/text.cr#L9"},"def":{"name":"input_type?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@input_type"}},{"html_id":"maxlength:UInt32|Nil-instance-method","name":"maxlength","doc":"The maximum number of characters allowed in the text.","summary":"<p>The maximum number of characters allowed in the text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/text.cr","line_number":21,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/text.cr#L21"},"def":{"name":"maxlength","return_type":"UInt32 | ::Nil","visibility":"Public","body":"if (value = @maxlength).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::TextField#maxlength cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"maxlength?:UInt32|Nil|Nil-instance-method","name":"maxlength?","doc":"The maximum number of characters allowed in the text.","summary":"<p>The maximum number of characters allowed in the text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/text.cr","line_number":21,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/text.cr#L21"},"def":{"name":"maxlength?","return_type":"UInt32 | ::Nil | ::Nil","visibility":"Public","body":"@maxlength"}},{"html_id":"minlength:UInt32|Nil-instance-method","name":"minlength","doc":"The minimum number of characters allowed in the text.","summary":"<p>The minimum number of characters allowed in the text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/text.cr","line_number":23,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/text.cr#L23"},"def":{"name":"minlength","return_type":"UInt32 | ::Nil","visibility":"Public","body":"if (value = @minlength).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::TextField#minlength cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"minlength?:UInt32|Nil|Nil-instance-method","name":"minlength?","doc":"The minimum number of characters allowed in the text.","summary":"<p>The minimum number of characters allowed in the text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/text.cr","line_number":23,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/text.cr#L23"},"def":{"name":"minlength?","return_type":"UInt32 | ::Nil | ::Nil","visibility":"Public","body":"@minlength"}},{"html_id":"placeholder:String-instance-method","name":"placeholder","doc":"Displays prompt text.","summary":"<p>Displays prompt text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/text.cr","line_number":19,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/text.cr#L19"},"def":{"name":"placeholder","return_type":"String","visibility":"Public","body":"@placeholder"}},{"html_id":"refrash_val_str(val:String):Nil-instance-method","name":"refrash_val_str","doc":"For the `DynFork::QPaladins::Tools#refrash_fields` method.","summary":"<p>For the <code><a href=\"../../DynFork/QPaladins/Tools.html#refrash_fields%28doc_ptr%3APointer%28BSON%7CNil%29%29%3ANil-instance-method\">DynFork::QPaladins::Tools#refrash_fields</a></code> method.</p>","abstract":false,"args":[{"name":"val","external_name":"val","restriction":"String"}],"args_string":"(val : String) : Nil","args_html":"(val : String) : Nil","location":{"filename":"src/dynfork/fields/text.cr","line_number":151,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/text.cr#L151"},"def":{"name":"refrash_val_str","args":[{"name":"val","external_name":"val","restriction":"String"}],"return_type":"Nil","visibility":"Public","body":"@value = val"}},{"html_id":"regex:String|Nil-instance-method","name":"regex","doc":"Regular expression to validate the `value`.","summary":"<p>Regular expression to validate the <code><a href=\"../../DynFork/Fields/TextField.html#value%3AString%7CNil-instance-method\">#value</a></code>.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/text.cr","line_number":25,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/text.cr#L25"},"def":{"name":"regex","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @regex).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::TextField#regex cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"regex?:String|Nil|Nil-instance-method","name":"regex?","doc":"Regular expression to validate the `value`.","summary":"<p>Regular expression to validate the <code><a href=\"../../DynFork/Fields/TextField.html#value%3AString%7CNil-instance-method\">#value</a></code>.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/text.cr","line_number":25,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/text.cr#L25"},"def":{"name":"regex?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@regex"}},{"html_id":"regex_err_msg:String|Nil-instance-method","name":"regex_err_msg","doc":"Error message.","summary":"<p>Error message.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/text.cr","line_number":27,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/text.cr#L27"},"def":{"name":"regex_err_msg","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @regex_err_msg).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::TextField#regex_err_msg cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"regex_err_msg?:String|Nil|Nil-instance-method","name":"regex_err_msg?","doc":"Error message.","summary":"<p>Error message.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/text.cr","line_number":27,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/text.cr#L27"},"def":{"name":"regex_err_msg?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@regex_err_msg"}},{"html_id":"textarea?:Bool-instance-method","name":"textarea?","doc":"For Html textarea.","summary":"<p>For Html textarea.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/text.cr","line_number":11,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/text.cr#L11"},"def":{"name":"textarea?","return_type":"Bool","visibility":"Public","body":"@textarea"}},{"html_id":"unique?:Bool-instance-method","name":"unique?","doc":"The unique value of a field in a collection.","summary":"<p>The unique value of a field in a collection.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/text.cr","line_number":29,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/text.cr#L29"},"def":{"name":"unique?","return_type":"Bool","visibility":"Public","body":"@unique"}},{"html_id":"use_editor?:Bool-instance-method","name":"use_editor?","doc":"Whether or not to use your preferred text editor - CKEditor, TinyMCE, etc.","summary":"<p>Whether or not to use your preferred text editor - CKEditor, TinyMCE, etc.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/text.cr","line_number":13,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/text.cr#L13"},"def":{"name":"use_editor?","return_type":"Bool","visibility":"Public","body":"@use_editor"}},{"html_id":"value:String|Nil-instance-method","name":"value","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @value).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::TextField#value cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"value=(value:String|Nil)-instance-method","name":"value=","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String | ::Nil"}],"args_string":"(value : String | Nil)","args_html":"(value : String | Nil)","location":{"filename":"src/dynfork/fields/text.cr","line_number":15,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/text.cr#L15"},"def":{"name":"value=","args":[{"name":"value","external_name":"value","restriction":"String | ::Nil"}],"visibility":"Public","body":"@value = value"}},{"html_id":"value?:String|Nil|Nil-instance-method","name":"value?","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@value"}}]},{"html_id":"dynfork/DynFork/Fields/URLField","path":"DynFork/Fields/URLField.html","kind":"struct","full_name":"DynFork::Fields::URLField","name":"URLField","abstract":false,"superclass":{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},"ancestors":[{"html_id":"dynfork/DynFork/Fields/Field","kind":"struct","full_name":"DynFork::Fields::Field","name":"Field"},{"html_id":"dynfork/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dynfork/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/fields/url.cr","line_number":5,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/url.cr#L5"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Fields","kind":"module","full_name":"DynFork::Fields","name":"Fields"},"doc":"Field for entering URL addresses.","summary":"<p>Field for entering URL addresses.</p>","constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"Field for entering URL addresses.","summary":"<p>Field for entering URL addresses.</p>","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/dynfork/fields/url.cr","line_number":5,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/url.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}},{"html_id":"new(label:String=\"\",default:String|Nil=nil,placeholder:String=\"\",maxlength:UInt32|Nil=2048,hide:Bool=false,unique:Bool=false,required:Bool=false,disabled:Bool=false,readonly:Bool=false,ignored:Bool=false,hint:String=\"\",warning:String=\"\")-class-method","name":"new","abstract":false,"args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"default","default_value":"nil","external_name":"default","restriction":"String | ::Nil"},{"name":"placeholder","default_value":"\"\"","external_name":"placeholder","restriction":"String"},{"name":"maxlength","default_value":"2048","external_name":"maxlength","restriction":"UInt32 | ::Nil"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"unique","default_value":"false","external_name":"unique","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"},{"name":"warning","default_value":"\"\"","external_name":"warning","restriction":"String"}],"args_string":"(label : String = \"\", default : String | Nil = nil, placeholder : String = \"\", maxlength : UInt32 | Nil = 2048, hide : Bool = false, unique : Bool = false, required : Bool = false, disabled : Bool = false, readonly : Bool = false, ignored : Bool = false, hint : String = \"\", warning : String = \"\")","args_html":"(label : String = <span class=\"s\">&quot;&quot;</span>, default : String | Nil = <span class=\"n\">nil</span>, placeholder : String = <span class=\"s\">&quot;&quot;</span>, maxlength : UInt32 | Nil = <span class=\"n\">2048</span>, hide : Bool = <span class=\"n\">false</span>, unique : Bool = <span class=\"n\">false</span>, required : Bool = <span class=\"n\">false</span>, disabled : Bool = <span class=\"n\">false</span>, readonly : Bool = <span class=\"n\">false</span>, ignored : Bool = <span class=\"n\">false</span>, hint : String = <span class=\"s\">&quot;&quot;</span>, warning : String = <span class=\"s\">&quot;&quot;</span>)","location":{"filename":"src/dynfork/fields/url.cr","line_number":127,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/url.cr#L127"},"def":{"name":"new","args":[{"name":"label","default_value":"\"\"","external_name":"label","restriction":"String"},{"name":"default","default_value":"nil","external_name":"default","restriction":"String | ::Nil"},{"name":"placeholder","default_value":"\"\"","external_name":"placeholder","restriction":"String"},{"name":"maxlength","default_value":"2048","external_name":"maxlength","restriction":"UInt32 | ::Nil"},{"name":"hide","default_value":"false","external_name":"hide","restriction":"Bool"},{"name":"unique","default_value":"false","external_name":"unique","restriction":"Bool"},{"name":"required","default_value":"false","external_name":"required","restriction":"Bool"},{"name":"disabled","default_value":"false","external_name":"disabled","restriction":"Bool"},{"name":"readonly","default_value":"false","external_name":"readonly","restriction":"Bool"},{"name":"ignored","default_value":"false","external_name":"ignored","restriction":"Bool"},{"name":"hint","default_value":"\"\"","external_name":"hint","restriction":"String"},{"name":"warning","default_value":"\"\"","external_name":"warning","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(label, default, placeholder, maxlength, hide, unique, required, disabled, readonly, ignored, hint, warning)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"default:String|Nil-instance-method","name":"default","doc":"Value by default.","summary":"<p>Value by default.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/url.cr","line_number":13,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/url.cr#L13"},"def":{"name":"default","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @default).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::URLField#default cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"default?:String|Nil|Nil-instance-method","name":"default?","doc":"Value by default.","summary":"<p>Value by default.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/url.cr","line_number":13,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/url.cr#L13"},"def":{"name":"default?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@default"}},{"html_id":"field_type:String-instance-method","name":"field_type","doc":"Field type - Structure Name.","summary":"<p>Field type - Structure Name.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/url.cr","line_number":7,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/url.cr#L7"},"def":{"name":"field_type","return_type":"String","visibility":"Public","body":"@field_type"}},{"html_id":"group:UInt8-instance-method","name":"group","doc":"To optimize field traversal in the `paladins/check()` method.\nWARNING: It is recommended not to change.","summary":"<p>To optimize field traversal in the <code>paladins/check()</code> method.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/url.cr","line_number":24,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/url.cr#L24"},"def":{"name":"group","return_type":"UInt8","visibility":"Public","body":"@group"}},{"html_id":"input_type:String|Nil-instance-method","name":"input_type","doc":"Html tag: input type=\"url\".","summary":"<p>Html tag: input type=&quot;url&quot;.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/url.cr","line_number":9,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/url.cr#L9"},"def":{"name":"input_type","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @input_type).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::URLField#input_type cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"input_type?:String|Nil|Nil-instance-method","name":"input_type?","doc":"Html tag: input type=\"url\".","summary":"<p>Html tag: input type=&quot;url&quot;.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/url.cr","line_number":9,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/url.cr#L9"},"def":{"name":"input_type?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@input_type"}},{"html_id":"maxlength:UInt32|Nil-instance-method","name":"maxlength","doc":"The maximum number of characters allowed in the text.","summary":"<p>The maximum number of characters allowed in the text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/url.cr","line_number":17,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/url.cr#L17"},"def":{"name":"maxlength","return_type":"UInt32 | ::Nil","visibility":"Public","body":"if (value = @maxlength).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::URLField#maxlength cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"maxlength?:UInt32|Nil|Nil-instance-method","name":"maxlength?","doc":"The maximum number of characters allowed in the text.","summary":"<p>The maximum number of characters allowed in the text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/url.cr","line_number":17,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/url.cr#L17"},"def":{"name":"maxlength?","return_type":"UInt32 | ::Nil | ::Nil","visibility":"Public","body":"@maxlength"}},{"html_id":"minlength:UInt32|Nil-instance-method","name":"minlength","doc":"The minimum number of characters allowed in the text.","summary":"<p>The minimum number of characters allowed in the text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/url.cr","line_number":19,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/url.cr#L19"},"def":{"name":"minlength","return_type":"UInt32 | ::Nil","visibility":"Public","body":"if (value = @minlength).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::URLField#minlength cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"minlength?:UInt32|Nil|Nil-instance-method","name":"minlength?","doc":"The minimum number of characters allowed in the text.","summary":"<p>The minimum number of characters allowed in the text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/url.cr","line_number":19,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/url.cr#L19"},"def":{"name":"minlength?","return_type":"UInt32 | ::Nil | ::Nil","visibility":"Public","body":"@minlength"}},{"html_id":"placeholder:String-instance-method","name":"placeholder","doc":"Displays prompt text.","summary":"<p>Displays prompt text.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/url.cr","line_number":15,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/url.cr#L15"},"def":{"name":"placeholder","return_type":"String","visibility":"Public","body":"@placeholder"}},{"html_id":"refrash_val_str(val:String):Nil-instance-method","name":"refrash_val_str","doc":"For the `DynFork::QPaladins::Tools#refrash_fields` method.","summary":"<p>For the <code><a href=\"../../DynFork/QPaladins/Tools.html#refrash_fields%28doc_ptr%3APointer%28BSON%7CNil%29%29%3ANil-instance-method\">DynFork::QPaladins::Tools#refrash_fields</a></code> method.</p>","abstract":false,"args":[{"name":"val","external_name":"val","restriction":"String"}],"args_string":"(val : String) : Nil","args_html":"(val : String) : Nil","location":{"filename":"src/dynfork/fields/url.cr","line_number":146,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/url.cr#L146"},"def":{"name":"refrash_val_str","args":[{"name":"val","external_name":"val","restriction":"String"}],"return_type":"Nil","visibility":"Public","body":"@value = val"}},{"html_id":"unique?:Bool-instance-method","name":"unique?","doc":"The unique value of a field in a collection.","summary":"<p>The unique value of a field in a collection.</p>","abstract":false,"location":{"filename":"src/dynfork/fields/url.cr","line_number":21,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/url.cr#L21"},"def":{"name":"unique?","return_type":"Bool","visibility":"Public","body":"@unique"}},{"html_id":"value:String|Nil-instance-method","name":"value","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @value).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Fields::URLField#value cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"value=(value:String|Nil)-instance-method","name":"value=","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String | ::Nil"}],"args_string":"(value : String | Nil)","args_html":"(value : String | Nil)","location":{"filename":"src/dynfork/fields/url.cr","line_number":11,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/fields/url.cr#L11"},"def":{"name":"value=","args":[{"name":"value","external_name":"value","restriction":"String | ::Nil"}],"visibility":"Public","body":"@value = value"}},{"html_id":"value?:String|Nil|Nil-instance-method","name":"value?","doc":"Sets the value of an element.","summary":"<p>Sets the value of an element.</p>","abstract":false,"def":{"name":"value?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@value"}}]}]},{"html_id":"dynfork/DynFork/Globals","path":"DynFork/Globals.html","kind":"module","full_name":"DynFork::Globals","name":"Globals","abstract":false,"ancestors":[{"html_id":"dynfork/DynFork/Globals/Date","kind":"module","full_name":"DynFork::Globals::Date","name":"Date"},{"html_id":"dynfork/DynFork/Globals/Types","kind":"module","full_name":"DynFork::Globals::Types","name":"Types"},{"html_id":"dynfork/DynFork/Globals/Aliases","kind":"module","full_name":"DynFork::Globals::Aliases","name":"Aliases"}],"locations":[{"filename":"src/dynfork/globals/aliases.cr","line_number":2,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/aliases.cr#L2"},{"filename":"src/dynfork/globals/store.cr","line_number":6,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/store.cr#L6"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"dynfork/DynFork/Globals/Aliases","kind":"module","full_name":"DynFork::Globals::Aliases","name":"Aliases"},{"html_id":"dynfork/DynFork/Globals/Date","kind":"module","full_name":"DynFork::Globals::Date","name":"Date"},{"html_id":"dynfork/DynFork/Globals/Types","kind":"module","full_name":"DynFork::Globals::Types","name":"Types"}],"namespace":{"html_id":"dynfork/DynFork","kind":"module","full_name":"DynFork","name":"DynFork"},"doc":"Global storage for data cache.","summary":"<p>Global storage for data cache.</p>","class_methods":[{"html_id":"app_name:String-class-method","name":"app_name","doc":"Global DynFork settings.","summary":"<p>Global DynFork settings.</p>","abstract":false,"location":{"filename":"src/dynfork/globals/store.cr","line_number":23,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/store.cr#L23"},"def":{"name":"app_name","return_type":"String","visibility":"Public","body":"@@app_name"}},{"html_id":"app_name=(app_name:String)-class-method","name":"app_name=","doc":"Global DynFork settings.","summary":"<p>Global DynFork settings.</p>","abstract":false,"args":[{"name":"app_name","external_name":"app_name","restriction":"String"}],"args_string":"(app_name : String)","args_html":"(app_name : String)","location":{"filename":"src/dynfork/globals/store.cr","line_number":23,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/store.cr#L23"},"def":{"name":"app_name=","args":[{"name":"app_name","external_name":"app_name","restriction":"String"}],"visibility":"Public","body":"@@app_name = app_name"}},{"html_id":"database_name:String-class-method","name":"database_name","abstract":false,"location":{"filename":"src/dynfork/globals/store.cr","line_number":25,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/store.cr#L25"},"def":{"name":"database_name","return_type":"String","visibility":"Public","body":"@@database_name"}},{"html_id":"database_name=(database_name:String)-class-method","name":"database_name=","abstract":false,"args":[{"name":"database_name","external_name":"database_name","restriction":"String"}],"args_string":"(database_name : String)","args_html":"(database_name : String)","location":{"filename":"src/dynfork/globals/store.cr","line_number":25,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/store.cr#L25"},"def":{"name":"database_name=","args":[{"name":"database_name","external_name":"database_name","restriction":"String"}],"visibility":"Public","body":"@@database_name = database_name"}},{"html_id":"mongo_client:Mongo::Client-class-method","name":"mongo_client","doc":"Mongo client caching.","summary":"<p>Mongo client caching.</p>","abstract":false,"def":{"name":"mongo_client","return_type":"Mongo::Client","visibility":"Public","body":"if (value = @@mongo_client).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Globals.mongo_client cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"mongo_client=(mongo_client:Mongo::Client)-class-method","name":"mongo_client=","doc":"Mongo client caching.","summary":"<p>Mongo client caching.</p>","abstract":false,"args":[{"name":"mongo_client","external_name":"mongo_client","restriction":"Mongo::Client"}],"args_string":"(mongo_client : Mongo::Client)","args_html":"(mongo_client : Mongo::Client)","location":{"filename":"src/dynfork/globals/store.cr","line_number":12,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/store.cr#L12"},"def":{"name":"mongo_client=","args":[{"name":"mongo_client","external_name":"mongo_client","restriction":"Mongo::Client"}],"visibility":"Public","body":"@@mongo_client = mongo_client"}},{"html_id":"mongo_client?:Mongo::Client|Nil-class-method","name":"mongo_client?","doc":"Mongo client caching.","summary":"<p>Mongo client caching.</p>","abstract":false,"def":{"name":"mongo_client?","return_type":"Mongo::Client | ::Nil","visibility":"Public","body":"@@mongo_client"}},{"html_id":"mongo_database:Mongo::Database-class-method","name":"mongo_database","doc":"Mongo database caching.","summary":"<p>Mongo database caching.</p>","abstract":false,"def":{"name":"mongo_database","return_type":"Mongo::Database","visibility":"Public","body":"if (value = @@mongo_database).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Globals.mongo_database cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"mongo_database=(mongo_database:Mongo::Database)-class-method","name":"mongo_database=","doc":"Mongo database caching.","summary":"<p>Mongo database caching.</p>","abstract":false,"args":[{"name":"mongo_database","external_name":"mongo_database","restriction":"Mongo::Database"}],"args_string":"(mongo_database : Mongo::Database)","args_html":"(mongo_database : Mongo::Database)","location":{"filename":"src/dynfork/globals/store.cr","line_number":14,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/store.cr#L14"},"def":{"name":"mongo_database=","args":[{"name":"mongo_database","external_name":"mongo_database","restriction":"Mongo::Database"}],"visibility":"Public","body":"@@mongo_database = mongo_database"}},{"html_id":"mongo_database?:Mongo::Database|Nil-class-method","name":"mongo_database?","doc":"Mongo database caching.","summary":"<p>Mongo database caching.</p>","abstract":false,"def":{"name":"mongo_database?","return_type":"Mongo::Database | ::Nil","visibility":"Public","body":"@@mongo_database"}},{"html_id":"regex:CacheRegexType-class-method","name":"regex","doc":"Regex caching.","summary":"<p>Regex caching.</p>","abstract":false,"location":{"filename":"src/dynfork/globals/store.cr","line_number":27,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/store.cr#L27"},"def":{"name":"regex","return_type":"CacheRegexType","visibility":"Public","body":"@@regex"}},{"html_id":"super_collection_name-class-method","name":"super_collection_name","doc":"Super collection name caching.\n<br>\n<br>\nSuper collection is used for:\n- _Store technical data for Models migration into a database._\n- _Store dynamic field data for simulate relationship Many-to-One and Many-to-Manyю._","summary":"<p>Super collection name caching.</p>","abstract":false,"location":{"filename":"src/dynfork/globals/store.cr","line_number":21,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/store.cr#L21"},"def":{"name":"super_collection_name","visibility":"Public","body":"@@super_collection_name"}},{"html_id":"unique_app_key:String-class-method","name":"unique_app_key","abstract":false,"location":{"filename":"src/dynfork/globals/store.cr","line_number":24,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/store.cr#L24"},"def":{"name":"unique_app_key","return_type":"String","visibility":"Public","body":"@@unique_app_key"}},{"html_id":"unique_app_key=(unique_app_key:String)-class-method","name":"unique_app_key=","abstract":false,"args":[{"name":"unique_app_key","external_name":"unique_app_key","restriction":"String"}],"args_string":"(unique_app_key : String)","args_html":"(unique_app_key : String)","location":{"filename":"src/dynfork/globals/store.cr","line_number":24,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/store.cr#L24"},"def":{"name":"unique_app_key=","args":[{"name":"unique_app_key","external_name":"unique_app_key","restriction":"String"}],"visibility":"Public","body":"@@unique_app_key = unique_app_key"}}],"types":[{"html_id":"dynfork/DynFork/Globals/Aliases","path":"DynFork/Globals/Aliases.html","kind":"module","full_name":"DynFork::Globals::Aliases","name":"Aliases","abstract":false,"locations":[{"filename":"src/dynfork/globals/aliases.cr","line_number":2,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/aliases.cr#L2"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"dynfork/DynFork/Globals","kind":"module","full_name":"DynFork::Globals","name":"Globals"}],"namespace":{"html_id":"dynfork/DynFork/Globals","kind":"module","full_name":"DynFork::Globals","name":"Globals"},"doc":"Global data types.","summary":"<p>Global data types.</p>","types":[{"html_id":"dynfork/DynFork/Globals/Aliases/CacheMetaDataType","path":"DynFork/Globals/Aliases/CacheMetaDataType.html","kind":"alias","full_name":"DynFork::Globals::Aliases::CacheMetaDataType","name":"CacheMetaDataType","abstract":false,"locations":[{"filename":"src/dynfork/globals/aliases.cr","line_number":30,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/aliases.cr#L30"}],"repository_name":"dynfork","program":false,"enum":false,"alias":true,"aliased":"NamedTuple(model_name: String, service_name: String, collection_name: String, db_query_docs_limit: Int32, field_count: Int32, field_name_and_type_list: Hash(String, String), field_name_params_list: Hash(String, NamedTuple(type: String, group: UInt8)), \"migrat_model?\": Bool, \"create_doc?\": Bool, \"update_doc?\": Bool, \"delete_doc?\": Bool, field_attrs: Hash(String, NamedTuple(id: String, name: String)), data_dynamic_fields: Hash(String, String), time_object_list: Hash(String, NamedTuple(default: Time | Nil, max: Time | Nil, min: Time | Nil)), fixture_name: String | Nil)","aliased_html":"{model_name: String, service_name: String, collection_name: String, db_query_docs_limit: Int32, field_count: Int32, field_name_and_type_list: Hash(String, String), field_name_params_list: Hash(String, {type: String, group: UInt8}), \"migrat_model?\": Bool, \"create_doc?\": Bool, \"update_doc?\": Bool, \"delete_doc?\": Bool, field_attrs: Hash(String, {id: String, name: String}), data_dynamic_fields: Hash(String, String), time_object_list: Hash(String, {default: Time?, max: Time?, min: Time?}), fixture_name: String?}","const":false,"namespace":{"html_id":"dynfork/DynFork/Globals/Aliases","kind":"module","full_name":"DynFork::Globals::Aliases","name":"Aliases"},"doc":"A type for caching Metadata of Model.","summary":"<p>A type for caching Metadata of Model.</p>"},{"html_id":"dynfork/DynFork/Globals/Aliases/CacheRegexType","path":"DynFork/Globals/Aliases/CacheRegexType.html","kind":"alias","full_name":"DynFork::Globals::Aliases::CacheRegexType","name":"CacheRegexType","abstract":false,"locations":[{"filename":"src/dynfork/globals/aliases.cr","line_number":49,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/aliases.cr#L49"}],"repository_name":"dynfork","program":false,"enum":false,"alias":true,"aliased":"NamedTuple(model_name: Regex, app_name: Regex, unique_app_key: Regex, service_name: Regex, get_type_marker: Regex, date_parse: Regex, date_parse_reverse: Regex, datetime_parse: Regex, datetime_parse_reverse: Regex, color_code: Regex, password: Regex)","aliased_html":"{model_name: Regex, app_name: Regex, unique_app_key: Regex, service_name: Regex, get_type_marker: Regex, date_parse: Regex, date_parse_reverse: Regex, datetime_parse: Regex, datetime_parse_reverse: Regex, color_code: Regex, password: Regex}","const":false,"namespace":{"html_id":"dynfork/DynFork/Globals/Aliases","kind":"module","full_name":"DynFork::Globals::Aliases","name":"Aliases"},"doc":"A type for caching regular expressions.","summary":"<p>A type for caching regular expressions.</p>"},{"html_id":"dynfork/DynFork/Globals/Aliases/FieldTypes","path":"DynFork/Globals/Aliases/FieldTypes.html","kind":"alias","full_name":"DynFork::Globals::Aliases::FieldTypes","name":"FieldTypes","abstract":false,"locations":[{"filename":"src/dynfork/globals/aliases.cr","line_number":4,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/aliases.cr#L4"}],"repository_name":"dynfork","program":false,"enum":false,"alias":true,"aliased":"DynFork::Fields::Field+","aliased_html":"<a href=\"../../../DynFork/Fields/Field.html\">DynFork::Fields::Field</a>","const":false,"namespace":{"html_id":"dynfork/DynFork/Globals/Aliases","kind":"module","full_name":"DynFork::Globals::Aliases","name":"Aliases"},"doc":"All field types.","summary":"<p>All field types.</p>"},{"html_id":"dynfork/DynFork/Globals/Aliases/FieldValueTypes","path":"DynFork/Globals/Aliases/FieldValueTypes.html","kind":"alias","full_name":"DynFork::Globals::Aliases::FieldValueTypes","name":"FieldValueTypes","abstract":false,"locations":[{"filename":"src/dynfork/globals/aliases.cr","line_number":20,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/aliases.cr#L20"}],"repository_name":"dynfork","program":false,"enum":false,"alias":true,"aliased":"(Array(Float64) | Array(Int64) | Array(String) | Bool | DynFork::Globals::Types::FileData | DynFork::Globals::Types::ImageData | Float64 | Int64 | String | Nil)","aliased_html":"Array(Float64) | Array(Int64) | Array(String) | Bool | <a href=\"../../../DynFork/Globals/Types/FileData.html\">DynFork::Globals::Types::FileData</a> | <a href=\"../../../DynFork/Globals/Types/ImageData.html\">DynFork::Globals::Types::ImageData</a> | Float64 | Int64 | String | Nil","const":false,"namespace":{"html_id":"dynfork/DynFork/Globals/Aliases","kind":"module","full_name":"DynFork::Globals::Aliases","name":"Aliases"},"doc":"Field value types.","summary":"<p>Field value types.</p>"},{"html_id":"dynfork/DynFork/Globals/Aliases/ResultMapType","path":"DynFork/Globals/Aliases/ResultMapType.html","kind":"alias","full_name":"DynFork::Globals::Aliases::ResultMapType","name":"ResultMapType","abstract":false,"locations":[{"filename":"src/dynfork/globals/aliases.cr","line_number":25,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/aliases.cr#L25"}],"repository_name":"dynfork","program":false,"enum":false,"alias":true,"aliased":"(Array(Float64) | Array(Int64) | Array(String) | BSON::ObjectId | Bool | DynFork::Globals::Types::FileData | DynFork::Globals::Types::ImageData | Float64 | Int64 | String | Time | Nil)","aliased_html":"Array(Float64) | Array(Int64) | Array(String) | BSON::ObjectId | Bool | <a href=\"../../../DynFork/Globals/Types/FileData.html\">DynFork::Globals::Types::FileData</a> | <a href=\"../../../DynFork/Globals/Types/ImageData.html\">DynFork::Globals::Types::ImageData</a> | Float64 | Int64 | String | Time | Nil","const":false,"namespace":{"html_id":"dynfork/DynFork/Globals/Aliases","kind":"module","full_name":"DynFork::Globals::Aliases","name":"Aliases"},"doc":"For struct DynFork::Globals::OutputData.","summary":"<p>For struct DynFork::Globals::OutputData.</p>"}]},{"html_id":"dynfork/DynFork/Globals/Date","path":"DynFork/Globals/Date.html","kind":"module","full_name":"DynFork::Globals::Date","name":"Date","abstract":false,"locations":[{"filename":"src/dynfork/globals/date.cr","line_number":2,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/date.cr#L2"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"extended_modules":[{"html_id":"dynfork/DynFork/Globals/Date","kind":"module","full_name":"DynFork::Globals::Date","name":"Date"}],"including_types":[{"html_id":"dynfork/DynFork/Fields/DateField","kind":"struct","full_name":"DynFork::Fields::DateField","name":"DateField"},{"html_id":"dynfork/DynFork/Fields/DateTimeField","kind":"struct","full_name":"DynFork::Fields::DateTimeField","name":"DateTimeField"},{"html_id":"dynfork/DynFork/Globals","kind":"module","full_name":"DynFork::Globals","name":"Globals"},{"html_id":"dynfork/DynFork/Model","kind":"struct","full_name":"DynFork::Model","name":"Model"}],"namespace":{"html_id":"dynfork/DynFork/Globals","kind":"module","full_name":"DynFork::Globals","name":"Globals"},"doc":"Converting string Date and DateTime to object Time.","summary":"<p>Converting string Date and DateTime to object Time.</p>","instance_methods":[{"html_id":"date_parse(date:String):Time-instance-method","name":"date_parse","doc":"Converting string Date to object Time.\n<br>\n_**Formats:** dd-mm-yyyy | dd/mm/yyyy | dd.mm.yyyy |\nyyyy-mm-dd | yyyy/mm/dd | yyyy.mm.dd_\n<br>\nWARNING: Unsupported formats:\n<br>USA - M/D/YYYY\n<br>Kazakhstan, Latvia - YYYY.DD.MM\n<br>PRC - YYYY-M-D\n<br>Hong Kong, Taiwan - YYYY/M/D\n<br>Finland, Czech Republic - D.M.YYYY\n<br>Netherlands - D-M-YYYY\n<br>Brazil, Greece, Thailand - D/M/YYYY","summary":"<p>Converting string Date to object Time.</p>","abstract":false,"args":[{"name":"date","external_name":"date","restriction":"String"}],"args_string":"(date : String) : Time","args_html":"(date : String) : Time","location":{"filename":"src/dynfork/globals/date.cr","line_number":18,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/date.cr#L18"},"def":{"name":"date_parse","args":[{"name":"date","external_name":"date","restriction":"String"}],"return_type":"Time","visibility":"Public","body":"md = (DynFork::Globals.regex[:date_parse].match(date)) || (DynFork::Globals.regex[:date_parse_reverse].match(date))\nif md.nil?\n  raise(DynFork::Errors::Date::InvalidDate.new)\nend\nTime.parse_utc(\"#{md[\"y\"]}-#{md[\"m\"]}-#{md[\"d\"]}\", \"%F\")\n"}},{"html_id":"datetime_parse(datetime:String):Time-instance-method","name":"datetime_parse","doc":"Converting string DateTime to object Time.\n<br>\n_**Formats:** dd-mm-yyyy hh:mm:ss | dd/mm/yyyy hh:mm:ss | dd.mm.yyyy hh:mm:ss |\ndd-mm-yyyyThh:mm:ss | dd/mm/yyyyThh:mm:ss | dd.mm.yyyyThh:mm:ss |\nyyyy-mm-dd hh:mm:ss | yyyy/mm/dd hh:mm:ss | yyyy.mm.dd hh:mm:ss |\nyyyy-mm-ddThh:mm:ss | yyyy/mm/ddThh:mm:ss | yyyy.mm.ddThh:mm:ss_\n<br>\nWARNING: Unsupported date formats:\n<br>USA - M/D/YYYY\n<br>Kazakhstan, Latvia - YYYY.DD.MM\n<br>PRC - YYYY-M-D\n<br>Hong Kong, Taiwan - YYYY/M/D\n<br>Finland, Czech Republic - D.M.YYYY\n<br>Netherlands - D-M-YYYY\n<br>Brazil, Greece, Thailand - D/M/YYYY","summary":"<p>Converting string DateTime to object Time.</p>","abstract":false,"args":[{"name":"datetime","external_name":"datetime","restriction":"String"}],"args_string":"(datetime : String) : Time","args_html":"(datetime : String) : Time","location":{"filename":"src/dynfork/globals/date.cr","line_number":40,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/date.cr#L40"},"def":{"name":"datetime_parse","args":[{"name":"datetime","external_name":"datetime","restriction":"String"}],"return_type":"Time","visibility":"Public","body":"md = (DynFork::Globals.regex[:datetime_parse].match(datetime)) || (DynFork::Globals.regex[:datetime_parse_reverse].match(datetime))\nif md.nil?\n  raise(DynFork::Errors::Date::InvalidDateTime.new)\nend\nTime.parse_utc(\"#{md[\"y\"]}-#{md[\"m\"]}-#{md[\"d\"]}T#{md[\"t\"]}\", \"%FT%H:%M:%S\")\n"}}]},{"html_id":"dynfork/DynFork/Globals/Types","path":"DynFork/Globals/Types.html","kind":"module","full_name":"DynFork::Globals::Types","name":"Types","abstract":false,"locations":[{"filename":"src/dynfork/globals/types.cr","line_number":2,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L2"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"dynfork/DynFork/Globals","kind":"module","full_name":"DynFork::Globals","name":"Globals"}],"namespace":{"html_id":"dynfork/DynFork/Globals","kind":"module","full_name":"DynFork::Globals","name":"Globals"},"doc":"Global data types.","summary":"<p>Global data types.</p>","types":[{"html_id":"dynfork/DynFork/Globals/Types/FileData","path":"DynFork/Globals/Types/FileData.html","kind":"struct","full_name":"DynFork::Globals::Types::FileData","name":"FileData","abstract":false,"superclass":{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"dynfork/BSON/Serializable","kind":"module","full_name":"BSON::Serializable","name":"Serializable"},{"html_id":"dynfork/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dynfork/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/globals/types.cr","line_number":38,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L38"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"dynfork/BSON/Serializable","kind":"module","full_name":"BSON::Serializable","name":"Serializable"},{"html_id":"dynfork/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"}],"namespace":{"html_id":"dynfork/DynFork/Globals/Types","kind":"module","full_name":"DynFork::Globals::Types","name":"Types"},"doc":"Data type for FileField.","summary":"<p>Data type for FileField.</p>","class_methods":[{"html_id":"from_bson(bson:BSON)-class-method","name":"from_bson","doc":"NOTE: See `self.new`.","summary":"<p><span class=\"flag purple\">NOTE</span>  See <code>self<a href=\"../../../DynFork/Globals/Types/FileData.html#new-class-method\">.new</a></code>.</p>","abstract":false,"args":[{"name":"bson","external_name":"bson","restriction":"BSON"}],"args_string":"(bson : BSON)","args_html":"(bson : BSON)","location":{"filename":"src/dynfork/globals/types.cr","line_number":40,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L40"},"def":{"name":"from_bson","args":[{"name":"bson","external_name":"bson","restriction":"BSON"}],"visibility":"Public","body":"self.new(bson)"}}],"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/dynfork/globals/types.cr","line_number":39,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L39"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}},{"html_id":"new(bson:BSON)-class-method","name":"new","doc":"Allocate an instance and copies data from a BSON struct.\n\n```\nclass User\n  include BSON::Serializable\n  property name : String\nend\n\ndata = BSON.new\ndata[\"name\"] = \"John\"\nUser.new(data)\n```","summary":"<p>Allocate an instance and copies data from a BSON struct.</p>","abstract":false,"args":[{"name":"bson","external_name":"bson","restriction":"BSON"}],"args_string":"(bson : BSON)","args_html":"(bson : BSON)","location":{"filename":"src/dynfork/globals/types.cr","line_number":40,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L40"},"def":{"name":"new","args":[{"name":"bson","external_name":"bson","restriction":"BSON"}],"visibility":"Public","body":"_ = allocate\n_.initialize(bson)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/dynfork/globals/types.cr","line_number":55,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L55"},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"delete=(delete:Bool)-instance-method","name":"delete=","doc":"If the file needs to be deleted: _delete=true_.\n<br>\nBy default: _delete=false_.","summary":"<p>If the file needs to be deleted: <em>delete=true</em>.</p>","abstract":false,"args":[{"name":"delete","external_name":"delete","restriction":"Bool"}],"args_string":"(delete : Bool)","args_html":"(delete : Bool)","location":{"filename":"src/dynfork/globals/types.cr","line_number":53,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L53"},"def":{"name":"delete=","args":[{"name":"delete","external_name":"delete","restriction":"Bool"}],"visibility":"Public","body":"@delete = delete"}},{"html_id":"delete?:Bool-instance-method","name":"delete?","doc":"If the file needs to be deleted: _delete=true_.\n<br>\nBy default: _delete=false_.","summary":"<p>If the file needs to be deleted: <em>delete=true</em>.</p>","abstract":false,"location":{"filename":"src/dynfork/globals/types.cr","line_number":53,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L53"},"def":{"name":"delete?","return_type":"Bool","visibility":"Public","body":"@delete"}},{"html_id":"name:String-instance-method","name":"name","doc":"Original file name.","summary":"<p>Original file name.</p>","abstract":false,"location":{"filename":"src/dynfork/globals/types.cr","line_number":47,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L47"},"def":{"name":"name","return_type":"String","visibility":"Public","body":"@name"}},{"html_id":"name=(name:String)-instance-method","name":"name=","doc":"Original file name.","summary":"<p>Original file name.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : String)","location":{"filename":"src/dynfork/globals/types.cr","line_number":47,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L47"},"def":{"name":"name=","args":[{"name":"name","external_name":"name","restriction":"String"}],"visibility":"Public","body":"@name = name"}},{"html_id":"path:String-instance-method","name":"path","doc":"Path to file.","summary":"<p>Path to file.</p>","abstract":false,"location":{"filename":"src/dynfork/globals/types.cr","line_number":43,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L43"},"def":{"name":"path","return_type":"String","visibility":"Public","body":"@path"}},{"html_id":"path=(path:String)-instance-method","name":"path=","doc":"Path to file.","summary":"<p>Path to file.</p>","abstract":false,"args":[{"name":"path","external_name":"path","restriction":"String"}],"args_string":"(path : String)","args_html":"(path : String)","location":{"filename":"src/dynfork/globals/types.cr","line_number":43,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L43"},"def":{"name":"path=","args":[{"name":"path","external_name":"path","restriction":"String"}],"visibility":"Public","body":"@path = path"}},{"html_id":"size:Int64-instance-method","name":"size","doc":"File size in bytes.","summary":"<p>File size in bytes.</p>","abstract":false,"location":{"filename":"src/dynfork/globals/types.cr","line_number":49,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L49"},"def":{"name":"size","return_type":"Int64","visibility":"Public","body":"@size"}},{"html_id":"size=(size:Int64)-instance-method","name":"size=","doc":"File size in bytes.","summary":"<p>File size in bytes.</p>","abstract":false,"args":[{"name":"size","external_name":"size","restriction":"Int64"}],"args_string":"(size : Int64)","args_html":"(size : Int64)","location":{"filename":"src/dynfork/globals/types.cr","line_number":49,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L49"},"def":{"name":"size=","args":[{"name":"size","external_name":"size","restriction":"Int64"}],"visibility":"Public","body":"@size = size"}},{"html_id":"to_bson(bson=BSON.new)-instance-method","name":"to_bson","doc":"Converts to a BSON representation.\n\n```\nuser = User.new name: \"John\"\nbson = user.to_bson\n```","summary":"<p>Converts to a BSON representation.</p>","abstract":false,"args":[{"name":"bson","default_value":"BSON.new","external_name":"bson","restriction":""}],"args_string":"(bson = BSON.new)","args_html":"(bson = <span class=\"t\">BSON</span>.new)","location":{"filename":"src/dynfork/globals/types.cr","line_number":40,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L40"},"def":{"name":"to_bson","args":[{"name":"bson","default_value":"BSON.new","external_name":"bson","restriction":""}],"visibility":"Public","body":"{% if true %}\n      {% global_options = @type.annotations(BSON::Options) %}\n      {% camelize = global_options.reduce(false) do |_, a|\n  a[:camelize]\nend %}\n      {% for ivar in @type.instance_vars %}\n        {% ann = ivar.annotation(BSON::Field) %}\n        {% typ = ivar.type.union_types.select do |t|\n  t != Nil\nend[0] %}\n        {% key = ivar.name %}\n        {% bson_key = ann ? ann[:key].id : camelize ? ivar.name.camelcase(lower: camelize == \"lower\") : ivar.name %}\n        {% if ann && ann[:ignore] %}{% else %}\n          {% getter_names = [key + \"?\", key, key + \"!\"] %}\n          {% getter_name = getter_names.find do |name|\n  @type.has_method?(name)\nend %}\n          {% if getter_name %}\n            {% if ann && ann[:emit_null] %}{% else %}\n              unless self.{{ getter_name }}.nil?\n            {% end %}\n              {% if typ.has_method?(:to_bson) %}\n                bson[\"{{ bson_key }}\"] = self.{{ getter_name }}.try &.to_bson\n              {% else %}\n                bson[\"{{ bson_key }}\"] = self.{{ getter_name }}\n              {% end %}\n            {% if ann && ann[:emit_null] %}{% else %}\n              end\n            {% end %}\n          {% end %}\n        {% end %}\n      {% end %}\n      {% end %}\nbson\n"}},{"html_id":"url:String-instance-method","name":"url","doc":"URL to file.","summary":"<p>URL to file.</p>","abstract":false,"location":{"filename":"src/dynfork/globals/types.cr","line_number":45,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L45"},"def":{"name":"url","return_type":"String","visibility":"Public","body":"@url"}},{"html_id":"url=(url:String)-instance-method","name":"url=","doc":"URL to file.","summary":"<p>URL to file.</p>","abstract":false,"args":[{"name":"url","external_name":"url","restriction":"String"}],"args_string":"(url : String)","args_html":"(url : String)","location":{"filename":"src/dynfork/globals/types.cr","line_number":45,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L45"},"def":{"name":"url=","args":[{"name":"url","external_name":"url","restriction":"String"}],"visibility":"Public","body":"@url = url"}}]},{"html_id":"dynfork/DynFork/Globals/Types/ImageData","path":"DynFork/Globals/Types/ImageData.html","kind":"struct","full_name":"DynFork::Globals::Types::ImageData","name":"ImageData","abstract":false,"superclass":{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"dynfork/BSON/Serializable","kind":"module","full_name":"BSON::Serializable","name":"Serializable"},{"html_id":"dynfork/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dynfork/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/globals/types.cr","line_number":59,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L59"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"dynfork/BSON/Serializable","kind":"module","full_name":"BSON::Serializable","name":"Serializable"},{"html_id":"dynfork/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"}],"namespace":{"html_id":"dynfork/DynFork/Globals/Types","kind":"module","full_name":"DynFork::Globals::Types","name":"Types"},"doc":"Data type for ImageField.","summary":"<p>Data type for ImageField.</p>","class_methods":[{"html_id":"from_bson(bson:BSON)-class-method","name":"from_bson","doc":"NOTE: See `self.new`.","summary":"<p><span class=\"flag purple\">NOTE</span>  See <code>self<a href=\"../../../DynFork/Globals/Types/ImageData.html#new-class-method\">.new</a></code>.</p>","abstract":false,"args":[{"name":"bson","external_name":"bson","restriction":"BSON"}],"args_string":"(bson : BSON)","args_html":"(bson : BSON)","location":{"filename":"src/dynfork/globals/types.cr","line_number":61,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L61"},"def":{"name":"from_bson","args":[{"name":"bson","external_name":"bson","restriction":"BSON"}],"visibility":"Public","body":"self.new(bson)"}}],"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/dynfork/globals/types.cr","line_number":60,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L60"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}},{"html_id":"new(bson:BSON)-class-method","name":"new","doc":"Allocate an instance and copies data from a BSON struct.\n\n```\nclass User\n  include BSON::Serializable\n  property name : String\nend\n\ndata = BSON.new\ndata[\"name\"] = \"John\"\nUser.new(data)\n```","summary":"<p>Allocate an instance and copies data from a BSON struct.</p>","abstract":false,"args":[{"name":"bson","external_name":"bson","restriction":"BSON"}],"args_string":"(bson : BSON)","args_html":"(bson : BSON)","location":{"filename":"src/dynfork/globals/types.cr","line_number":61,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L61"},"def":{"name":"new","args":[{"name":"bson","external_name":"bson","restriction":"BSON"}],"visibility":"Public","body":"_ = allocate\n_.initialize(bson)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/dynfork/globals/types.cr","line_number":98,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L98"},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"delete=(delete:Bool)-instance-method","name":"delete=","doc":"If the images needs to be deleted: _delete=true_.\n<br>\nBy default: _delete=false_.","summary":"<p>If the images needs to be deleted: <em>delete=true</em>.</p>","abstract":false,"args":[{"name":"delete","external_name":"delete","restriction":"Bool"}],"args_string":"(delete : Bool)","args_html":"(delete : Bool)","location":{"filename":"src/dynfork/globals/types.cr","line_number":88,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L88"},"def":{"name":"delete=","args":[{"name":"delete","external_name":"delete","restriction":"Bool"}],"visibility":"Public","body":"@delete = delete"}},{"html_id":"delete?:Bool-instance-method","name":"delete?","doc":"If the images needs to be deleted: _delete=true_.\n<br>\nBy default: _delete=false_.","summary":"<p>If the images needs to be deleted: <em>delete=true</em>.</p>","abstract":false,"location":{"filename":"src/dynfork/globals/types.cr","line_number":88,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L88"},"def":{"name":"delete?","return_type":"Bool","visibility":"Public","body":"@delete"}},{"html_id":"extension:String|Nil-instance-method","name":"extension","doc":"Image extension.\n<br>\n_Examples: .png|.jpeg|.jpg|.webp_","summary":"<p>Image extension.</p>","abstract":false,"def":{"name":"extension","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @extension).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Globals::Types::ImageData#extension cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"extension=(extension:String|Nil)-instance-method","name":"extension=","doc":"Image extension.\n<br>\n_Examples: .png|.jpeg|.jpg|.webp_","summary":"<p>Image extension.</p>","abstract":false,"args":[{"name":"extension","external_name":"extension","restriction":"String | ::Nil"}],"args_string":"(extension : String | Nil)","args_html":"(extension : String | Nil)","location":{"filename":"src/dynfork/globals/types.cr","line_number":92,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L92"},"def":{"name":"extension=","args":[{"name":"extension","external_name":"extension","restriction":"String | ::Nil"}],"visibility":"Public","body":"@extension = extension"}},{"html_id":"extension?:String|Nil|Nil-instance-method","name":"extension?","doc":"Image extension.\n<br>\n_Examples: .png|.jpeg|.jpg|.webp_","summary":"<p>Image extension.</p>","abstract":false,"def":{"name":"extension?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@extension"}},{"html_id":"height:Int32-instance-method","name":"height","doc":"Image height in pixels (for original image).","summary":"<p>Image height in pixels (for original image).</p>","abstract":false,"location":{"filename":"src/dynfork/globals/types.cr","line_number":82,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L82"},"def":{"name":"height","return_type":"Int32","visibility":"Public","body":"@height"}},{"html_id":"height=(height:Int32)-instance-method","name":"height=","doc":"Image height in pixels (for original image).","summary":"<p>Image height in pixels (for original image).</p>","abstract":false,"args":[{"name":"height","external_name":"height","restriction":"Int32"}],"args_string":"(height : Int32)","args_html":"(height : Int32)","location":{"filename":"src/dynfork/globals/types.cr","line_number":82,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L82"},"def":{"name":"height=","args":[{"name":"height","external_name":"height","restriction":"Int32"}],"visibility":"Public","body":"@height = height"}},{"html_id":"images_dir_path:String|Nil-instance-method","name":"images_dir_path","doc":"Path to target directory with images.","summary":"<p>Path to target directory with images.</p>","abstract":false,"def":{"name":"images_dir_path","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @images_dir_path).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Globals::Types::ImageData#images_dir_path cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"images_dir_path=(images_dir_path:String|Nil)-instance-method","name":"images_dir_path=","doc":"Path to target directory with images.","summary":"<p>Path to target directory with images.</p>","abstract":false,"args":[{"name":"images_dir_path","external_name":"images_dir_path","restriction":"String | ::Nil"}],"args_string":"(images_dir_path : String | Nil)","args_html":"(images_dir_path : String | Nil)","location":{"filename":"src/dynfork/globals/types.cr","line_number":94,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L94"},"def":{"name":"images_dir_path=","args":[{"name":"images_dir_path","external_name":"images_dir_path","restriction":"String | ::Nil"}],"visibility":"Public","body":"@images_dir_path = images_dir_path"}},{"html_id":"images_dir_path?:String|Nil|Nil-instance-method","name":"images_dir_path?","doc":"Path to target directory with images.","summary":"<p>Path to target directory with images.</p>","abstract":false,"def":{"name":"images_dir_path?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@images_dir_path"}},{"html_id":"images_dir_url:String|Nil-instance-method","name":"images_dir_url","doc":"URL path to target directory with images.","summary":"<p>URL path to target directory with images.</p>","abstract":false,"def":{"name":"images_dir_url","return_type":"String | ::Nil","visibility":"Public","body":"if (value = @images_dir_url).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Globals::Types::ImageData#images_dir_url cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"images_dir_url=(images_dir_url:String|Nil)-instance-method","name":"images_dir_url=","doc":"URL path to target directory with images.","summary":"<p>URL path to target directory with images.</p>","abstract":false,"args":[{"name":"images_dir_url","external_name":"images_dir_url","restriction":"String | ::Nil"}],"args_string":"(images_dir_url : String | Nil)","args_html":"(images_dir_url : String | Nil)","location":{"filename":"src/dynfork/globals/types.cr","line_number":96,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L96"},"def":{"name":"images_dir_url=","args":[{"name":"images_dir_url","external_name":"images_dir_url","restriction":"String | ::Nil"}],"visibility":"Public","body":"@images_dir_url = images_dir_url"}},{"html_id":"images_dir_url?:String|Nil|Nil-instance-method","name":"images_dir_url?","doc":"URL path to target directory with images.","summary":"<p>URL path to target directory with images.</p>","abstract":false,"def":{"name":"images_dir_url?","return_type":"String | ::Nil | ::Nil","visibility":"Public","body":"@images_dir_url"}},{"html_id":"name:String-instance-method","name":"name","doc":"Image name (for original image).","summary":"<p>Image name (for original image).</p>","abstract":false,"location":{"filename":"src/dynfork/globals/types.cr","line_number":78,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L78"},"def":{"name":"name","return_type":"String","visibility":"Public","body":"@name"}},{"html_id":"name=(name:String)-instance-method","name":"name=","doc":"Image name (for original image).","summary":"<p>Image name (for original image).</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : String)","location":{"filename":"src/dynfork/globals/types.cr","line_number":78,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L78"},"def":{"name":"name=","args":[{"name":"name","external_name":"name","restriction":"String"}],"visibility":"Public","body":"@name = name"}},{"html_id":"path:String-instance-method","name":"path","doc":"Path to image (for original image).","summary":"<p>Path to image (for original image).</p>","abstract":false,"location":{"filename":"src/dynfork/globals/types.cr","line_number":64,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L64"},"def":{"name":"path","return_type":"String","visibility":"Public","body":"@path"}},{"html_id":"path=(path:String)-instance-method","name":"path=","doc":"Path to image (for original image).","summary":"<p>Path to image (for original image).</p>","abstract":false,"args":[{"name":"path","external_name":"path","restriction":"String"}],"args_string":"(path : String)","args_html":"(path : String)","location":{"filename":"src/dynfork/globals/types.cr","line_number":64,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L64"},"def":{"name":"path=","args":[{"name":"path","external_name":"path","restriction":"String"}],"visibility":"Public","body":"@path = path"}},{"html_id":"path_lg:String-instance-method","name":"path_lg","abstract":false,"location":{"filename":"src/dynfork/globals/types.cr","line_number":69,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L69"},"def":{"name":"path_lg","return_type":"String","visibility":"Public","body":"@path_lg"}},{"html_id":"path_lg=(path_lg:String)-instance-method","name":"path_lg=","abstract":false,"args":[{"name":"path_lg","external_name":"path_lg","restriction":"String"}],"args_string":"(path_lg : String)","args_html":"(path_lg : String)","location":{"filename":"src/dynfork/globals/types.cr","line_number":69,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L69"},"def":{"name":"path_lg=","args":[{"name":"path_lg","external_name":"path_lg","restriction":"String"}],"visibility":"Public","body":"@path_lg = path_lg"}},{"html_id":"path_md:String-instance-method","name":"path_md","abstract":false,"location":{"filename":"src/dynfork/globals/types.cr","line_number":68,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L68"},"def":{"name":"path_md","return_type":"String","visibility":"Public","body":"@path_md"}},{"html_id":"path_md=(path_md:String)-instance-method","name":"path_md=","abstract":false,"args":[{"name":"path_md","external_name":"path_md","restriction":"String"}],"args_string":"(path_md : String)","args_html":"(path_md : String)","location":{"filename":"src/dynfork/globals/types.cr","line_number":68,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L68"},"def":{"name":"path_md=","args":[{"name":"path_md","external_name":"path_md","restriction":"String"}],"visibility":"Public","body":"@path_md = path_md"}},{"html_id":"path_sm:String-instance-method","name":"path_sm","abstract":false,"location":{"filename":"src/dynfork/globals/types.cr","line_number":67,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L67"},"def":{"name":"path_sm","return_type":"String","visibility":"Public","body":"@path_sm"}},{"html_id":"path_sm=(path_sm:String)-instance-method","name":"path_sm=","abstract":false,"args":[{"name":"path_sm","external_name":"path_sm","restriction":"String"}],"args_string":"(path_sm : String)","args_html":"(path_sm : String)","location":{"filename":"src/dynfork/globals/types.cr","line_number":67,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L67"},"def":{"name":"path_sm=","args":[{"name":"path_sm","external_name":"path_sm","restriction":"String"}],"visibility":"Public","body":"@path_sm = path_sm"}},{"html_id":"path_xs:String-instance-method","name":"path_xs","doc":"For thumbnails.","summary":"<p>For thumbnails.</p>","abstract":false,"location":{"filename":"src/dynfork/globals/types.cr","line_number":66,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L66"},"def":{"name":"path_xs","return_type":"String","visibility":"Public","body":"@path_xs"}},{"html_id":"path_xs=(path_xs:String)-instance-method","name":"path_xs=","doc":"For thumbnails.","summary":"<p>For thumbnails.</p>","abstract":false,"args":[{"name":"path_xs","external_name":"path_xs","restriction":"String"}],"args_string":"(path_xs : String)","args_html":"(path_xs : String)","location":{"filename":"src/dynfork/globals/types.cr","line_number":66,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L66"},"def":{"name":"path_xs=","args":[{"name":"path_xs","external_name":"path_xs","restriction":"String"}],"visibility":"Public","body":"@path_xs = path_xs"}},{"html_id":"size:Int64-instance-method","name":"size","doc":"Image size in bytes (for original image).","summary":"<p>Image size in bytes (for original image).</p>","abstract":false,"location":{"filename":"src/dynfork/globals/types.cr","line_number":84,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L84"},"def":{"name":"size","return_type":"Int64","visibility":"Public","body":"@size"}},{"html_id":"size=(size:Int64)-instance-method","name":"size=","doc":"Image size in bytes (for original image).","summary":"<p>Image size in bytes (for original image).</p>","abstract":false,"args":[{"name":"size","external_name":"size","restriction":"Int64"}],"args_string":"(size : Int64)","args_html":"(size : Int64)","location":{"filename":"src/dynfork/globals/types.cr","line_number":84,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L84"},"def":{"name":"size=","args":[{"name":"size","external_name":"size","restriction":"Int64"}],"visibility":"Public","body":"@size = size"}},{"html_id":"to_bson(bson=BSON.new)-instance-method","name":"to_bson","doc":"Converts to a BSON representation.\n\n```\nuser = User.new name: \"John\"\nbson = user.to_bson\n```","summary":"<p>Converts to a BSON representation.</p>","abstract":false,"args":[{"name":"bson","default_value":"BSON.new","external_name":"bson","restriction":""}],"args_string":"(bson = BSON.new)","args_html":"(bson = <span class=\"t\">BSON</span>.new)","location":{"filename":"src/dynfork/globals/types.cr","line_number":61,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L61"},"def":{"name":"to_bson","args":[{"name":"bson","default_value":"BSON.new","external_name":"bson","restriction":""}],"visibility":"Public","body":"{% if true %}\n      {% global_options = @type.annotations(BSON::Options) %}\n      {% camelize = global_options.reduce(false) do |_, a|\n  a[:camelize]\nend %}\n      {% for ivar in @type.instance_vars %}\n        {% ann = ivar.annotation(BSON::Field) %}\n        {% typ = ivar.type.union_types.select do |t|\n  t != Nil\nend[0] %}\n        {% key = ivar.name %}\n        {% bson_key = ann ? ann[:key].id : camelize ? ivar.name.camelcase(lower: camelize == \"lower\") : ivar.name %}\n        {% if ann && ann[:ignore] %}{% else %}\n          {% getter_names = [key + \"?\", key, key + \"!\"] %}\n          {% getter_name = getter_names.find do |name|\n  @type.has_method?(name)\nend %}\n          {% if getter_name %}\n            {% if ann && ann[:emit_null] %}{% else %}\n              unless self.{{ getter_name }}.nil?\n            {% end %}\n              {% if typ.has_method?(:to_bson) %}\n                bson[\"{{ bson_key }}\"] = self.{{ getter_name }}.try &.to_bson\n              {% else %}\n                bson[\"{{ bson_key }}\"] = self.{{ getter_name }}\n              {% end %}\n            {% if ann && ann[:emit_null] %}{% else %}\n              end\n            {% end %}\n          {% end %}\n        {% end %}\n      {% end %}\n      {% end %}\nbson\n"}},{"html_id":"url:String-instance-method","name":"url","doc":"URL to the image (for original image).","summary":"<p>URL to the image (for original image).</p>","abstract":false,"location":{"filename":"src/dynfork/globals/types.cr","line_number":71,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L71"},"def":{"name":"url","return_type":"String","visibility":"Public","body":"@url"}},{"html_id":"url=(url:String)-instance-method","name":"url=","doc":"URL to the image (for original image).","summary":"<p>URL to the image (for original image).</p>","abstract":false,"args":[{"name":"url","external_name":"url","restriction":"String"}],"args_string":"(url : String)","args_html":"(url : String)","location":{"filename":"src/dynfork/globals/types.cr","line_number":71,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L71"},"def":{"name":"url=","args":[{"name":"url","external_name":"url","restriction":"String"}],"visibility":"Public","body":"@url = url"}},{"html_id":"url_lg:String-instance-method","name":"url_lg","abstract":false,"location":{"filename":"src/dynfork/globals/types.cr","line_number":76,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L76"},"def":{"name":"url_lg","return_type":"String","visibility":"Public","body":"@url_lg"}},{"html_id":"url_lg=(url_lg:String)-instance-method","name":"url_lg=","abstract":false,"args":[{"name":"url_lg","external_name":"url_lg","restriction":"String"}],"args_string":"(url_lg : String)","args_html":"(url_lg : String)","location":{"filename":"src/dynfork/globals/types.cr","line_number":76,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L76"},"def":{"name":"url_lg=","args":[{"name":"url_lg","external_name":"url_lg","restriction":"String"}],"visibility":"Public","body":"@url_lg = url_lg"}},{"html_id":"url_md:String-instance-method","name":"url_md","abstract":false,"location":{"filename":"src/dynfork/globals/types.cr","line_number":75,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L75"},"def":{"name":"url_md","return_type":"String","visibility":"Public","body":"@url_md"}},{"html_id":"url_md=(url_md:String)-instance-method","name":"url_md=","abstract":false,"args":[{"name":"url_md","external_name":"url_md","restriction":"String"}],"args_string":"(url_md : String)","args_html":"(url_md : String)","location":{"filename":"src/dynfork/globals/types.cr","line_number":75,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L75"},"def":{"name":"url_md=","args":[{"name":"url_md","external_name":"url_md","restriction":"String"}],"visibility":"Public","body":"@url_md = url_md"}},{"html_id":"url_sm:String-instance-method","name":"url_sm","abstract":false,"location":{"filename":"src/dynfork/globals/types.cr","line_number":74,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L74"},"def":{"name":"url_sm","return_type":"String","visibility":"Public","body":"@url_sm"}},{"html_id":"url_sm=(url_sm:String)-instance-method","name":"url_sm=","abstract":false,"args":[{"name":"url_sm","external_name":"url_sm","restriction":"String"}],"args_string":"(url_sm : String)","args_html":"(url_sm : String)","location":{"filename":"src/dynfork/globals/types.cr","line_number":74,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L74"},"def":{"name":"url_sm=","args":[{"name":"url_sm","external_name":"url_sm","restriction":"String"}],"visibility":"Public","body":"@url_sm = url_sm"}},{"html_id":"url_xs:String-instance-method","name":"url_xs","doc":"For thumbnails.","summary":"<p>For thumbnails.</p>","abstract":false,"location":{"filename":"src/dynfork/globals/types.cr","line_number":73,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L73"},"def":{"name":"url_xs","return_type":"String","visibility":"Public","body":"@url_xs"}},{"html_id":"url_xs=(url_xs:String)-instance-method","name":"url_xs=","doc":"For thumbnails.","summary":"<p>For thumbnails.</p>","abstract":false,"args":[{"name":"url_xs","external_name":"url_xs","restriction":"String"}],"args_string":"(url_xs : String)","args_html":"(url_xs : String)","location":{"filename":"src/dynfork/globals/types.cr","line_number":73,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L73"},"def":{"name":"url_xs=","args":[{"name":"url_xs","external_name":"url_xs","restriction":"String"}],"visibility":"Public","body":"@url_xs = url_xs"}},{"html_id":"width:Int32-instance-method","name":"width","doc":"Image width in pixels (for original image).","summary":"<p>Image width in pixels (for original image).</p>","abstract":false,"location":{"filename":"src/dynfork/globals/types.cr","line_number":80,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L80"},"def":{"name":"width","return_type":"Int32","visibility":"Public","body":"@width"}},{"html_id":"width=(width:Int32)-instance-method","name":"width=","doc":"Image width in pixels (for original image).","summary":"<p>Image width in pixels (for original image).</p>","abstract":false,"args":[{"name":"width","external_name":"width","restriction":"Int32"}],"args_string":"(width : Int32)","args_html":"(width : Int32)","location":{"filename":"src/dynfork/globals/types.cr","line_number":80,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L80"},"def":{"name":"width=","args":[{"name":"width","external_name":"width","restriction":"Int32"}],"visibility":"Public","body":"@width = width"}}]},{"html_id":"dynfork/DynFork/Globals/Types/OutputData","path":"DynFork/Globals/Types/OutputData.html","kind":"struct","full_name":"DynFork::Globals::Types::OutputData","name":"OutputData","abstract":false,"superclass":{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"dynfork/BSON/Serializable","kind":"module","full_name":"BSON::Serializable","name":"Serializable"},{"html_id":"dynfork/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dynfork/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/globals/types.cr","line_number":4,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L4"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"dynfork/BSON/Serializable","kind":"module","full_name":"BSON::Serializable","name":"Serializable"},{"html_id":"dynfork/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"}],"namespace":{"html_id":"dynfork/DynFork/Globals/Types","kind":"module","full_name":"DynFork::Globals::Types","name":"Types"},"doc":"Output data type for the `Model.check()` method.","summary":"<p>Output data type for the <code>Model.check()</code> method.</p>","class_methods":[{"html_id":"from_bson(bson:BSON)-class-method","name":"from_bson","doc":"NOTE: See `self.new`.","summary":"<p><span class=\"flag purple\">NOTE</span>  See <code>self<a href=\"../../../DynFork/Globals/Types/OutputData.html#new%28data%3AHash%28String%2CDynFork%3A%3AGlobals%3A%3AResultMapType%29%2Cvalid%3ABool%2Cupdate%3ABool%29-class-method\">.new</a></code>.</p>","abstract":false,"args":[{"name":"bson","external_name":"bson","restriction":"BSON"}],"args_string":"(bson : BSON)","args_html":"(bson : BSON)","location":{"filename":"src/dynfork/globals/types.cr","line_number":6,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L6"},"def":{"name":"from_bson","args":[{"name":"bson","external_name":"bson","restriction":"BSON"}],"visibility":"Public","body":"self.new(bson)"}}],"constructors":[{"html_id":"new(data:Hash(String,DynFork::Globals::ResultMapType),valid:Bool,update:Bool)-class-method","name":"new","abstract":false,"args":[{"name":"data","external_name":"data","restriction":"Hash(String, DynFork::Globals::ResultMapType)"},{"name":"valid","external_name":"valid","restriction":"Bool"},{"name":"update","external_name":"update","restriction":"Bool"}],"args_string":"(data : Hash(String, DynFork::Globals::ResultMapType), valid : Bool, update : Bool)","args_html":"(data : Hash(String, <a href=\"../../../DynFork/Globals/Aliases/ResultMapType.html\">DynFork::Globals::ResultMapType</a>), valid : Bool, update : Bool)","location":{"filename":"src/dynfork/globals/types.cr","line_number":12,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L12"},"def":{"name":"new","args":[{"name":"data","external_name":"data","restriction":"Hash(String, DynFork::Globals::ResultMapType)"},{"name":"valid","external_name":"valid","restriction":"Bool"},{"name":"update","external_name":"update","restriction":"Bool"}],"visibility":"Public","body":"_ = allocate\n_.initialize(data, valid, update)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/dynfork/globals/types.cr","line_number":5,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L5"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}},{"html_id":"new(bson:BSON)-class-method","name":"new","doc":"Allocate an instance and copies data from a BSON struct.\n\n```\nclass User\n  include BSON::Serializable\n  property name : String\nend\n\ndata = BSON.new\ndata[\"name\"] = \"John\"\nUser.new(data)\n```","summary":"<p>Allocate an instance and copies data from a BSON struct.</p>","abstract":false,"args":[{"name":"bson","external_name":"bson","restriction":"BSON"}],"args_string":"(bson : BSON)","args_html":"(bson : BSON)","location":{"filename":"src/dynfork/globals/types.cr","line_number":6,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L6"},"def":{"name":"new","args":[{"name":"bson","external_name":"bson","restriction":"BSON"}],"visibility":"Public","body":"_ = allocate\n_.initialize(bson)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"data:Hash(String,DynFork::Globals::ResultMapType)-instance-method","name":"data","abstract":false,"location":{"filename":"src/dynfork/globals/types.cr","line_number":8,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L8"},"def":{"name":"data","return_type":"Hash(String, DynFork::Globals::ResultMapType)","visibility":"Public","body":"@data"}},{"html_id":"to_bson(bson=BSON.new)-instance-method","name":"to_bson","doc":"Converts to a BSON representation.\n\n```\nuser = User.new name: \"John\"\nbson = user.to_bson\n```","summary":"<p>Converts to a BSON representation.</p>","abstract":false,"args":[{"name":"bson","default_value":"BSON.new","external_name":"bson","restriction":""}],"args_string":"(bson = BSON.new)","args_html":"(bson = <span class=\"t\">BSON</span>.new)","location":{"filename":"src/dynfork/globals/types.cr","line_number":6,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L6"},"def":{"name":"to_bson","args":[{"name":"bson","default_value":"BSON.new","external_name":"bson","restriction":""}],"visibility":"Public","body":"{% if true %}\n      {% global_options = @type.annotations(BSON::Options) %}\n      {% camelize = global_options.reduce(false) do |_, a|\n  a[:camelize]\nend %}\n      {% for ivar in @type.instance_vars %}\n        {% ann = ivar.annotation(BSON::Field) %}\n        {% typ = ivar.type.union_types.select do |t|\n  t != Nil\nend[0] %}\n        {% key = ivar.name %}\n        {% bson_key = ann ? ann[:key].id : camelize ? ivar.name.camelcase(lower: camelize == \"lower\") : ivar.name %}\n        {% if ann && ann[:ignore] %}{% else %}\n          {% getter_names = [key + \"?\", key, key + \"!\"] %}\n          {% getter_name = getter_names.find do |name|\n  @type.has_method?(name)\nend %}\n          {% if getter_name %}\n            {% if ann && ann[:emit_null] %}{% else %}\n              unless self.{{ getter_name }}.nil?\n            {% end %}\n              {% if typ.has_method?(:to_bson) %}\n                bson[\"{{ bson_key }}\"] = self.{{ getter_name }}.try &.to_bson\n              {% else %}\n                bson[\"{{ bson_key }}\"] = self.{{ getter_name }}\n              {% end %}\n            {% if ann && ann[:emit_null] %}{% else %}\n              end\n            {% end %}\n          {% end %}\n        {% end %}\n      {% end %}\n      {% end %}\nbson\n"}},{"html_id":"update?:Bool-instance-method","name":"update?","abstract":false,"location":{"filename":"src/dynfork/globals/types.cr","line_number":10,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L10"},"def":{"name":"update?","return_type":"Bool","visibility":"Public","body":"@update"}},{"html_id":"valid=(valid:Bool)-instance-method","name":"valid=","abstract":false,"args":[{"name":"valid","external_name":"valid","restriction":"Bool"}],"args_string":"(valid : Bool)","args_html":"(valid : Bool)","location":{"filename":"src/dynfork/globals/types.cr","line_number":9,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L9"},"def":{"name":"valid=","args":[{"name":"valid","external_name":"valid","restriction":"Bool"}],"visibility":"Public","body":"@valid = valid"}},{"html_id":"valid?:Bool-instance-method","name":"valid?","abstract":false,"location":{"filename":"src/dynfork/globals/types.cr","line_number":9,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L9"},"def":{"name":"valid?","return_type":"Bool","visibility":"Public","body":"@valid"}}]},{"html_id":"dynfork/DynFork/Globals/Types/Unit","path":"DynFork/Globals/Types/Unit.html","kind":"struct","full_name":"DynFork::Globals::Types::Unit","name":"Unit","abstract":false,"superclass":{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"dynfork/JSON/Serializable/Strict","kind":"module","full_name":"JSON::Serializable::Strict","name":"Strict"},{"html_id":"dynfork/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dynfork/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/globals/types.cr","line_number":20,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L20"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"dynfork/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"dynfork/JSON/Serializable/Strict","kind":"module","full_name":"JSON::Serializable::Strict","name":"Strict"}],"namespace":{"html_id":"dynfork/DynFork/Globals/Types","kind":"module","full_name":"DynFork::Globals::Types","name":"Types"},"doc":"Unit of information for `choices` parameter in dynamic field types.","summary":"<p>Unit of information for <code>choices</code> parameter in dynamic field types.</p>","constructors":[{"html_id":"new(field:String,title:String,value:Float64|Int64|String,delete:Bool=false)-class-method","name":"new","abstract":false,"args":[{"name":"field","external_name":"field","restriction":"String"},{"name":"title","external_name":"title","restriction":"String"},{"name":"value","external_name":"value","restriction":"Float64 | Int64 | String"},{"name":"delete","default_value":"false","external_name":"delete","restriction":"Bool"}],"args_string":"(field : String, title : String, value : Float64 | Int64 | String, delete : Bool = false)","args_html":"(field : String, title : String, value : Float64 | Int64 | String, delete : Bool = <span class=\"n\">false</span>)","location":{"filename":"src/dynfork/globals/types.cr","line_number":29,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L29"},"def":{"name":"new","args":[{"name":"field","external_name":"field","restriction":"String"},{"name":"title","external_name":"title","restriction":"String"},{"name":"value","external_name":"value","restriction":"Float64 | Int64 | String"},{"name":"delete","default_value":"false","external_name":"delete","restriction":"Bool"}],"visibility":"Public","body":"_ = allocate\n_.initialize(field, title, value, delete)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/dynfork/globals/types.cr","line_number":21,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L21"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}}],"instance_methods":[{"html_id":"delete?:Bool-instance-method","name":"delete?","abstract":false,"location":{"filename":"src/dynfork/globals/types.cr","line_number":27,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L27"},"def":{"name":"delete?","return_type":"Bool","visibility":"Public","body":"@delete"}},{"html_id":"field:String-instance-method","name":"field","abstract":false,"location":{"filename":"src/dynfork/globals/types.cr","line_number":24,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L24"},"def":{"name":"field","return_type":"String","visibility":"Public","body":"if (value = @field).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Globals::Types::Unit#field cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"field?:String|Nil-instance-method","name":"field?","abstract":false,"location":{"filename":"src/dynfork/globals/types.cr","line_number":24,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L24"},"def":{"name":"field?","return_type":"String | ::Nil","visibility":"Public","body":"@field"}},{"html_id":"title:String-instance-method","name":"title","abstract":false,"location":{"filename":"src/dynfork/globals/types.cr","line_number":25,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L25"},"def":{"name":"title","return_type":"String","visibility":"Public","body":"if (value = @title).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Globals::Types::Unit#title cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"title?:String|Nil-instance-method","name":"title?","abstract":false,"location":{"filename":"src/dynfork/globals/types.cr","line_number":25,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L25"},"def":{"name":"title?","return_type":"String | ::Nil","visibility":"Public","body":"@title"}},{"html_id":"value:Float64|Int64|String-instance-method","name":"value","abstract":false,"location":{"filename":"src/dynfork/globals/types.cr","line_number":26,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L26"},"def":{"name":"value","return_type":"Float64 | Int64 | String","visibility":"Public","body":"if (value = @value).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Globals::Types::Unit#value cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"value?:Float64|Int64|String|Nil-instance-method","name":"value?","abstract":false,"location":{"filename":"src/dynfork/globals/types.cr","line_number":26,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L26"},"def":{"name":"value?","return_type":"Float64 | Int64 | String | ::Nil","visibility":"Public","body":"@value"}}]},{"html_id":"dynfork/DynFork/Globals/Types/ValidationCacheSettings","path":"DynFork/Globals/Types/ValidationCacheSettings.html","kind":"struct","full_name":"DynFork::Globals::Types::ValidationCacheSettings","name":"ValidationCacheSettings","abstract":false,"superclass":{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dynfork/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/globals/types.cr","line_number":102,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L102"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Globals/Types","kind":"module","full_name":"DynFork::Globals::Types","name":"Types"},"doc":"Validation global DynFork settings.","summary":"<p>Validation global DynFork settings.</p>","class_methods":[{"html_id":"valid_app_name(app_name:String):Nil-class-method","name":"valid_app_name","doc":"App name = Project name.\nWARNING: Maximum 44 characters.\nWARNING: Match regular expression: /^[a-zA-Z][-_a-zA-Z0-9]{0,43}$/","summary":"<p>App name = Project name.</p>","abstract":false,"args":[{"name":"app_name","external_name":"app_name","restriction":"String"}],"args_string":"(app_name : String) : Nil","args_html":"(app_name : String) : Nil","location":{"filename":"src/dynfork/globals/types.cr","line_number":118,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L118"},"def":{"name":"valid_app_name","args":[{"name":"app_name","external_name":"app_name","restriction":"String"}],"return_type":"Nil","visibility":"Public","body":"if app_name.size > 44\n  raise(DynFork::Errors::Cache::SettingsExcessChars.new(\"app_name\", 44))\nend\nif DynFork::Globals.regex[:app_name].matches?(app_name)\nelse\n  raise(DynFork::Errors::Cache::SettingsRegexFails.new(\"app_name\", \"/^[a-zA-Z][-_a-zA-Z0-9]{0,43}$/\"))\nend\n"}},{"html_id":"valid_database_name(database_name:String):Nil-class-method","name":"valid_database_name","doc":"Database name.\nWARNING: Maximum 60 characters.","summary":"<p>Database name.</p>","abstract":false,"args":[{"name":"database_name","external_name":"database_name","restriction":"String"}],"args_string":"(database_name : String) : Nil","args_html":"(database_name : String) : Nil","location":{"filename":"src/dynfork/globals/types.cr","line_number":146,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L146"},"def":{"name":"valid_database_name","args":[{"name":"database_name","external_name":"database_name","restriction":"String"}],"return_type":"Nil","visibility":"Public","body":"if database_name.size > 60\n  raise(DynFork::Errors::Cache::SettingsExcessChars.new(\"database_name\", 60))\nend"}},{"html_id":"valid_unique_app_key(unique_app_key:String):Nil-class-method","name":"valid_unique_app_key","doc":"Unique project key.\nWARNING: Match regular expression: /^[a-zA-Z0-9]{16}$/","summary":"<p>Unique project key.</p>","abstract":false,"args":[{"name":"unique_app_key","external_name":"unique_app_key","restriction":"String"}],"args_string":"(unique_app_key : String) : Nil","args_html":"(unique_app_key : String) : Nil","location":{"filename":"src/dynfork/globals/types.cr","line_number":132,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L132"},"def":{"name":"valid_unique_app_key","args":[{"name":"unique_app_key","external_name":"unique_app_key","restriction":"String"}],"return_type":"Nil","visibility":"Public","body":"if unique_app_key.size > 16\n  raise(DynFork::Errors::Cache::SettingsExcessChars.new(\"unique_app_key\", 16))\nend\nif DynFork::Globals.regex[:unique_app_key].matches?(unique_app_key)\nelse\n  raise(DynFork::Errors::Cache::SettingsRegexFails.new(\"unique_app_key\", \"/^[a-zA-Z0-9]{16}$/\"))\nend\n"}},{"html_id":"validation:Nil-class-method","name":"validation","abstract":false,"location":{"filename":"src/dynfork/globals/types.cr","line_number":103,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L103"},"def":{"name":"validation","return_type":"Nil","visibility":"Public","body":"self.valid_app_name(DynFork::Globals.app_name)\nself.valid_unique_app_key(DynFork::Globals.unique_app_key)\nif DynFork::Globals.database_name.empty?\n  app_name = DynFork::Globals.app_name\n  unique_app_key = DynFork::Globals.unique_app_key\n  DynFork::Globals.database_name = \"#{app_name}_#{unique_app_key}\"\nelse\n  self.valid_database_name(DynFork::Globals.database_name)\nend\n"}}],"constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/dynfork/globals/types.cr","line_number":102,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L102"},"def":{"name":"new","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"html_id":"initialize-instance-method","name":"initialize","abstract":false,"location":{"filename":"src/dynfork/globals/types.cr","line_number":102,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/globals/types.cr#L102"},"def":{"name":"initialize","visibility":"Public","body":""}}]}]}]},{"html_id":"dynfork/DynFork/Meta","path":"DynFork/Meta.html","kind":"annotation","full_name":"DynFork::Meta","name":"Meta","abstract":false,"locations":[{"filename":"src/dynfork/meta.cr","line_number":76,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/meta.cr#L76"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork","kind":"module","full_name":"DynFork","name":"DynFork"},"doc":"Model parameters:\n<br>\n_( only **service_name** is a required parameter )_\n<br>\n<table>\n  <tr>\n    <th align=\"left\">Parameter</th>\n    <th align=\"left\">Default</th>\n    <th align=\"left\">Description</th>\n  </tr>\n  <tr>\n    <td align=\"left\">service_name</td>\n    <td align=\"left\">no</td>\n    <td align=\"left\"><b>Examples:</b> Accounts | Smartphones | Washing machines | etc ... </td>\n  </tr>\n  <tr>\n    <td align=\"left\">fixture_name</td>\n    <td align=\"left\">no</td>\n    <td align=\"left\">\n      The name of the fixture in the <b>config/fixtures</b> directory (without extension).\n      <br>\n      <b>Examples:</b> SiteSettings | AppSettings | etc ...\n    </td>\n  </tr>\n  <tr>\n    <td align=\"left\">db_query_docs_limit</td>\n    <td align=\"left\">1000</td>\n    <td align=\"left\">limiting query results.</td>\n  </tr>\n  <tr>\n    <td align=\"left\">migrat_model?</td>\n    <td align=\"left\">true</td>\n    <td align=\"left\">\n      Set to <b>false</b> if you do not need to migrate the Model to the database.<br>\n      This can be use to validate a web forms - Search form, Contact form, etc.\n    </td>\n  </tr>\n  <tr>\n    <td align=\"left\">create_doc?</td>\n    <td align=\"left\">true</td>\n    <td align=\"left\">\n      Can a Model create new documents in a collection?<br>\n      Set to <b>false</b> if you only need one document in the collection and the Model is using a fixture.\n    </td>\n  </tr>\n  <tr>\n    <td align=\"left\">update_doc?</td>\n    <td align=\"left\">true</td>\n    <td align=\"left\">Can a Model update documents in a collection?</td>\n  </tr>\n  <tr>\n    <td align=\"left\">delete_doc?</td>\n    <td align=\"left\">true</td>\n    <td align=\"left\">Can a Model remove documents from a collection?</td>\n  </tr>\n</table>\n\nExample:\n```\n@[DynFork::Meta(\n  service_name: \"ServiceName\",\n  fixture_name: \"FixtureName\",\n  db_query_docs_limit: 1000,\n  migrat_model?: true,\n  create_doc?: true,\n  update_doc?: true,\n  delete_doc?: true,\n)]\nstruct User < DynFork::Model\n  getter username = DynFork::Fields::TextField.new\n  getter birthday = DynFork::Fields::DateField.new\nend\n```\n","summary":"<p>Model parameters: <br> <em>( only <strong>service_name</strong> is a required parameter )</em> <br> <table>   <tr>     <th align=\"left\">Parameter</th>     <th align=\"left\">Default</th>     <th align=\"left\">Description</th>   </tr>   <tr>     <td align=\"left\">service_name</td>     <td align=\"left\">no</td>     <td align=\"left\"><b>Examples:</b> Accounts | Smartphones | Washing machines | etc ...</p>"},{"html_id":"dynfork/DynFork/Migration","path":"DynFork/Migration.html","kind":"module","full_name":"DynFork::Migration","name":"Migration","abstract":false,"locations":[{"filename":"src/dynfork/migration.cr","line_number":5,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/migration.cr#L5"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork","kind":"module","full_name":"DynFork","name":"DynFork"},"doc":"Migrations are DynFork way of\npropagating changes you make to\nyour models (adding a field, deleting a collection, etc.) into\nyour database schema.","summary":"<p>Migrations are DynFork way of propagating changes you make to your models (adding a field, deleting a collection, etc.) into your database schema.</p>","types":[{"html_id":"dynfork/DynFork/Migration/ModelState","path":"DynFork/Migration/ModelState.html","kind":"struct","full_name":"DynFork::Migration::ModelState","name":"ModelState","abstract":false,"superclass":{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"dynfork/BSON/Serializable","kind":"module","full_name":"BSON::Serializable","name":"Serializable"},{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dynfork/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/migration.cr","line_number":7,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/migration.cr#L7"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"dynfork/BSON/Serializable","kind":"module","full_name":"BSON::Serializable","name":"Serializable"}],"namespace":{"html_id":"dynfork/DynFork/Migration","kind":"module","full_name":"DynFork::Migration","name":"Migration"},"doc":"To control the state of Models in the super collection.","summary":"<p>To control the state of Models in the super collection.</p>","class_methods":[{"html_id":"from_bson(bson:BSON)-class-method","name":"from_bson","doc":"NOTE: See `self.new`.","summary":"<p><span class=\"flag purple\">NOTE</span>  See <code>self<a href=\"../../DynFork/Migration/ModelState.html#new%28collection_name%3AString%2Cfield_name_and_type_list%3AHash%28String%2CString%29%2Cdata_dynamic_fields%3AHash%28String%2CString%29%2Cmodel_exists%3ABool%3Dfalse%29-class-method\">.new</a></code>.</p>","abstract":false,"args":[{"name":"bson","external_name":"bson","restriction":"BSON"}],"args_string":"(bson : BSON)","args_html":"(bson : BSON)","location":{"filename":"src/dynfork/migration.cr","line_number":8,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/migration.cr#L8"},"def":{"name":"from_bson","args":[{"name":"bson","external_name":"bson","restriction":"BSON"}],"visibility":"Public","body":"self.new(bson)"}}],"constructors":[{"html_id":"new(collection_name:String,field_name_and_type_list:Hash(String,String),data_dynamic_fields:Hash(String,String),model_exists:Bool=false)-class-method","name":"new","abstract":false,"args":[{"name":"collection_name","external_name":"collection_name","restriction":"String"},{"name":"field_name_and_type_list","external_name":"field_name_and_type_list","restriction":"Hash(String, String)"},{"name":"data_dynamic_fields","external_name":"data_dynamic_fields","restriction":"Hash(String, String)"},{"name":"model_exists","default_value":"false","external_name":"model_exists","restriction":"Bool"}],"args_string":"(collection_name : String, field_name_and_type_list : Hash(String, String), data_dynamic_fields : Hash(String, String), model_exists : Bool = false)","args_html":"(collection_name : String, field_name_and_type_list : Hash(String, String), data_dynamic_fields : Hash(String, String), model_exists : Bool = <span class=\"n\">false</span>)","location":{"filename":"src/dynfork/migration.cr","line_number":15,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/migration.cr#L15"},"def":{"name":"new","args":[{"name":"collection_name","external_name":"collection_name","restriction":"String"},{"name":"field_name_and_type_list","external_name":"field_name_and_type_list","restriction":"Hash(String, String)"},{"name":"data_dynamic_fields","external_name":"data_dynamic_fields","restriction":"Hash(String, String)"},{"name":"model_exists","default_value":"false","external_name":"model_exists","restriction":"Bool"}],"visibility":"Public","body":"_ = allocate\n_.initialize(collection_name, field_name_and_type_list, data_dynamic_fields, model_exists)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(bson:BSON)-class-method","name":"new","doc":"Allocate an instance and copies data from a BSON struct.\n\n```\nclass User\n  include BSON::Serializable\n  property name : String\nend\n\ndata = BSON.new\ndata[\"name\"] = \"John\"\nUser.new(data)\n```","summary":"<p>Allocate an instance and copies data from a BSON struct.</p>","abstract":false,"args":[{"name":"bson","external_name":"bson","restriction":"BSON"}],"args_string":"(bson : BSON)","args_html":"(bson : BSON)","location":{"filename":"src/dynfork/migration.cr","line_number":8,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/migration.cr#L8"},"def":{"name":"new","args":[{"name":"bson","external_name":"bson","restriction":"BSON"}],"visibility":"Public","body":"_ = allocate\n_.initialize(bson)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"collection_name:String-instance-method","name":"collection_name","abstract":false,"location":{"filename":"src/dynfork/migration.cr","line_number":10,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/migration.cr#L10"},"def":{"name":"collection_name","return_type":"String","visibility":"Public","body":"@collection_name"}},{"html_id":"data_dynamic_fields:Hash(String,String)-instance-method","name":"data_dynamic_fields","abstract":false,"location":{"filename":"src/dynfork/migration.cr","line_number":12,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/migration.cr#L12"},"def":{"name":"data_dynamic_fields","return_type":"Hash(String, String)","visibility":"Public","body":"@data_dynamic_fields"}},{"html_id":"data_dynamic_fields=(data_dynamic_fields:Hash(String,String))-instance-method","name":"data_dynamic_fields=","abstract":false,"args":[{"name":"data_dynamic_fields","external_name":"data_dynamic_fields","restriction":"Hash(String, String)"}],"args_string":"(data_dynamic_fields : Hash(String, String))","args_html":"(data_dynamic_fields : Hash(String, String))","location":{"filename":"src/dynfork/migration.cr","line_number":12,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/migration.cr#L12"},"def":{"name":"data_dynamic_fields=","args":[{"name":"data_dynamic_fields","external_name":"data_dynamic_fields","restriction":"Hash(String, String)"}],"visibility":"Public","body":"@data_dynamic_fields = data_dynamic_fields"}},{"html_id":"field_name_and_type_list:Hash(String,String)-instance-method","name":"field_name_and_type_list","abstract":false,"location":{"filename":"src/dynfork/migration.cr","line_number":11,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/migration.cr#L11"},"def":{"name":"field_name_and_type_list","return_type":"Hash(String, String)","visibility":"Public","body":"@field_name_and_type_list"}},{"html_id":"field_name_and_type_list=(field_name_and_type_list:Hash(String,String))-instance-method","name":"field_name_and_type_list=","abstract":false,"args":[{"name":"field_name_and_type_list","external_name":"field_name_and_type_list","restriction":"Hash(String, String)"}],"args_string":"(field_name_and_type_list : Hash(String, String))","args_html":"(field_name_and_type_list : Hash(String, String))","location":{"filename":"src/dynfork/migration.cr","line_number":11,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/migration.cr#L11"},"def":{"name":"field_name_and_type_list=","args":[{"name":"field_name_and_type_list","external_name":"field_name_and_type_list","restriction":"Hash(String, String)"}],"visibility":"Public","body":"@field_name_and_type_list = field_name_and_type_list"}},{"html_id":"model_exists=(model_exists:Bool)-instance-method","name":"model_exists=","abstract":false,"args":[{"name":"model_exists","external_name":"model_exists","restriction":"Bool"}],"args_string":"(model_exists : Bool)","args_html":"(model_exists : Bool)","location":{"filename":"src/dynfork/migration.cr","line_number":13,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/migration.cr#L13"},"def":{"name":"model_exists=","args":[{"name":"model_exists","external_name":"model_exists","restriction":"Bool"}],"visibility":"Public","body":"@model_exists = model_exists"}},{"html_id":"model_exists?:Bool-instance-method","name":"model_exists?","abstract":false,"location":{"filename":"src/dynfork/migration.cr","line_number":13,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/migration.cr#L13"},"def":{"name":"model_exists?","return_type":"Bool","visibility":"Public","body":"@model_exists"}},{"html_id":"to_bson(bson=BSON.new)-instance-method","name":"to_bson","doc":"Converts to a BSON representation.\n\n```\nuser = User.new name: \"John\"\nbson = user.to_bson\n```","summary":"<p>Converts to a BSON representation.</p>","abstract":false,"args":[{"name":"bson","default_value":"BSON.new","external_name":"bson","restriction":""}],"args_string":"(bson = BSON.new)","args_html":"(bson = <span class=\"t\">BSON</span>.new)","location":{"filename":"src/dynfork/migration.cr","line_number":8,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/migration.cr#L8"},"def":{"name":"to_bson","args":[{"name":"bson","default_value":"BSON.new","external_name":"bson","restriction":""}],"visibility":"Public","body":"{% if true %}\n      {% global_options = @type.annotations(BSON::Options) %}\n      {% camelize = global_options.reduce(false) do |_, a|\n  a[:camelize]\nend %}\n      {% for ivar in @type.instance_vars %}\n        {% ann = ivar.annotation(BSON::Field) %}\n        {% typ = ivar.type.union_types.select do |t|\n  t != Nil\nend[0] %}\n        {% key = ivar.name %}\n        {% bson_key = ann ? ann[:key].id : camelize ? ivar.name.camelcase(lower: camelize == \"lower\") : ivar.name %}\n        {% if ann && ann[:ignore] %}{% else %}\n          {% getter_names = [key + \"?\", key, key + \"!\"] %}\n          {% getter_name = getter_names.find do |name|\n  @type.has_method?(name)\nend %}\n          {% if getter_name %}\n            {% if ann && ann[:emit_null] %}{% else %}\n              unless self.{{ getter_name }}.nil?\n            {% end %}\n              {% if typ.has_method?(:to_bson) %}\n                bson[\"{{ bson_key }}\"] = self.{{ getter_name }}.try &.to_bson\n              {% else %}\n                bson[\"{{ bson_key }}\"] = self.{{ getter_name }}\n              {% end %}\n            {% if ann && ann[:emit_null] %}{% else %}\n              end\n            {% end %}\n          {% end %}\n        {% end %}\n      {% end %}\n      {% end %}\nbson\n"}}]},{"html_id":"dynfork/DynFork/Migration/Monitor","path":"DynFork/Migration/Monitor.html","kind":"struct","full_name":"DynFork::Migration::Monitor","name":"Monitor","abstract":false,"superclass":{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dynfork/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/migration.cr","line_number":24,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/migration.cr#L24"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"dynfork/DynFork/Migration","kind":"module","full_name":"DynFork::Migration","name":"Migration"},"doc":"Monitoring and update the database state for the application.","summary":"<p>Monitoring and update the database state for the application.</p>","constructors":[{"html_id":"new(app_name:String,unique_app_key:String,mongo_client:Mongo::Client,database_name:String=\"\")-class-method","name":"new","abstract":false,"args":[{"name":"app_name","external_name":"app_name","restriction":"String"},{"name":"unique_app_key","external_name":"unique_app_key","restriction":"String"},{"name":"mongo_client","external_name":"mongo_client","restriction":"Mongo::Client"},{"name":"database_name","default_value":"\"\"","external_name":"database_name","restriction":"String"}],"args_string":"(app_name : String, unique_app_key : String, mongo_client : Mongo::Client, database_name : String = \"\")","args_html":"(app_name : String, unique_app_key : String, mongo_client : Mongo::Client, database_name : String = <span class=\"s\">&quot;&quot;</span>)","location":{"filename":"src/dynfork/migration.cr","line_number":25,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/migration.cr#L25"},"def":{"name":"new","args":[{"name":"app_name","external_name":"app_name","restriction":"String"},{"name":"unique_app_key","external_name":"unique_app_key","restriction":"String"},{"name":"mongo_client","external_name":"mongo_client","restriction":"Mongo::Client"},{"name":"database_name","default_value":"\"\"","external_name":"database_name","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(app_name, unique_app_key, mongo_client, database_name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"migrat:Nil-instance-method","name":"migrat","doc":"Run migration process.\n<br>\n1) Update the state of Models in the super collection.\n<br>\n2) Add models states to the super collection if missing.\n<br>\n3) Check the changes in the models and (if necessary) apply to the database.\n<br>\n4) Delete data for non-existent Models from a\nsuper collection and delete collections associated with those Models.","summary":"<p>Run migration process.</p>","abstract":false,"location":{"filename":"src/dynfork/migration.cr","line_number":91,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/migration.cr#L91"},"def":{"name":"migrat","return_type":"Nil","visibility":"Public","body":"model_list = DynFork::Model.subclasses\nmodel_list.each do |model_class|\n  model_class.new\nend\nmodel_list.select! do |model_class|\n  model_class.meta[:\"migrat_model?\"]\nend\nif model_list.empty?\n  raise(DynFork::Errors::Panic.new(\"No Models for Migration!\"))\nend\nself.refresh\ndatabase : Mongo::Database = DynFork::Globals.mongo_database\nmodel_list.each do |model_class|\n  metadata : DynFork::Globals::CacheMetaDataType = model_class.meta\n  super_collection : Mongo::Collection = database[DynFork::Globals.super_collection_name]\n  model_state : DynFork::Migration::ModelState = (document = super_collection.find_one(filter: {collection_name: metadata[:collection_name]})\n  if !document.nil?\n    m_state = DynFork::Migration::ModelState.from_bson(document)\n    m_state.model_exists = true\n    m_state\n  else\n    m_state = DynFork::Migration::ModelState.new(collection_name: metadata[:collection_name], field_name_and_type_list: metadata[:field_name_and_type_list], data_dynamic_fields: metadata[:data_dynamic_fields], model_exists: true)\n    super_collection.insert_one(m_state.to_bson)\n    database.command(Mongo::Commands::Create, name: m_state.collection_name)\n    m_state\n  end)\n  if model_state.field_name_and_type_list != metadata[:field_name_and_type_list]\n    new_fields = Array(String).new\n    metadata[:field_name_and_type_list].each do |field_name, field_type|\n      old_field_type : String | ::Nil = model_state.field_name_and_type_list[field_name]?\n      if old_field_type.nil? || (old_field_type != field_type)\n        new_fields << field_name\n      end\n    end\n    model_collection : Mongo::Collection = database[metadata[:collection_name]]\n    cursor : Mongo::Cursor = model_collection.find\n    cursor.each do |doc|\n      new_fields.each do |field_name|\n        if field_type = metadata[:field_name_and_type_list][field_name]\n          if field_type == \"FileField\"\n            file = DynFork::Globals::FileData.new\n            file.delete = true\n            doc[field_name] = file\n          else\n            if field_type == \"ImageField\"\n              img = DynFork::Globals::ImageData.new\n              img.delete = true\n              doc[field_name] = img\n            else\n              doc[field_name] = nil\n            end\n          end\n        end\n      end\n      fresh_model = model_class.new\n      fresh_model.refrash_fields(pointerof(doc))\n      output_data : DynFork::Globals::OutputData = fresh_model.check(collection_ptr: pointerof(model_collection), \"save?\": true)\n      if output_data.valid?\n        data : Hash(String, DynFork::Globals::ResultMapType) = output_data.data\n        doc_h = doc.to_h\n        metadata[:field_name_and_type_list].each do |field_name, field_type|\n          if (field_type == \"PasswordField\") && (model_state.field_name_and_type_list[field_name]? == \"PasswordField\")\n            if !(value = doc_h[field_name]?).nil?\n              data[field_name] = value.as(String)\n            end\n          end\n        end\n        data[\"updated_at\"] = Time.utc\n        model_collection.replace_one(filter: {_id: data[\"_id\"]}, replacement: data)\n      else\n        puts((\"\\n!!!>MIGRATION<!!!\".colorize.fore(:red)).mode(:bold))\n        fresh_model.print_err\n        raise(\"\")\n      end\n    end\n  end\n  model_state.data_dynamic_fields.each do |field_name, choices_json|\n    if field_type = metadata[:field_name_and_type_list][field_name]?\n      if (metadata[:data_dynamic_fields].has_key?(field_name)) && (model_state.field_name_and_type_list[field_name] == field_type)\n        metadata[:data_dynamic_fields][field_name] = choices_json\n      end\n    end\n  end\n  model_state.data_dynamic_fields = metadata[:data_dynamic_fields]\n  model_state.field_name_and_type_list = metadata[:field_name_and_type_list]\n  super_collection.replace_one(filter: {collection_name: model_state.collection_name}, replacement: model_state.to_bson)\nend\nself.napalm\nmodel_list.each do |model_class|\n  model_class.indexing\n  if fixture_name = model_class.meta[:fixture_name]\n    collection = DynFork::Globals.mongo_database[model_class.meta[:collection_name]]\n    if collection.estimated_document_count == 0\n      curr_model = model_class.new\n      curr_model.apply_fixture(fixture_name: fixture_name, collection_ptr: pointerof(collection))\n    end\n  end\nend\n"}}]}]},{"html_id":"dynfork/DynFork/Model","path":"DynFork/Model.html","kind":"struct","full_name":"DynFork::Model","name":"Model","abstract":true,"superclass":{"html_id":"dynfork/DynFork/Extra","kind":"struct","full_name":"DynFork::Extra","name":"Extra"},"ancestors":[{"html_id":"dynfork/DynFork/QPaladins","kind":"module","full_name":"DynFork::QPaladins","name":"QPaladins"},{"html_id":"dynfork/DynFork/QPaladins/Fixtures","kind":"module","full_name":"DynFork::QPaladins::Fixtures","name":"Fixtures"},{"html_id":"dynfork/DynFork/QPaladins/Save","kind":"module","full_name":"DynFork::QPaladins::Save","name":"Save"},{"html_id":"dynfork/DynFork/QPaladins/Password","kind":"module","full_name":"DynFork::QPaladins::Password","name":"Password"},{"html_id":"dynfork/DynFork/QPaladins/Check","kind":"module","full_name":"DynFork::QPaladins::Check","name":"Check"},{"html_id":"dynfork/DynFork/QPaladins/Groups","kind":"module","full_name":"DynFork::QPaladins::Groups","name":"Groups"},{"html_id":"dynfork/DynFork/QPaladins/Caching","kind":"module","full_name":"DynFork::QPaladins::Caching","name":"Caching"},{"html_id":"dynfork/DynFork/QPaladins/Tools","kind":"module","full_name":"DynFork::QPaladins::Tools","name":"Tools"},{"html_id":"dynfork/DynFork/Globals/Date","kind":"module","full_name":"DynFork::Globals::Date","name":"Date"},{"html_id":"dynfork/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"dynfork/DynFork/Extra","kind":"struct","full_name":"DynFork::Extra","name":"Extra"},{"html_id":"dynfork/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"dynfork/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"dynfork/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/dynfork/model.cr","line_number":63,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/model.cr#L63"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"dynfork/DynFork/Globals/Date","kind":"module","full_name":"DynFork::Globals::Date","name":"Date"},{"html_id":"dynfork/DynFork/QPaladins","kind":"module","full_name":"DynFork::QPaladins","name":"QPaladins"},{"html_id":"dynfork/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"}],"extended_modules":[{"html_id":"dynfork/DynFork/QCommons","kind":"module","full_name":"DynFork::QCommons","name":"QCommons"}],"namespace":{"html_id":"dynfork/DynFork","kind":"module","full_name":"DynFork","name":"DynFork"},"doc":"Abstraction for converting Crystal structures into DynFork Models.\n\nSimple example:\n```\n@[DynFork::Meta(service_name: \"Accounts\")]\nstruct User < DynFork::Model\n  getter username = DynFork::Fields::TextField.new\n  getter birthday = DynFork::Fields::DateField.new\nend\n```\n\nExtended example:\n```\n@[DynFork::Meta(\n  service_name: \"Accounts\",\n  delete_doc?: false,\n)]\nstruct User < DynFork::Model\n  getter username = DynFork::Fields::TextField.new(\n    label: \"Username\",\n    maxlength: 150,\n    minlength: 1,\n    regex: \"^[a-zA-Z0-9_@.+]$\",\n    regex_err_msg: \"Allowed chars: a-z A-Z 0-9 _ @ . +\",\n    required: true,\n    unique: true\n  )\n  getter email = DynFork::Fields::EmailField.new(\n    label: \"E-mail\",\n    maxlength: 320,\n    required: true,\n    unique: true\n  )\n  getter birthday = DynFork::Fields::DateField.new(\n    label: \"Birthday\",\n  )\n  getter slug = DynFork::Fields::SlugField.new(\n    label: \"Slug\",\n    slug_sources: [\"hash\", \"username\"]\n  )\n  getter password = DynFork::Fields::PasswordField.new(\n    label: \"Password\",\n  )\n  # Do not save the value of this field to the database.\n  # This field is for verification purposes only.\n  getter confirm_password = DynFork::Fields::PasswordField.new(\n    label: \"Confirm password\",\n    ignored: true\n  )\n  getter active = DynFork::Fields::BoolField.new(\n    label: \"is active?\",\n    default: true\n  )\nend\n```\n","summary":"<p>Abstraction for converting Crystal structures into DynFork Models.</p>","class_methods":[{"html_id":"full_model_name:String-class-method","name":"full_model_name","doc":"Get full Model name = ModuleName::StructureName.\n<br>\n**Examples:** _Accounts::User | Accounts::UserProfile | Cars::ElectricCar | etc ..._","summary":"<p>Get full Model name = ModuleName::StructureName.</p>","abstract":false,"location":{"filename":"src/dynfork/model.cr","line_number":87,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/model.cr#L87"},"def":{"name":"full_model_name","return_type":"String","visibility":"Public","body":"@@full_model_name"}},{"html_id":"meta:DynFork::Globals::CacheMetaDataType|Nil-class-method","name":"meta","doc":"Metadata cache.","summary":"<p>Metadata cache.</p>","abstract":false,"location":{"filename":"src/dynfork/model.cr","line_number":89,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/model.cr#L89"},"def":{"name":"meta","return_type":"DynFork::Globals::CacheMetaDataType | ::Nil","visibility":"Public","body":"if (value = @@meta).nil?\n  ::raise(::NilAssertionError.new(\"DynFork::Model.meta cannot be nil\"))\nelse\n  value\nend"}},{"html_id":"meta?:DynFork::Globals::CacheMetaDataType|Nil|Nil-class-method","name":"meta?","doc":"Metadata cache.","summary":"<p>Metadata cache.</p>","abstract":false,"location":{"filename":"src/dynfork/model.cr","line_number":89,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/model.cr#L89"},"def":{"name":"meta?","return_type":"DynFork::Globals::CacheMetaDataType | ::Nil | ::Nil","visibility":"Public","body":"@@meta"}},{"html_id":"subclasses-class-method","name":"subclasses","doc":"Get a list of Models.","summary":"<p>Get a list of Models.</p>","abstract":false,"location":{"filename":"src/dynfork/model.cr","line_number":122,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/model.cr#L122"},"def":{"name":"subclasses","visibility":"Public","body":"{{ @type.subclasses }}"}}],"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/dynfork/model.cr","line_number":64,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/model.cr#L64"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}},{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/dynfork/model.cr","line_number":91,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/model.cr#L91"},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"created_at:DynFork::Fields::DateTimeField-instance-method","name":"created_at","doc":"Field for the date and time the document was created.\n<br>\n**Examples:** `1970-01-01T00:00:00`","summary":"<p>Field for the date and time the document was created.</p>","abstract":false,"location":{"filename":"src/dynfork/model.cr","line_number":77,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/model.cr#L77"},"def":{"name":"created_at","visibility":"Public","body":"@created_at"}},{"html_id":"hash:DynFork::Fields::HashField-instance-method","name":"hash","doc":"Field for the document identifier.\n<br>\n**Examples:** `507c7f79bcf86cd7994f6c0e`","summary":"<p>Field for the document identifier.</p>","abstract":false,"location":{"filename":"src/dynfork/model.cr","line_number":72,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/model.cr#L72"},"def":{"name":"hash","visibility":"Public","body":"@hash"}},{"html_id":"object_id:BSON::ObjectId|Nil-instance-method","name":"object_id","doc":"Get ObjectId from hash field.","summary":"<p>Get ObjectId from hash field.</p>","abstract":false,"location":{"filename":"src/dynfork/model.cr","line_number":114,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/model.cr#L114"},"def":{"name":"object_id","return_type":"BSON::ObjectId | ::Nil","visibility":"Public","body":"if value : String | ::Nil = @hash.value?.presence\n  return BSON::ObjectId.new(value.not_nil!)\nend\nnil\n"}},{"html_id":"updated_at:DynFork::Fields::DateTimeField-instance-method","name":"updated_at","doc":"Field for the date and time the document was updated.\n<br>\n**Examples:** `1970-01-01T00:00:00`","summary":"<p>Field for the date and time the document was updated.</p>","abstract":false,"location":{"filename":"src/dynfork/model.cr","line_number":82,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/model.cr#L82"},"def":{"name":"updated_at","visibility":"Public","body":"@updated_at"}}]},{"html_id":"dynfork/DynFork/QCommons","path":"DynFork/QCommons.html","kind":"module","full_name":"DynFork::QCommons","name":"QCommons","abstract":false,"ancestors":[{"html_id":"dynfork/DynFork/QCommons/Indexes","kind":"module","full_name":"DynFork::QCommons::Indexes","name":"Indexes"},{"html_id":"dynfork/DynFork/QCommons/One","kind":"module","full_name":"DynFork::QCommons::One","name":"One"},{"html_id":"dynfork/DynFork/QCommons/Many","kind":"module","full_name":"DynFork::QCommons::Many","name":"Many"},{"html_id":"dynfork/DynFork/QCommons/General","kind":"module","full_name":"DynFork::QCommons::General","name":"General"},{"html_id":"dynfork/DynFork/QCommons/Converter","kind":"module","full_name":"DynFork::QCommons::Converter","name":"Converter"},{"html_id":"dynfork/DynFork/QCommons/UnitsManagement","kind":"module","full_name":"DynFork::QCommons::UnitsManagement","name":"UnitsManagement"}],"locations":[{"filename":"src/dynfork/commons/commons.cr","line_number":9,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/commons/commons.cr#L9"},{"filename":"src/dynfork/commons/unit.cr","line_number":3,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/commons/unit.cr#L3"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"dynfork/DynFork/QCommons/Converter","kind":"module","full_name":"DynFork::QCommons::Converter","name":"Converter"},{"html_id":"dynfork/DynFork/QCommons/General","kind":"module","full_name":"DynFork::QCommons::General","name":"General"},{"html_id":"dynfork/DynFork/QCommons/Indexes","kind":"module","full_name":"DynFork::QCommons::Indexes","name":"Indexes"},{"html_id":"dynfork/DynFork/QCommons/Many","kind":"module","full_name":"DynFork::QCommons::Many","name":"Many"},{"html_id":"dynfork/DynFork/QCommons/One","kind":"module","full_name":"DynFork::QCommons::One","name":"One"},{"html_id":"dynfork/DynFork/QCommons/UnitsManagement","kind":"module","full_name":"DynFork::QCommons::UnitsManagement","name":"UnitsManagement"}],"namespace":{"html_id":"dynfork/DynFork","kind":"module","full_name":"DynFork","name":"DynFork"},"doc":"Commons - Model class methods.","summary":"<p>Commons - Model class methods.</p>","types":[{"html_id":"dynfork/DynFork/QCommons/Converter","path":"DynFork/QCommons/Converter.html","kind":"module","full_name":"DynFork::QCommons::Converter","name":"Converter","abstract":false,"locations":[{"filename":"src/dynfork/commons/converter.cr","line_number":2,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/commons/converter.cr#L2"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"extended_modules":[{"html_id":"dynfork/DynFork/QCommons/Converter","kind":"module","full_name":"DynFork::QCommons::Converter","name":"Converter"}],"including_types":[{"html_id":"dynfork/DynFork/QCommons","kind":"module","full_name":"DynFork::QCommons","name":"QCommons"}],"namespace":{"html_id":"dynfork/DynFork/QCommons","kind":"module","full_name":"DynFork::QCommons","name":"QCommons"},"doc":"Methods for obtaining clean data from documents.","summary":"<p>Methods for obtaining clean data from documents.</p>","instance_methods":[{"html_id":"document_to_hash(doc_ptr:Pointer(BSON),field_name_params_list_ptr:Pointer(Hash(String,NamedTuple(type:String,group:UInt8)))):Hash(String,DynFork::Globals::FieldValueTypes)-instance-method","name":"document_to_hash","doc":"Get clean data from a document, as a Hash object.","summary":"<p>Get clean data from a document, as a Hash object.</p>","abstract":false,"args":[{"name":"doc_ptr","external_name":"doc_ptr","restriction":"Pointer(BSON)"},{"name":"field_name_params_list_ptr","external_name":"field_name_params_list_ptr","restriction":"Pointer(Hash(String, NamedTuple(type: String, group: UInt8)))"}],"args_string":"(doc_ptr : Pointer(BSON), field_name_params_list_ptr : Pointer(Hash(String, NamedTuple(type: String, group: UInt8)))) : Hash(String, DynFork::Globals::FieldValueTypes)","args_html":"(doc_ptr : Pointer(BSON), field_name_params_list_ptr : Pointer(Hash(String, NamedTuple(type: String, group: UInt8)))) : Hash(String, <a href=\"../../DynFork/Globals/Aliases/FieldValueTypes.html\">DynFork::Globals::FieldValueTypes</a>)","location":{"filename":"src/dynfork/commons/converter.cr","line_number":6,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/commons/converter.cr#L6"},"def":{"name":"document_to_hash","args":[{"name":"doc_ptr","external_name":"doc_ptr","restriction":"Pointer(BSON)"},{"name":"field_name_params_list_ptr","external_name":"field_name_params_list_ptr","restriction":"Pointer(Hash(String, NamedTuple(type: String, group: UInt8)))"}],"return_type":"Hash(String, DynFork::Globals::FieldValueTypes)","visibility":"Public","body":"doc_hash = doc_ptr.value.to_h\nresult = Hash(String, DynFork::Globals::FieldValueTypes).new\nresult[\"hash\"] = (doc_hash[\"_id\"].as(BSON::ObjectId)).to_s\nfield_type : String = \"\"\nfield_name_params_list_ptr.value.each do |field_name, field_params|\n  if !(value = doc_hash[field_name]).nil?\n    field_type = field_params[:type]\n    case field_params[:group]\n    when 1\n      if field_type != \"PasswordField\"\n        result[field_name] = value.as(String)\n      else\n        result[field_name] = nil\n      end\n    when 2\n      if field_type.includes?(\"Time\")\n        result[field_name] = (value.as(Time)).to_s(\"%FT%H:%M:%S\")\n      else\n        result[field_name] = (value.as(Time)).to_s(\"%F\")\n      end\n    when 3\n      if field_type.includes?(\"Text\")\n        if field_type.includes?(\"Mult\")\n          result[field_name] = (value.as(Array(BSON::RecursiveValue))).map do |item|\n            item.as(String)\n          end\n        else\n          result[field_name] = value.as(String)\n        end\n      else\n        if field_type.includes?(\"I64\")\n          if field_type.includes?(\"Mult\")\n            result[field_name] = (value.as(Array(BSON::RecursiveValue))).map do |item|\n              item.as(Int64)\n            end\n          else\n            result[field_name] = value.as(Int64)\n          end\n        else\n          if field_type.includes?(\"F64\")\n            if field_type.includes?(\"Mult\")\n              result[field_name] = (value.as(Array(BSON::RecursiveValue))).map do |item|\n                item.as(Float64)\n              end\n            else\n              result[field_name] = value.as(Float64)\n            end\n          end\n        end\n      end\n    when 4\n      bson = BSON.new\n      (value.as(Hash(String, BSON::RecursiveValue))).each do |key, val|\n        bson[key] = val\n      end\n      result[field_name] = DynFork::Globals::FileData.from_bson(bson)\n    when 5\n      bson = BSON.new\n      (value.as(Hash(String, BSON::RecursiveValue))).each do |key, val|\n        bson[key] = val\n      end\n      result[field_name] = DynFork::Globals::ImageData.from_bson(bson)\n    when 6\n      result[field_name] = value.as(Int64)\n    when 7\n      result[field_name] = value.as(Float64)\n    when 8\n      result[field_name] = value.as(Bool)\n    when 9\n      result[field_name] = value.as(String)\n    else\n      raise(DynFork::Errors::Model::InvalidGroupNumber.new(@@full_model_name, field_name))\n    end\n  else\n    result[field_name] = nil\n  end\nend\nresult\n"}}]},{"html_id":"dynfork/DynFork/QCommons/General","path":"DynFork/QCommons/General.html","kind":"module","full_name":"DynFork::QCommons::General","name":"General","abstract":false,"locations":[{"filename":"src/dynfork/commons/general.cr","line_number":2,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/commons/general.cr#L2"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"extended_modules":[{"html_id":"dynfork/DynFork/QCommons/General","kind":"module","full_name":"DynFork::QCommons::General","name":"General"}],"including_types":[{"html_id":"dynfork/DynFork/QCommons","kind":"module","full_name":"DynFork::QCommons","name":"QCommons"}],"namespace":{"html_id":"dynfork/DynFork/QCommons","kind":"module","full_name":"DynFork::QCommons","name":"QCommons"},"doc":"General purpose query methods.","summary":"<p>General purpose query methods.</p>","instance_methods":[{"html_id":"aggregate(pipeline:Array,*,allow_disk_use:Bool|Nil=nil,batch_size:Int32|Nil=nil,max_time_ms:Int64|Nil=nil,bypass_document_validation:Bool|Nil=nil,collation:Mongo::Collation|Nil=nil,hint:String|Hash|NamedTuple|Nil=nil,comment:String|Nil=nil,read_concern:Mongo::ReadConcern|Nil=nil,write_concern:Mongo::WriteConcern|Nil=nil,read_preference:Mongo::ReadPreference|Nil=nil,session:Mongo::Session::ClientSession|Nil=nil):Mongo::Cursor|Nil-instance-method","name":"aggregate","doc":"Runs an aggregation framework pipeline.\nNOTE: For more details, please check the official <a href=\"https://docs.mongodb.com/manual/reference/command/aggregate/\" target=\"_blank\">documentation</a>.\nNOTE: For more details, please check the cryomongo <a href=\"https://elbywan.github.io/cryomongo/Mongo/Collection.html\" target=\"_blank\">documentation</a>.\n\nExample:\n```\n# Perform an aggregation pipeline query\ncursor = ModelName.aggregate([\n  {\"$match\": { status: \"available\" }}\n  {\"$limit\": 5},\n])\ncursor.try &.each { |bson| puts bson.to_json }\n```\n","summary":"<p>Runs an aggregation framework pipeline.</p>","abstract":false,"args":[{"name":"pipeline","external_name":"pipeline","restriction":"Array"},{"name":"","external_name":"","restriction":""},{"name":"allow_disk_use","default_value":"nil","external_name":"allow_disk_use","restriction":"Bool | ::Nil"},{"name":"batch_size","default_value":"nil","external_name":"batch_size","restriction":"Int32 | ::Nil"},{"name":"max_time_ms","default_value":"nil","external_name":"max_time_ms","restriction":"Int64 | ::Nil"},{"name":"bypass_document_validation","default_value":"nil","external_name":"bypass_document_validation","restriction":"Bool | ::Nil"},{"name":"collation","default_value":"nil","external_name":"collation","restriction":"Mongo::Collation | ::Nil"},{"name":"hint","default_value":"nil","external_name":"hint","restriction":"String | Hash | NamedTuple | ::Nil"},{"name":"comment","default_value":"nil","external_name":"comment","restriction":"String | ::Nil"},{"name":"read_concern","default_value":"nil","external_name":"read_concern","restriction":"Mongo::ReadConcern | ::Nil"},{"name":"write_concern","default_value":"nil","external_name":"write_concern","restriction":"Mongo::WriteConcern | ::Nil"},{"name":"read_preference","default_value":"nil","external_name":"read_preference","restriction":"Mongo::ReadPreference | ::Nil"},{"name":"session","default_value":"nil","external_name":"session","restriction":"Mongo::Session::ClientSession | ::Nil"}],"args_string":"(pipeline : Array, *, allow_disk_use : Bool | Nil = nil, batch_size : Int32 | Nil = nil, max_time_ms : Int64 | Nil = nil, bypass_document_validation : Bool | Nil = nil, collation : Mongo::Collation | Nil = nil, hint : String | Hash | NamedTuple | Nil = nil, comment : String | Nil = nil, read_concern : Mongo::ReadConcern | Nil = nil, write_concern : Mongo::WriteConcern | Nil = nil, read_preference : Mongo::ReadPreference | Nil = nil, session : Mongo::Session::ClientSession | Nil = nil) : Mongo::Cursor | Nil","args_html":"(pipeline : Array, *, allow_disk_use : Bool | Nil = <span class=\"n\">nil</span>, batch_size : Int32 | Nil = <span class=\"n\">nil</span>, max_time_ms : Int64 | Nil = <span class=\"n\">nil</span>, bypass_document_validation : Bool | Nil = <span class=\"n\">nil</span>, collation : Mongo::Collation | Nil = <span class=\"n\">nil</span>, hint : String | Hash | NamedTuple | Nil = <span class=\"n\">nil</span>, comment : String | Nil = <span class=\"n\">nil</span>, read_concern : Mongo::ReadConcern | Nil = <span class=\"n\">nil</span>, write_concern : Mongo::WriteConcern | Nil = <span class=\"n\">nil</span>, read_preference : Mongo::ReadPreference | Nil = <span class=\"n\">nil</span>, session : Mongo::Session::ClientSession | Nil = <span class=\"n\">nil</span>) : Mongo::Cursor | Nil","location":{"filename":"src/dynfork/commons/general.cr","line_number":19,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/commons/general.cr#L19"},"def":{"name":"aggregate","args":[{"name":"pipeline","external_name":"pipeline","restriction":"Array"},{"name":"","external_name":"","restriction":""},{"name":"allow_disk_use","default_value":"nil","external_name":"allow_disk_use","restriction":"Bool | ::Nil"},{"name":"batch_size","default_value":"nil","external_name":"batch_size","restriction":"Int32 | ::Nil"},{"name":"max_time_ms","default_value":"nil","external_name":"max_time_ms","restriction":"Int64 | ::Nil"},{"name":"bypass_document_validation","default_value":"nil","external_name":"bypass_document_validation","restriction":"Bool | ::Nil"},{"name":"collation","default_value":"nil","external_name":"collation","restriction":"Mongo::Collation | ::Nil"},{"name":"hint","default_value":"nil","external_name":"hint","restriction":"String | Hash | NamedTuple | ::Nil"},{"name":"comment","default_value":"nil","external_name":"comment","restriction":"String | ::Nil"},{"name":"read_concern","default_value":"nil","external_name":"read_concern","restriction":"Mongo::ReadConcern | ::Nil"},{"name":"write_concern","default_value":"nil","external_name":"write_concern","restriction":"Mongo::WriteConcern | ::Nil"},{"name":"read_preference","default_value":"nil","external_name":"read_preference","restriction":"Mongo::ReadPreference | ::Nil"},{"name":"session","default_value":"nil","external_name":"session","restriction":"Mongo::Session::ClientSession | ::Nil"}],"splat_index":1,"return_type":"Mongo::Cursor | ::Nil","visibility":"Public","body":"if @@meta.not_nil![:\"migrat_model?\"]\nelse\n  raise(DynFork::Errors::Panic.new(\"Model : `#{@@full_model_name}` > Param: `migrat_model?` => \" + \"This Model is not migrated to the database!\"))\nend\ncollection : Mongo::Collection = DynFork::Globals.mongo_database[@@meta.not_nil![:collection_name]]\ncollection.aggregate(pipeline: pipeline, allow_disk_use: allow_disk_use, batch_size: batch_size, max_time_ms: max_time_ms, bypass_document_validation: bypass_document_validation, collation: collation, hint: hint, comment: comment, read_concern: read_concern, write_concern: write_concern, read_preference: read_preference, session: session)\n"}},{"html_id":"bulk(ordered:Bool=true,session:Mongo::Session::ClientSession|Nil=nil):Mongo::Bulk-instance-method","name":"bulk","doc":"Create a Mongo::Bulk instance.\nNOTE: A bulk operations builder.\nNOTE: For more details, please check the cryomongo <a href=\"https://elbywan.github.io/cryomongo/Mongo/Bulk.html\" target=\"_blank\">documentation</a>.\n\nExample:\n```\nbulk = ModelName.bulk(ordered: true)\n# Then, operations can be added…\n500.times { |idx|\n  bulk.insert_one({number: idx})\n  bulk.delete_many({number: {\"$lt\": 450}})\n}\n# …and they will be performed once the bulk gets executed.\nbulk_result = bulk.execute(write_concern: Mongo::WriteConcern.new(w: 1))\npp bulk_result\n```\n","summary":"<p>Create a Mongo::Bulk instance.</p>","abstract":false,"args":[{"name":"ordered","default_value":"true","external_name":"ordered","restriction":"Bool"},{"name":"session","default_value":"nil","external_name":"session","restriction":"Mongo::Session::ClientSession | ::Nil"}],"args_string":"(ordered : Bool = true, session : Mongo::Session::ClientSession | Nil = nil) : Mongo::Bulk","args_html":"(ordered : Bool = <span class=\"n\">true</span>, session : Mongo::Session::ClientSession | Nil = <span class=\"n\">nil</span>) : Mongo::Bulk","location":{"filename":"src/dynfork/commons/general.cr","line_number":243,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/commons/general.cr#L243"},"def":{"name":"bulk","args":[{"name":"ordered","default_value":"true","external_name":"ordered","restriction":"Bool"},{"name":"session","default_value":"nil","external_name":"session","restriction":"Mongo::Session::ClientSession | ::Nil"}],"return_type":"Mongo::Bulk","visibility":"Public","body":"if @@meta.not_nil![:\"migrat_model?\"]\nelse\n  raise(DynFork::Errors::Panic.new(\"Model : `#{@@full_model_name}` > Param: `migrat_model?` => \" + \"This Model is not migrated to the database!\"))\nend\ncollection : Mongo::Collection = DynFork::Globals.mongo_database[@@meta.not_nil![:collection_name]]\ncollection.bulk(ordered: ordered, session: session)\n"}},{"html_id":"bulk_write(requests:Array(Mongo::Bulk::WriteModel),*,ordered:Bool,bypass_document_validation:Bool|Nil=nil,session:Mongo::Session::ClientSession|Nil=nil):Mongo::Bulk::WriteResult-instance-method","name":"bulk_write","doc":"Executes multiple write operations.\nAn error will be raised if the requests parameter is empty.\nNOTE: For more details, please check the official <a href=\"https://github.com/mongodb/specifications/blob/master/source/driver-bulk-update.rst\" target=\"_blank\">documentation</a>.\nNOTE: For more details, please check the cryomongo <a href=\"https://elbywan.github.io/cryomongo/Mongo/Collection.html\" target=\"_blank\">documentation</a>.","summary":"<p>Executes multiple write operations.</p>","abstract":false,"args":[{"name":"requests","external_name":"requests","restriction":"Array(Mongo::Bulk::WriteModel)"},{"name":"","external_name":"","restriction":""},{"name":"ordered","external_name":"ordered","restriction":"Bool"},{"name":"bypass_document_validation","default_value":"nil","external_name":"bypass_document_validation","restriction":"Bool | ::Nil"},{"name":"session","default_value":"nil","external_name":"session","restriction":"Mongo::Session::ClientSession | ::Nil"}],"args_string":"(requests : Array(Mongo::Bulk::WriteModel), *, ordered : Bool, bypass_document_validation : Bool | Nil = nil, session : Mongo::Session::ClientSession | Nil = nil) : Mongo::Bulk::WriteResult","args_html":"(requests : Array(Mongo::Bulk::WriteModel), *, ordered : Bool, bypass_document_validation : Bool | Nil = <span class=\"n\">nil</span>, session : Mongo::Session::ClientSession | Nil = <span class=\"n\">nil</span>) : Mongo::Bulk::WriteResult","location":{"filename":"src/dynfork/commons/general.cr","line_number":268,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/commons/general.cr#L268"},"def":{"name":"bulk_write","args":[{"name":"requests","external_name":"requests","restriction":"Array(Mongo::Bulk::WriteModel)"},{"name":"","external_name":"","restriction":""},{"name":"ordered","external_name":"ordered","restriction":"Bool"},{"name":"bypass_document_validation","default_value":"nil","external_name":"bypass_document_validation","restriction":"Bool | ::Nil"},{"name":"session","default_value":"nil","external_name":"session","restriction":"Mongo::Session::ClientSession | ::Nil"}],"splat_index":1,"return_type":"Mongo::Bulk::WriteResult","visibility":"Public","body":"if @@meta.not_nil![:\"migrat_model?\"]\nelse\n  raise(DynFork::Errors::Panic.new(\"Model : `#{@@full_model_name}` > Param: `migrat_model?` => \" + \"This Model is not migrated to the database!\"))\nend\ncollection : Mongo::Collection = DynFork::Globals.mongo_database[@@meta.not_nil![:collection_name]]\ncollection.bulk_write(requests: requests, ordered: ordered, bypass_document_validation: bypass_document_validation, session: session)\n"}},{"html_id":"collection_name:Mongo::Collection::CollectionKey-instance-method","name":"collection_name","doc":"Get collection name.","summary":"<p>Get collection name.</p>","abstract":false,"location":{"filename":"src/dynfork/commons/general.cr","line_number":188,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/commons/general.cr#L188"},"def":{"name":"collection_name","return_type":"Mongo::Collection::CollectionKey","visibility":"Public","body":"if @@meta.not_nil![:\"migrat_model?\"]\nelse\n  raise(DynFork::Errors::Panic.new(\"Model : `#{@@full_model_name}` > Param: `migrat_model?` => \" + \"This Model is not migrated to the database!\"))\nend\ncollection : Mongo::Collection = DynFork::Globals.mongo_database[@@meta.not_nil![:collection_name]]\ncollection.name\n"}},{"html_id":"count_documents(filter=BSON.new,*,skip:Int32|Nil=nil,limit:Int32|Nil=nil,collation:Mongo::Collation|Nil=nil,hint:String|Hash|NamedTuple|Nil=nil,max_time_ms:Int64|Nil=nil,read_preference:Mongo::ReadPreference|Nil=nil,session:Mongo::Session::ClientSession|Nil=nil):Int32-instance-method","name":"count_documents","doc":"Count the number of documents in a collection that match the given filter.\n<br>\nNote that an empty filter will force a scan of the entire collection.\nNOTE: For a fast count of the total documents in a collection see **estimated_document_count**.\nNOTE: For more details, please check the cryomongo <a href=\"https://elbywan.github.io/cryomongo/Mongo/Collection.html\" target=\"_blank\">documentation</a>.\n\nExample:\n```\n# Documents count\ncounter = ModelName.count_documents({age: {\"$lt\": 18}})\n```\n","summary":"<p>Count the number of documents in a collection that match the given filter.</p>","abstract":false,"args":[{"name":"filter","default_value":"BSON.new","external_name":"filter","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"skip","default_value":"nil","external_name":"skip","restriction":"Int32 | ::Nil"},{"name":"limit","default_value":"nil","external_name":"limit","restriction":"Int32 | ::Nil"},{"name":"collation","default_value":"nil","external_name":"collation","restriction":"Mongo::Collation | ::Nil"},{"name":"hint","default_value":"nil","external_name":"hint","restriction":"String | Hash | NamedTuple | ::Nil"},{"name":"max_time_ms","default_value":"nil","external_name":"max_time_ms","restriction":"Int64 | ::Nil"},{"name":"read_preference","default_value":"nil","external_name":"read_preference","restriction":"Mongo::ReadPreference | ::Nil"},{"name":"session","default_value":"nil","external_name":"session","restriction":"Mongo::Session::ClientSession | ::Nil"}],"args_string":"(filter = BSON.new, *, skip : Int32 | Nil = nil, limit : Int32 | Nil = nil, collation : Mongo::Collation | Nil = nil, hint : String | Hash | NamedTuple | Nil = nil, max_time_ms : Int64 | Nil = nil, read_preference : Mongo::ReadPreference | Nil = nil, session : Mongo::Session::ClientSession | Nil = nil) : Int32","args_html":"(filter = <span class=\"t\">BSON</span>.new, *, skip : Int32 | Nil = <span class=\"n\">nil</span>, limit : Int32 | Nil = <span class=\"n\">nil</span>, collation : Mongo::Collation | Nil = <span class=\"n\">nil</span>, hint : String | Hash | NamedTuple | Nil = <span class=\"n\">nil</span>, max_time_ms : Int64 | Nil = <span class=\"n\">nil</span>, read_preference : Mongo::ReadPreference | Nil = <span class=\"n\">nil</span>, session : Mongo::Session::ClientSession | Nil = <span class=\"n\">nil</span>) : Int32","location":{"filename":"src/dynfork/commons/general.cr","line_number":119,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/commons/general.cr#L119"},"def":{"name":"count_documents","args":[{"name":"filter","default_value":"BSON.new","external_name":"filter","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"skip","default_value":"nil","external_name":"skip","restriction":"Int32 | ::Nil"},{"name":"limit","default_value":"nil","external_name":"limit","restriction":"Int32 | ::Nil"},{"name":"collation","default_value":"nil","external_name":"collation","restriction":"Mongo::Collation | ::Nil"},{"name":"hint","default_value":"nil","external_name":"hint","restriction":"String | Hash | NamedTuple | ::Nil"},{"name":"max_time_ms","default_value":"nil","external_name":"max_time_ms","restriction":"Int64 | ::Nil"},{"name":"read_preference","default_value":"nil","external_name":"read_preference","restriction":"Mongo::ReadPreference | ::Nil"},{"name":"session","default_value":"nil","external_name":"session","restriction":"Mongo::Session::ClientSession | ::Nil"}],"splat_index":1,"return_type":"Int32","visibility":"Public","body":"if @@meta.not_nil![:\"migrat_model?\"]\nelse\n  raise(DynFork::Errors::Panic.new(\"Model : `#{@@full_model_name}` > Param: `migrat_model?` => \" + \"This Model is not migrated to the database!\"))\nend\ncollection : Mongo::Collection = DynFork::Globals.mongo_database[@@meta.not_nil![:collection_name]]\ncollection.count_documents(filter: filter, skip: skip, limit: limit || @@meta.not_nil![:db_query_docs_limit], collation: collation, hint: hint, max_time_ms: max_time_ms, read_preference: read_preference, session: session)\n"}},{"html_id":"distinct(key:String,*,filter=nil,read_concern:Mongo::ReadConcern|Nil=nil,collation:Mongo::Collation|Nil=nil,read_preference:Mongo::ReadPreference|Nil=nil,session:Mongo::Session::ClientSession|Nil=nil):Array-instance-method","name":"distinct","doc":"Finds the distinct values for a specified field across a single collection.\n<br>\nReturns an array of unique values for specified field of collection.\nNOTE: the results are backed by the \"values\" array in the distinct command's result document. This differs from aggregate and find, where results are backed by a cursor.\nNOTE: For more details, please check the official <a href=\"https://docs.mongodb.com/manual/reference/command/distinct/\" target=\"_blank\">documentation</a>.\nNOTE: For more details, please check the cryomongo <a href=\"https://elbywan.github.io/cryomongo/Mongo/Collection.html\" target=\"_blank\">documentation</a>.\n\nExample:\n```\n# Distinct collection values\nvalues = ModelName.distinct(\n  key: \"field\",\n  filter: {age: {\"$gt\": 18}}\n)\n```\n","summary":"<p>Finds the distinct values for a specified field across a single collection.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"filter","default_value":"nil","external_name":"filter","restriction":""},{"name":"read_concern","default_value":"nil","external_name":"read_concern","restriction":"Mongo::ReadConcern | ::Nil"},{"name":"collation","default_value":"nil","external_name":"collation","restriction":"Mongo::Collation | ::Nil"},{"name":"read_preference","default_value":"nil","external_name":"read_preference","restriction":"Mongo::ReadPreference | ::Nil"},{"name":"session","default_value":"nil","external_name":"session","restriction":"Mongo::Session::ClientSession | ::Nil"}],"args_string":"(key : String, *, filter = nil, read_concern : Mongo::ReadConcern | Nil = nil, collation : Mongo::Collation | Nil = nil, read_preference : Mongo::ReadPreference | Nil = nil, session : Mongo::Session::ClientSession | Nil = nil) : Array","args_html":"(key : String, *, filter = <span class=\"n\">nil</span>, read_concern : Mongo::ReadConcern | Nil = <span class=\"n\">nil</span>, collation : Mongo::Collation | Nil = <span class=\"n\">nil</span>, read_preference : Mongo::ReadPreference | Nil = <span class=\"n\">nil</span>, session : Mongo::Session::ClientSession | Nil = <span class=\"n\">nil</span>) : Array","location":{"filename":"src/dynfork/commons/general.cr","line_number":77,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/commons/general.cr#L77"},"def":{"name":"distinct","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"filter","default_value":"nil","external_name":"filter","restriction":""},{"name":"read_concern","default_value":"nil","external_name":"read_concern","restriction":"Mongo::ReadConcern | ::Nil"},{"name":"collation","default_value":"nil","external_name":"collation","restriction":"Mongo::Collation | ::Nil"},{"name":"read_preference","default_value":"nil","external_name":"read_preference","restriction":"Mongo::ReadPreference | ::Nil"},{"name":"session","default_value":"nil","external_name":"session","restriction":"Mongo::Session::ClientSession | ::Nil"}],"splat_index":1,"return_type":"Array","visibility":"Public","body":"if @@meta.not_nil![:\"migrat_model?\"]\nelse\n  raise(DynFork::Errors::Panic.new(\"Model : `#{@@full_model_name}` > Param: `migrat_model?` => \" + \"This Model is not migrated to the database!\"))\nend\ncollection : Mongo::Collection = DynFork::Globals.mongo_database[@@meta.not_nil![:collection_name]]\ncollection.distinct(key: key, filter: filter, read_concern: read_concern, collation: collation, read_preference: read_preference, session: session)\n"}},{"html_id":"estimated_document_count(*,max_time_ms:Int64|Nil=nil,read_preference:Mongo::ReadPreference|Nil=nil,session:Mongo::Session::ClientSession|Nil=nil):Int32-instance-method","name":"estimated_document_count","doc":"Gets an estimate of the count of documents in a collection using collection metadata.\nNOTE: For more details, please check the official <a href=\"https://github.com/mongodb/specifications/blob/master/source/crud/crud.rst#count-api-details\" target=\"_blank\">documentation</a>.\nNOTE: For more details, please check the cryomongo <a href=\"https://elbywan.github.io/cryomongo/Mongo/Collection.html\" target=\"_blank\">documentation</a>.\n\nExample:\n```\n# Estimated count\ncounter = ModelName.estimated_document_count\n```\n","summary":"<p>Gets an estimate of the count of documents in a collection using collection metadata.</p>","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"max_time_ms","default_value":"nil","external_name":"max_time_ms","restriction":"Int64 | ::Nil"},{"name":"read_preference","default_value":"nil","external_name":"read_preference","restriction":"Mongo::ReadPreference | ::Nil"},{"name":"session","default_value":"nil","external_name":"session","restriction":"Mongo::Session::ClientSession | ::Nil"}],"args_string":"(*, max_time_ms : Int64 | Nil = nil, read_preference : Mongo::ReadPreference | Nil = nil, session : Mongo::Session::ClientSession | Nil = nil) : Int32","args_html":"(*, max_time_ms : Int64 | Nil = <span class=\"n\">nil</span>, read_preference : Mongo::ReadPreference | Nil = <span class=\"n\">nil</span>, session : Mongo::Session::ClientSession | Nil = <span class=\"n\">nil</span>) : Int32","location":{"filename":"src/dynfork/commons/general.cr","line_number":163,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/commons/general.cr#L163"},"def":{"name":"estimated_document_count","args":[{"name":"","external_name":"","restriction":""},{"name":"max_time_ms","default_value":"nil","external_name":"max_time_ms","restriction":"Int64 | ::Nil"},{"name":"read_preference","default_value":"nil","external_name":"read_preference","restriction":"Mongo::ReadPreference | ::Nil"},{"name":"session","default_value":"nil","external_name":"session","restriction":"Mongo::Session::ClientSession | ::Nil"}],"splat_index":0,"return_type":"Int32","visibility":"Public","body":"if @@meta.not_nil![:\"migrat_model?\"]\nelse\n  raise(DynFork::Errors::Panic.new(\"Model : `#{@@full_model_name}` > Param: `migrat_model?` => \" + \"This Model is not migrated to the database!\"))\nend\ncollection : Mongo::Collection = DynFork::Globals.mongo_database[@@meta.not_nil![:collection_name]]\ncollection.estimated_document_count(max_time_ms: max_time_ms, read_preference: read_preference, session: session)\n"}},{"html_id":"stats(*,scale:Int32|Nil=nil,session:Mongo::Session::ClientSession|Nil=nil):BSON|Nil-instance-method","name":"stats","doc":"Returns a variety of storage statistics for the collection.\nNOTE: For more details, please check the official <a href=\"https://docs.mongodb.com/manual/reference/command/collStats/\" target=\"_blank\">documentation</a>.","summary":"<p>Returns a variety of storage statistics for the collection.</p>","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"scale","default_value":"nil","external_name":"scale","restriction":"Int32 | ::Nil"},{"name":"session","default_value":"nil","external_name":"session","restriction":"Mongo::Session::ClientSession | ::Nil"}],"args_string":"(*, scale : Int32 | Nil = nil, session : Mongo::Session::ClientSession | Nil = nil) : BSON | Nil","args_html":"(*, scale : Int32 | Nil = <span class=\"n\">nil</span>, session : Mongo::Session::ClientSession | Nil = <span class=\"n\">nil</span>) : BSON | Nil","location":{"filename":"src/dynfork/commons/general.cr","line_number":204,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/commons/general.cr#L204"},"def":{"name":"stats","args":[{"name":"","external_name":"","restriction":""},{"name":"scale","default_value":"nil","external_name":"scale","restriction":"Int32 | ::Nil"},{"name":"session","default_value":"nil","external_name":"session","restriction":"Mongo::Session::ClientSession | ::Nil"}],"splat_index":0,"return_type":"BSON | ::Nil","visibility":"Public","body":"if @@meta.not_nil![:\"migrat_model?\"]\nelse\n  raise(DynFork::Errors::Panic.new(\"Model : `#{@@full_model_name}` > Param: `migrat_model?` => \" + \"This Model is not migrated to the database!\"))\nend\ncollection : Mongo::Collection = DynFork::Globals.mongo_database[@@meta.not_nil![:collection_name]]\ncollection.stats(scale: scale, session: session)\n"}}]},{"html_id":"dynfork/DynFork/QCommons/Indexes","path":"DynFork/QCommons/Indexes.html","kind":"module","full_name":"DynFork::QCommons::Indexes","name":"Indexes","abstract":false,"locations":[{"filename":"src/dynfork/commons/indexes.cr","line_number":2,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/commons/indexes.cr#L2"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"extended_modules":[{"html_id":"dynfork/DynFork/QCommons/Indexes","kind":"module","full_name":"DynFork::QCommons::Indexes","name":"Indexes"}],"including_types":[{"html_id":"dynfork/DynFork/QCommons","kind":"module","full_name":"DynFork::QCommons","name":"QCommons"}],"namespace":{"html_id":"dynfork/DynFork/QCommons","kind":"module","full_name":"DynFork::QCommons","name":"QCommons"},"doc":"Indexing collections.","summary":"<p>Indexing collections.</p>","instance_methods":[{"html_id":"create_index(keys,*,options=NamedTuple.new,commit_quorum:Int32|String|Nil=nil,max_time_ms:Int64|Nil=nil,write_concern:Mongo::WriteConcern|Nil=nil,session:Mongo::Session::ClientSession|Nil=nil):Mongo::Commands::CreateIndexes::Result|Nil-instance-method","name":"create_index","doc":"This is a convenience method for creating a single index.\n<br>\nSee: #create_indexes.\nNOTE: For more details, please check the cryomongo <a href=\"https://elbywan.github.io/cryomongo/Mongo/Collection.html\" target=\"_blank\">documentation</a>.\n\nExample:\n```\n# Create one index without options…\nModelName.create_index(\n  keys: {\n    \"a\": 1,\n    \"b\": -1,\n  }\n)\n# or with options (snake_cased)\nModelName.create_index(\n  keys: {\n    \"a\": 1,\n    \"b\": -1,\n  },\n  options: {\n    unique: true,\n  }\n)\n# and optionally specify the name.\nModelName.create_index(\n  keys: {\n    \"a\": 1,\n    \"b\": -1,\n  },\n  options: {\n    name: \"index_name\",\n  }\n)\n```\n","summary":"<p>This is a convenience method for creating a single index.</p>","abstract":false,"args":[{"name":"keys","external_name":"keys","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"options","default_value":"NamedTuple.new","external_name":"options","restriction":""},{"name":"commit_quorum","default_value":"nil","external_name":"commit_quorum","restriction":"Int32 | String | ::Nil"},{"name":"max_time_ms","default_value":"nil","external_name":"max_time_ms","restriction":"Int64 | ::Nil"},{"name":"write_concern","default_value":"nil","external_name":"write_concern","restriction":"Mongo::WriteConcern | ::Nil"},{"name":"session","default_value":"nil","external_name":"session","restriction":"Mongo::Session::ClientSession | ::Nil"}],"args_string":"(keys, *, options = NamedTuple.new, commit_quorum : Int32 | String | Nil = nil, max_time_ms : Int64 | Nil = nil, write_concern : Mongo::WriteConcern | Nil = nil, session : Mongo::Session::ClientSession | Nil = nil) : Mongo::Commands::CreateIndexes::Result | Nil","args_html":"(keys, *, options = <span class=\"t\">NamedTuple</span>.new, commit_quorum : Int32 | String | Nil = <span class=\"n\">nil</span>, max_time_ms : Int64 | Nil = <span class=\"n\">nil</span>, write_concern : Mongo::WriteConcern | Nil = <span class=\"n\">nil</span>, session : Mongo::Session::ClientSession | Nil = <span class=\"n\">nil</span>) : Mongo::Commands::CreateIndexes::Result | Nil","location":{"filename":"src/dynfork/commons/indexes.cr","line_number":41,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/commons/indexes.cr#L41"},"def":{"name":"create_index","args":[{"name":"keys","external_name":"keys","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"options","default_value":"NamedTuple.new","external_name":"options","restriction":""},{"name":"commit_quorum","default_value":"nil","external_name":"commit_quorum","restriction":"Int32 | String | ::Nil"},{"name":"max_time_ms","default_value":"nil","external_name":"max_time_ms","restriction":"Int64 | ::Nil"},{"name":"write_concern","default_value":"nil","external_name":"write_concern","restriction":"Mongo::WriteConcern | ::Nil"},{"name":"session","default_value":"nil","external_name":"session","restriction":"Mongo::Session::ClientSession | ::Nil"}],"splat_index":1,"return_type":"Mongo::Commands::CreateIndexes::Result | ::Nil","visibility":"Public","body":"if @@meta.not_nil![:\"migrat_model?\"]\nelse\n  raise(DynFork::Errors::Panic.new(\"Model : `#{@@full_model_name}` > Param: `migrat_model?` => \" + \"This Model is not migrated to the database!\"))\nend\ncollection : Mongo::Collection = DynFork::Globals.mongo_database[@@meta.not_nil![:collection_name]]\nresult = collection.create_index(keys: keys, options: options, commit_quorum: commit_quorum, max_time_ms: max_time_ms, write_concern: write_concern, session: session)\nif result.nil?\n  raise(DynFork::Errors::Panic.new(\"Model : `#{@@full_model_name}` > Method: `.create_index` => \" + \"Index creation returned empty result!\"))\nend\nresult\n"}},{"html_id":"create_indexes(models:Array,*,commit_quorum:Int32|String|Nil=nil,max_time_ms:Int64|Nil=nil,write_concern:Mongo::WriteConcern|Nil=nil,session:Mongo::Session::ClientSession|Nil=nil):Mongo::Commands::CreateIndexes::Result|Nil-instance-method","name":"create_indexes","doc":"Creates multiple indexes in the collection.\nNOTE: For more details, please check the official <a href=\"https://docs.mongodb.com/manual/reference/command/createIndexes/\" target=\"_blank\">documentation</a>.\nNOTE: For more details, please check the cryomongo <a href=\"https://elbywan.github.io/cryomongo/Mongo/Collection.html\" target=\"_blank\">documentation</a>.\n\nExample:\n```\n# Follow the same rules to create multiple indexes with a single method call.\nModelName.create_indexes([\n  {\n    keys: {a: 1},\n  },\n  {\n    keys: {b: 1}, options: {expire_after_seconds: 3600},\n  },\n])\n```\n","summary":"<p>Creates multiple indexes in the collection.</p>","abstract":false,"args":[{"name":"models","external_name":"models","restriction":"Array"},{"name":"","external_name":"","restriction":""},{"name":"commit_quorum","default_value":"nil","external_name":"commit_quorum","restriction":"Int32 | String | ::Nil"},{"name":"max_time_ms","default_value":"nil","external_name":"max_time_ms","restriction":"Int64 | ::Nil"},{"name":"write_concern","default_value":"nil","external_name":"write_concern","restriction":"Mongo::WriteConcern | ::Nil"},{"name":"session","default_value":"nil","external_name":"session","restriction":"Mongo::Session::ClientSession | ::Nil"}],"args_string":"(models : Array, *, commit_quorum : Int32 | String | Nil = nil, max_time_ms : Int64 | Nil = nil, write_concern : Mongo::WriteConcern | Nil = nil, session : Mongo::Session::ClientSession | Nil = nil) : Mongo::Commands::CreateIndexes::Result | Nil","args_html":"(models : Array, *, commit_quorum : Int32 | String | Nil = <span class=\"n\">nil</span>, max_time_ms : Int64 | Nil = <span class=\"n\">nil</span>, write_concern : Mongo::WriteConcern | Nil = <span class=\"n\">nil</span>, session : Mongo::Session::ClientSession | Nil = <span class=\"n\">nil</span>) : Mongo::Commands::CreateIndexes::Result | Nil","location":{"filename":"src/dynfork/commons/indexes.cr","line_number":95,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/commons/indexes.cr#L95"},"def":{"name":"create_indexes","args":[{"name":"models","external_name":"models","restriction":"Array"},{"name":"","external_name":"","restriction":""},{"name":"commit_quorum","default_value":"nil","external_name":"commit_quorum","restriction":"Int32 | String | ::Nil"},{"name":"max_time_ms","default_value":"nil","external_name":"max_time_ms","restriction":"Int64 | ::Nil"},{"name":"write_concern","default_value":"nil","external_name":"write_concern","restriction":"Mongo::WriteConcern | ::Nil"},{"name":"session","default_value":"nil","external_name":"session","restriction":"Mongo::Session::ClientSession | ::Nil"}],"splat_index":1,"return_type":"Mongo::Commands::CreateIndexes::Result | ::Nil","visibility":"Public","body":"if @@meta.not_nil![:\"migrat_model?\"]\nelse\n  raise(DynFork::Errors::Panic.new(\"Model : `#{@@full_model_name}` > Param: `migrat_model?` => \" + \"This Model is not migrated to the database!\"))\nend\ncollection : Mongo::Collection = DynFork::Globals.mongo_database[@@meta.not_nil![:collection_name]]\nresult = collection.create_indexes(models: models, commit_quorum: commit_quorum, max_time_ms: max_time_ms, write_concern: write_concern, session: session)\nif result.nil?\n  raise(DynFork::Errors::Panic.new(\"Model : `#{@@full_model_name}` > Method: `.create_indexes` => \" + \"Index creation returned empty result!\"))\nend\nresult\n"}},{"html_id":"drop_index(name:String,*,max_time_ms:Int64|Nil=nil,write_concern:Mongo::WriteConcern|Nil=nil,session:Mongo::Session::ClientSession|Nil=nil):Mongo::Commands::Common::BaseResult|Nil-instance-method","name":"drop_index","doc":"Drops a single index from the collection by the index name.\n<br>\nSee: #drop_indexes.\nNOTE: For more details, please check the cryomongo <a href=\"https://elbywan.github.io/cryomongo/Mongo/Collection.html\" target=\"_blank\">documentation</a>.","summary":"<p>Drops a single index from the collection by the index name.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"max_time_ms","default_value":"nil","external_name":"max_time_ms","restriction":"Int64 | ::Nil"},{"name":"write_concern","default_value":"nil","external_name":"write_concern","restriction":"Mongo::WriteConcern | ::Nil"},{"name":"session","default_value":"nil","external_name":"session","restriction":"Mongo::Session::ClientSession | ::Nil"}],"args_string":"(name : String, *, max_time_ms : Int64 | Nil = nil, write_concern : Mongo::WriteConcern | Nil = nil, session : Mongo::Session::ClientSession | Nil = nil) : Mongo::Commands::Common::BaseResult | Nil","args_html":"(name : String, *, max_time_ms : Int64 | Nil = <span class=\"n\">nil</span>, write_concern : Mongo::WriteConcern | Nil = <span class=\"n\">nil</span>, session : Mongo::Session::ClientSession | Nil = <span class=\"n\">nil</span>) : Mongo::Commands::Common::BaseResult | Nil","location":{"filename":"src/dynfork/commons/indexes.cr","line_number":134,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/commons/indexes.cr#L134"},"def":{"name":"drop_index","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"max_time_ms","default_value":"nil","external_name":"max_time_ms","restriction":"Int64 | ::Nil"},{"name":"write_concern","default_value":"nil","external_name":"write_concern","restriction":"Mongo::WriteConcern | ::Nil"},{"name":"session","default_value":"nil","external_name":"session","restriction":"Mongo::Session::ClientSession | ::Nil"}],"splat_index":1,"return_type":"Mongo::Commands::Common::BaseResult | ::Nil","visibility":"Public","body":"if @@meta.not_nil![:\"migrat_model?\"]\nelse\n  raise(DynFork::Errors::Panic.new(\"Model : `#{@@full_model_name}` > Param: `migrat_model?` => \" + \"This Model is not migrated to the database!\"))\nend\ncollection : Mongo::Collection = DynFork::Globals.mongo_database[@@meta.not_nil![:collection_name]]\nresult = collection.drop_index(name: name, max_time_ms: max_time_ms, write_concern: write_concern, session: session)\nif result.nil?\n  raise(DynFork::Errors::Panic.new(\"Model : `#{@@full_model_name}` > Method: `.drop_index` => \" + \"Index creation returned empty result!\"))\nend\nresult\n"}},{"html_id":"drop_indexes(*,max_time_ms:Int64|Nil=nil,write_concern:Mongo::WriteConcern|Nil=nil,session:Mongo::Session::ClientSession|Nil=nil):Mongo::Commands::Common::BaseResult|Nil-instance-method","name":"drop_indexes","doc":"Drops all indexes in the collection.\nNOTE: For more details, please check the official <a href=\"https://docs.mongodb.com/manual/reference/command/dropIndexes/\" target=\"_blank\">documentation</a>.\nNOTE: For more details, please check the cryomongo <a href=\"https://elbywan.github.io/cryomongo/Mongo/Collection.html\" target=\"_blank\">documentation</a>.","summary":"<p>Drops all indexes in the collection.</p>","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"max_time_ms","default_value":"nil","external_name":"max_time_ms","restriction":"Int64 | ::Nil"},{"name":"write_concern","default_value":"nil","external_name":"write_concern","restriction":"Mongo::WriteConcern | ::Nil"},{"name":"session","default_value":"nil","external_name":"session","restriction":"Mongo::Session::ClientSession | ::Nil"}],"args_string":"(*, max_time_ms : Int64 | Nil = nil, write_concern : Mongo::WriteConcern | Nil = nil, session : Mongo::Session::ClientSession | Nil = nil) : Mongo::Commands::Common::BaseResult | Nil","args_html":"(*, max_time_ms : Int64 | Nil = <span class=\"n\">nil</span>, write_concern : Mongo::WriteConcern | Nil = <span class=\"n\">nil</span>, session : Mongo::Session::ClientSession | Nil = <span class=\"n\">nil</span>) : Mongo::Commands::Common::BaseResult | Nil","location":{"filename":"src/dynfork/commons/indexes.cr","line_number":170,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/commons/indexes.cr#L170"},"def":{"name":"drop_indexes","args":[{"name":"","external_name":"","restriction":""},{"name":"max_time_ms","default_value":"nil","external_name":"max_time_ms","restriction":"Int64 | ::Nil"},{"name":"write_concern","default_value":"nil","external_name":"write_concern","restriction":"Mongo::WriteConcern | ::Nil"},{"name":"session","default_value":"nil","external_name":"session","restriction":"Mongo::Session::ClientSession | ::Nil"}],"splat_index":0,"return_type":"Mongo::Commands::Common::BaseResult | ::Nil","visibility":"Public","body":"if @@meta.not_nil![:\"migrat_model?\"]\nelse\n  raise(DynFork::Errors::Panic.new(\"Model : `#{@@full_model_name}` > Param: `migrat_model?` => \" + \"This Model is not migrated to the database!\"))\nend\ncollection : Mongo::Collection = DynFork::Globals.mongo_database[@@meta.not_nil![:collection_name]]\nresult = collection.drop_indexes(max_time_ms: max_time_ms, write_concern: write_concern, session: session)\nif result.nil?\n  raise(DynFork::Errors::Panic.new(\"Model : `#{@@full_model_name}` > Method: `.drop_indexes` => \" + \"Index creation returned empty result!\"))\nend\nresult\n"}},{"html_id":"list_indexes(session:Mongo::Session::ClientSession|Nil=nil):Mongo::Cursor|Nil-instance-method","name":"list_indexes","doc":"Gets index information for all indexes in the collection.\nNOTE: For more details, please check the official <a href=\"https://docs.mongodb.com/manual/reference/command/listIndexes/\" target=\"_blank\">documentation</a>.\nNOTE: For more details, please check the cryomongo <a href=\"https://elbywan.github.io/cryomongo/Mongo/Collection.html\" target=\"_blank\">documentation</a>.","summary":"<p>Gets index information for all indexes in the collection.</p>","abstract":false,"args":[{"name":"session","default_value":"nil","external_name":"session","restriction":"Mongo::Session::ClientSession | ::Nil"}],"args_string":"(session : Mongo::Session::ClientSession | Nil = nil) : Mongo::Cursor | Nil","args_html":"(session : Mongo::Session::ClientSession | Nil = <span class=\"n\">nil</span>) : Mongo::Cursor | Nil","location":{"filename":"src/dynfork/commons/indexes.cr","line_number":204,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/commons/indexes.cr#L204"},"def":{"name":"list_indexes","args":[{"name":"session","default_value":"nil","external_name":"session","restriction":"Mongo::Session::ClientSession | ::Nil"}],"return_type":"Mongo::Cursor | ::Nil","visibility":"Public","body":"if @@meta.not_nil![:\"migrat_model?\"]\nelse\n  raise(DynFork::Errors::Panic.new(\"Model : `#{@@full_model_name}` > Param: `migrat_model?` => \" + \"This Model is not migrated to the database!\"))\nend\ncollection : Mongo::Collection = DynFork::Globals.mongo_database[@@meta.not_nil![:collection_name]]\ncollection.list_indexes(session: session)\n"}}]},{"html_id":"dynfork/DynFork/QCommons/Many","path":"DynFork/QCommons/Many.html","kind":"module","full_name":"DynFork::QCommons::Many","name":"Many","abstract":false,"locations":[{"filename":"src/dynfork/commons/many.cr","line_number":2,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/commons/many.cr#L2"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"extended_modules":[{"html_id":"dynfork/DynFork/QCommons/Many","kind":"module","full_name":"DynFork::QCommons::Many","name":"Many"}],"including_types":[{"html_id":"dynfork/DynFork/QCommons","kind":"module","full_name":"DynFork::QCommons","name":"QCommons"}],"namespace":{"html_id":"dynfork/DynFork/QCommons","kind":"module","full_name":"DynFork::QCommons","name":"QCommons"},"doc":"Queries like `find many`.","summary":"<p>Queries like <code>find many</code>.</p>","instance_methods":[{"html_id":"delete_many(filter,*,collation:Mongo::Collation|Nil=nil,hint:String|Hash|NamedTuple|Nil=nil,ordered:Bool|Nil=nil,write_concern:Mongo::WriteConcern|Nil=nil,session:Mongo::Session::ClientSession|Nil=nil):Mongo::Commands::Common::DeleteResult|Nil-instance-method","name":"delete_many","doc":"Deletes multiple documents.\nNOTE: For more details, please check the official <a href=\"https://docs.mongodb.com/manual/reference/command/delete/\" target=\"_blank\">documentation</a>.\nNOTE: For more details, please check the cryomongo <a href=\"https://elbywan.github.io/cryomongo/Mongo/Collection.html\" target=\"_blank\">documentation</a>.","summary":"<p>Deletes multiple documents.</p>","abstract":false,"args":[{"name":"filter","external_name":"filter","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"collation","default_value":"nil","external_name":"collation","restriction":"Mongo::Collation | ::Nil"},{"name":"hint","default_value":"nil","external_name":"hint","restriction":"String | Hash | NamedTuple | ::Nil"},{"name":"ordered","default_value":"nil","external_name":"ordered","restriction":"Bool | ::Nil"},{"name":"write_concern","default_value":"nil","external_name":"write_concern","restriction":"Mongo::WriteConcern | ::Nil"},{"name":"session","default_value":"nil","external_name":"session","restriction":"Mongo::Session::ClientSession | ::Nil"}],"args_string":"(filter, *, collation : Mongo::Collation | Nil = nil, hint : String | Hash | NamedTuple | Nil = nil, ordered : Bool | Nil = nil, write_concern : Mongo::WriteConcern | Nil = nil, session : Mongo::Session::ClientSession | Nil = nil) : Mongo::Commands::Common::DeleteResult | Nil","args_html":"(filter, *, collation : Mongo::Collation | Nil = <span class=\"n\">nil</span>, hint : String | Hash | NamedTuple | Nil = <span class=\"n\">nil</span>, ordered : Bool | Nil = <span class=\"n\">nil</span>, write_concern : Mongo::WriteConcern | Nil = <span class=\"n\">nil</span>, session : Mongo::Session::ClientSession | Nil = <span class=\"n\">nil</span>) : Mongo::Commands::Common::DeleteResult | Nil","location":{"filename":"src/dynfork/commons/many.cr","line_number":185,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/commons/many.cr#L185"},"def":{"name":"delete_many","args":[{"name":"filter","external_name":"filter","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"collation","default_value":"nil","external_name":"collation","restriction":"Mongo::Collation | ::Nil"},{"name":"hint","default_value":"nil","external_name":"hint","restriction":"String | Hash | NamedTuple | ::Nil"},{"name":"ordered","default_value":"nil","external_name":"ordered","restriction":"Bool | ::Nil"},{"name":"write_concern","default_value":"nil","external_name":"write_concern","restriction":"Mongo::WriteConcern | ::Nil"},{"name":"session","default_value":"nil","external_name":"session","restriction":"Mongo::Session::ClientSession | ::Nil"}],"splat_index":1,"return_type":"Mongo::Commands::Common::DeleteResult | ::Nil","visibility":"Public","body":"if @@meta.not_nil![:\"migrat_model?\"]\nelse\n  raise(DynFork::Errors::Panic.new(\"Model : `#{@@full_model_name}` > Param: `migrat_model?` => \" + \"This Model is not migrated to the database!\"))\nend\ncollection : Mongo::Collection = DynFork::Globals.mongo_database[@@meta.not_nil![:collection_name]]\ncollection.delete_many(filter: filter, collation: collation, hint: hint, ordered: ordered, write_concern: write_concern, session: session)\n"}},{"html_id":"find_many_to_hash_list(filter=BSON.new,*,sort=nil,projection=nil,hint:String|Hash|NamedTuple|Nil=nil,skip:Int32|Nil=nil,limit:Int32|Nil=nil,batch_size:Int32|Nil=nil,single_batch:Bool|Nil=nil,comment:String|Nil=nil,max_time_ms:Int64|Nil=nil,read_concern:Mongo::ReadConcern|Nil=nil,max=nil,min=nil,return_key:Bool|Nil=nil,show_record_id:Bool|Nil=nil,tailable:Bool|Nil=nil,oplog_replay:Bool|Nil=nil,no_cursor_timeout:Bool|Nil=nil,await_data:Bool|Nil=nil,allow_partial_results:Bool|Nil=nil,allow_disk_use:Bool|Nil=nil,collation:Mongo::Collation|Nil=nil,read_preference:Mongo::ReadPreference|Nil=nil,session:Mongo::Session::ClientSession|Nil=nil):Array(Hash(String,DynFork::Globals::FieldValueTypes))|Nil-instance-method","name":"find_many_to_hash_list","doc":"Finds the documents matching the Model.\n<br>\nConverts documents into a array of Hash objects.\nNOTE: For more details, please check the official <a href=\"https://docs.mongodb.com/manual/reference/command/find/\" target=\"_blank\">documentation</a>.\nNOTE: For an overview of read operations, check the official <a href=\"https://docs.mongodb.com/manual/core/read-operations-introduction/\" target=\"_blank\">manual</a>.\nNOTE: For more details, please check the cryomongo <a href=\"https://elbywan.github.io/cryomongo/Mongo/Collection.html\" target=\"_blank\">documentation</a>.\n\nExample:\n```\narr = ModelName.find_many_to_hash_list({qty: {\"$gt\": 4}})\n```\n","summary":"<p>Finds the documents matching the Model.</p>","abstract":false,"args":[{"name":"filter","default_value":"BSON.new","external_name":"filter","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":""},{"name":"projection","default_value":"nil","external_name":"projection","restriction":""},{"name":"hint","default_value":"nil","external_name":"hint","restriction":"String | Hash | NamedTuple | ::Nil"},{"name":"skip","default_value":"nil","external_name":"skip","restriction":"Int32 | ::Nil"},{"name":"limit","default_value":"nil","external_name":"limit","restriction":"Int32 | ::Nil"},{"name":"batch_size","default_value":"nil","external_name":"batch_size","restriction":"Int32 | ::Nil"},{"name":"single_batch","default_value":"nil","external_name":"single_batch","restriction":"Bool | ::Nil"},{"name":"comment","default_value":"nil","external_name":"comment","restriction":"String | ::Nil"},{"name":"max_time_ms","default_value":"nil","external_name":"max_time_ms","restriction":"Int64 | ::Nil"},{"name":"read_concern","default_value":"nil","external_name":"read_concern","restriction":"Mongo::ReadConcern | ::Nil"},{"name":"max","default_value":"nil","external_name":"max","restriction":""},{"name":"min","default_value":"nil","external_name":"min","restriction":""},{"name":"return_key","default_value":"nil","external_name":"return_key","restriction":"Bool | ::Nil"},{"name":"show_record_id","default_value":"nil","external_name":"show_record_id","restriction":"Bool | ::Nil"},{"name":"tailable","default_value":"nil","external_name":"tailable","restriction":"Bool | ::Nil"},{"name":"oplog_replay","default_value":"nil","external_name":"oplog_replay","restriction":"Bool | ::Nil"},{"name":"no_cursor_timeout","default_value":"nil","external_name":"no_cursor_timeout","restriction":"Bool | ::Nil"},{"name":"await_data","default_value":"nil","external_name":"await_data","restriction":"Bool | ::Nil"},{"name":"allow_partial_results","default_value":"nil","external_name":"allow_partial_results","restriction":"Bool | ::Nil"},{"name":"allow_disk_use","default_value":"nil","external_name":"allow_disk_use","restriction":"Bool | ::Nil"},{"name":"collation","default_value":"nil","external_name":"collation","restriction":"Mongo::Collation | ::Nil"},{"name":"read_preference","default_value":"nil","external_name":"read_preference","restriction":"Mongo::ReadPreference | ::Nil"},{"name":"session","default_value":"nil","external_name":"session","restriction":"Mongo::Session::ClientSession | ::Nil"}],"args_string":"(filter = BSON.new, *, sort = nil, projection = nil, hint : String | Hash | NamedTuple | Nil = nil, skip : Int32 | Nil = nil, limit : Int32 | Nil = nil, batch_size : Int32 | Nil = nil, single_batch : Bool | Nil = nil, comment : String | Nil = nil, max_time_ms : Int64 | Nil = nil, read_concern : Mongo::ReadConcern | Nil = nil, max = nil, min = nil, return_key : Bool | Nil = nil, show_record_id : Bool | Nil = nil, tailable : Bool | Nil = nil, oplog_replay : Bool | Nil = nil, no_cursor_timeout : Bool | Nil = nil, await_data : Bool | Nil = nil, allow_partial_results : Bool | Nil = nil, allow_disk_use : Bool | Nil = nil, collation : Mongo::Collation | Nil = nil, read_preference : Mongo::ReadPreference | Nil = nil, session : Mongo::Session::ClientSession | Nil = nil) : Array(Hash(String, DynFork::Globals::FieldValueTypes)) | Nil","args_html":"(filter = <span class=\"t\">BSON</span>.new, *, sort = <span class=\"n\">nil</span>, projection = <span class=\"n\">nil</span>, hint : String | Hash | NamedTuple | Nil = <span class=\"n\">nil</span>, skip : Int32 | Nil = <span class=\"n\">nil</span>, limit : Int32 | Nil = <span class=\"n\">nil</span>, batch_size : Int32 | Nil = <span class=\"n\">nil</span>, single_batch : Bool | Nil = <span class=\"n\">nil</span>, comment : String | Nil = <span class=\"n\">nil</span>, max_time_ms : Int64 | Nil = <span class=\"n\">nil</span>, read_concern : Mongo::ReadConcern | Nil = <span class=\"n\">nil</span>, max = <span class=\"n\">nil</span>, min = <span class=\"n\">nil</span>, return_key : Bool | Nil = <span class=\"n\">nil</span>, show_record_id : Bool | Nil = <span class=\"n\">nil</span>, tailable : Bool | Nil = <span class=\"n\">nil</span>, oplog_replay : Bool | Nil = <span class=\"n\">nil</span>, no_cursor_timeout : Bool | Nil = <span class=\"n\">nil</span>, await_data : Bool | Nil = <span class=\"n\">nil</span>, allow_partial_results : Bool | Nil = <span class=\"n\">nil</span>, allow_disk_use : Bool | Nil = <span class=\"n\">nil</span>, collation : Mongo::Collation | Nil = <span class=\"n\">nil</span>, read_preference : Mongo::ReadPreference | Nil = <span class=\"n\">nil</span>, session : Mongo::Session::ClientSession | Nil = <span class=\"n\">nil</span>) : Array(Hash(String, <a href=\"../../DynFork/Globals/Aliases/FieldValueTypes.html\">DynFork::Globals::FieldValueTypes</a>)) | Nil","location":{"filename":"src/dynfork/commons/many.cr","line_number":17,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/commons/many.cr#L17"},"def":{"name":"find_many_to_hash_list","args":[{"name":"filter","default_value":"BSON.new","external_name":"filter","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":""},{"name":"projection","default_value":"nil","external_name":"projection","restriction":""},{"name":"hint","default_value":"nil","external_name":"hint","restriction":"String | Hash | NamedTuple | ::Nil"},{"name":"skip","default_value":"nil","external_name":"skip","restriction":"Int32 | ::Nil"},{"name":"limit","default_value":"nil","external_name":"limit","restriction":"Int32 | ::Nil"},{"name":"batch_size","default_value":"nil","external_name":"batch_size","restriction":"Int32 | ::Nil"},{"name":"single_batch","default_value":"nil","external_name":"single_batch","restriction":"Bool | ::Nil"},{"name":"comment","default_value":"nil","external_name":"comment","restriction":"String | ::Nil"},{"name":"max_time_ms","default_value":"nil","external_name":"max_time_ms","restriction":"Int64 | ::Nil"},{"name":"read_concern","default_value":"nil","external_name":"read_concern","restriction":"Mongo::ReadConcern | ::Nil"},{"name":"max","default_value":"nil","external_name":"max","restriction":""},{"name":"min","default_value":"nil","external_name":"min","restriction":""},{"name":"return_key","default_value":"nil","external_name":"return_key","restriction":"Bool | ::Nil"},{"name":"show_record_id","default_value":"nil","external_name":"show_record_id","restriction":"Bool | ::Nil"},{"name":"tailable","default_value":"nil","external_name":"tailable","restriction":"Bool | ::Nil"},{"name":"oplog_replay","default_value":"nil","external_name":"oplog_replay","restriction":"Bool | ::Nil"},{"name":"no_cursor_timeout","default_value":"nil","external_name":"no_cursor_timeout","restriction":"Bool | ::Nil"},{"name":"await_data","default_value":"nil","external_name":"await_data","restriction":"Bool | ::Nil"},{"name":"allow_partial_results","default_value":"nil","external_name":"allow_partial_results","restriction":"Bool | ::Nil"},{"name":"allow_disk_use","default_value":"nil","external_name":"allow_disk_use","restriction":"Bool | ::Nil"},{"name":"collation","default_value":"nil","external_name":"collation","restriction":"Mongo::Collation | ::Nil"},{"name":"read_preference","default_value":"nil","external_name":"read_preference","restriction":"Mongo::ReadPreference | ::Nil"},{"name":"session","default_value":"nil","external_name":"session","restriction":"Mongo::Session::ClientSession | ::Nil"}],"splat_index":1,"return_type":"Array(Hash(String, DynFork::Globals::FieldValueTypes)) | ::Nil","visibility":"Public","body":"if @@meta.not_nil![:\"migrat_model?\"]\nelse\n  raise(DynFork::Errors::Panic.new(\"Model : `#{@@full_model_name}` > Param: `migrat_model?` => \" + \"This Model is not migrated to the database!\"))\nend\ncollection : Mongo::Collection = DynFork::Globals.mongo_database[@@meta.not_nil![:collection_name]]\nhash_list = Array(Hash(String, DynFork::Globals::FieldValueTypes)).new\ncursor : Mongo::Cursor = collection.find(filter: filter, sort: sort, projection: projection, hint: hint, skip: skip, limit: limit || @@meta.not_nil![:db_query_docs_limit], batch_size: batch_size, single_batch: single_batch, comment: comment, max_time_ms: max_time_ms, read_concern: read_concern, max: max, min: min, return_key: return_key, show_record_id: show_record_id, tailable: tailable, oplog_replay: oplog_replay, no_cursor_timeout: no_cursor_timeout, await_data: await_data, allow_partial_results: allow_partial_results, allow_disk_use: allow_disk_use, collation: collation, read_preference: read_preference, session: session)\nfield_name_params_list = @@meta.not_nil![:field_name_params_list]\nfield_name_params_list_ptr = pointerof(field_name_params_list)\ncursor.each do |document|\n  hash_list << (self.document_to_hash(pointerof(document), field_name_params_list_ptr))\nend\nif hash_list.empty?\nelse\n  return hash_list\nend\n"}},{"html_id":"find_many_to_json(filter=BSON.new,*,sort=nil,projection=nil,hint:String|Hash|NamedTuple|Nil=nil,skip:Int32|Nil=nil,limit:Int32|Nil=nil,batch_size:Int32|Nil=nil,single_batch:Bool|Nil=nil,comment:String|Nil=nil,max_time_ms:Int64|Nil=nil,read_concern:Mongo::ReadConcern|Nil=nil,max=nil,min=nil,return_key:Bool|Nil=nil,show_record_id:Bool|Nil=nil,tailable:Bool|Nil=nil,oplog_replay:Bool|Nil=nil,no_cursor_timeout:Bool|Nil=nil,await_data:Bool|Nil=nil,allow_partial_results:Bool|Nil=nil,allow_disk_use:Bool|Nil=nil,collation:Mongo::Collation|Nil=nil,read_preference:Mongo::ReadPreference|Nil=nil,session:Mongo::Session::ClientSession|Nil=nil):String|Nil-instance-method","name":"find_many_to_json","doc":"Finds the documents matching the Model.\n<br>\nConverts documents to a json string.\nNOTE: For more details, please check the official <a href=\"https://docs.mongodb.com/manual/reference/command/find/\" target=\"_blank\">documentation</a>.\nNOTE: For an overview of read operations, check the official <a href=\"https://docs.mongodb.com/manual/core/read-operations-introduction/\" target=\"_blank\">manual</a>.\nNOTE: For more details, please check the cryomongo <a href=\"https://elbywan.github.io/cryomongo/Mongo/Collection.html\" target=\"_blank\">documentation</a>.\n\nExample:\n```\njson_str = ModelName.find_many_to_json({qty: {\"$gt\": 4}})\n```\n","summary":"<p>Finds the documents matching the Model.</p>","abstract":false,"args":[{"name":"filter","default_value":"BSON.new","external_name":"filter","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":""},{"name":"projection","default_value":"nil","external_name":"projection","restriction":""},{"name":"hint","default_value":"nil","external_name":"hint","restriction":"String | Hash | NamedTuple | ::Nil"},{"name":"skip","default_value":"nil","external_name":"skip","restriction":"Int32 | ::Nil"},{"name":"limit","default_value":"nil","external_name":"limit","restriction":"Int32 | ::Nil"},{"name":"batch_size","default_value":"nil","external_name":"batch_size","restriction":"Int32 | ::Nil"},{"name":"single_batch","default_value":"nil","external_name":"single_batch","restriction":"Bool | ::Nil"},{"name":"comment","default_value":"nil","external_name":"comment","restriction":"String | ::Nil"},{"name":"max_time_ms","default_value":"nil","external_name":"max_time_ms","restriction":"Int64 | ::Nil"},{"name":"read_concern","default_value":"nil","external_name":"read_concern","restriction":"Mongo::ReadConcern | ::Nil"},{"name":"max","default_value":"nil","external_name":"max","restriction":""},{"name":"min","default_value":"nil","external_name":"min","restriction":""},{"name":"return_key","default_value":"nil","external_name":"return_key","restriction":"Bool | ::Nil"},{"name":"show_record_id","default_value":"nil","external_name":"show_record_id","restriction":"Bool | ::Nil"},{"name":"tailable","default_value":"nil","external_name":"tailable","restriction":"Bool | ::Nil"},{"name":"oplog_replay","default_value":"nil","external_name":"oplog_replay","restriction":"Bool | ::Nil"},{"name":"no_cursor_timeout","default_value":"nil","external_name":"no_cursor_timeout","restriction":"Bool | ::Nil"},{"name":"await_data","default_value":"nil","external_name":"await_data","restriction":"Bool | ::Nil"},{"name":"allow_partial_results","default_value":"nil","external_name":"allow_partial_results","restriction":"Bool | ::Nil"},{"name":"allow_disk_use","default_value":"nil","external_name":"allow_disk_use","restriction":"Bool | ::Nil"},{"name":"collation","default_value":"nil","external_name":"collation","restriction":"Mongo::Collation | ::Nil"},{"name":"read_preference","default_value":"nil","external_name":"read_preference","restriction":"Mongo::ReadPreference | ::Nil"},{"name":"session","default_value":"nil","external_name":"session","restriction":"Mongo::Session::ClientSession | ::Nil"}],"args_string":"(filter = BSON.new, *, sort = nil, projection = nil, hint : String | Hash | NamedTuple | Nil = nil, skip : Int32 | Nil = nil, limit : Int32 | Nil = nil, batch_size : Int32 | Nil = nil, single_batch : Bool | Nil = nil, comment : String | Nil = nil, max_time_ms : Int64 | Nil = nil, read_concern : Mongo::ReadConcern | Nil = nil, max = nil, min = nil, return_key : Bool | Nil = nil, show_record_id : Bool | Nil = nil, tailable : Bool | Nil = nil, oplog_replay : Bool | Nil = nil, no_cursor_timeout : Bool | Nil = nil, await_data : Bool | Nil = nil, allow_partial_results : Bool | Nil = nil, allow_disk_use : Bool | Nil = nil, collation : Mongo::Collation | Nil = nil, read_preference : Mongo::ReadPreference | Nil = nil, session : Mongo::Session::ClientSession | Nil = nil) : String | Nil","args_html":"(filter = <span class=\"t\">BSON</span>.new, *, sort = <span class=\"n\">nil</span>, projection = <span class=\"n\">nil</span>, hint : String | Hash | NamedTuple | Nil = <span class=\"n\">nil</span>, skip : Int32 | Nil = <span class=\"n\">nil</span>, limit : Int32 | Nil = <span class=\"n\">nil</span>, batch_size : Int32 | Nil = <span class=\"n\">nil</span>, single_batch : Bool | Nil = <span class=\"n\">nil</span>, comment : String | Nil = <span class=\"n\">nil</span>, max_time_ms : Int64 | Nil = <span class=\"n\">nil</span>, read_concern : Mongo::ReadConcern | Nil = <span class=\"n\">nil</span>, max = <span class=\"n\">nil</span>, min = <span class=\"n\">nil</span>, return_key : Bool | Nil = <span class=\"n\">nil</span>, show_record_id : Bool | Nil = <span class=\"n\">nil</span>, tailable : Bool | Nil = <span class=\"n\">nil</span>, oplog_replay : Bool | Nil = <span class=\"n\">nil</span>, no_cursor_timeout : Bool | Nil = <span class=\"n\">nil</span>, await_data : Bool | Nil = <span class=\"n\">nil</span>, allow_partial_results : Bool | Nil = <span class=\"n\">nil</span>, allow_disk_use : Bool | Nil = <span class=\"n\">nil</span>, collation : Mongo::Collation | Nil = <span class=\"n\">nil</span>, read_preference : Mongo::ReadPreference | Nil = <span class=\"n\">nil</span>, session : Mongo::Session::ClientSession | Nil = <span class=\"n\">nil</span>) : String | Nil","location":{"filename":"src/dynfork/commons/many.cr","line_number":104,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/commons/many.cr#L104"},"def":{"name":"find_many_to_json","args":[{"name":"filter","default_value":"BSON.new","external_name":"filter","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":""},{"name":"projection","default_value":"nil","external_name":"projection","restriction":""},{"name":"hint","default_value":"nil","external_name":"hint","restriction":"String | Hash | NamedTuple | ::Nil"},{"name":"skip","default_value":"nil","external_name":"skip","restriction":"Int32 | ::Nil"},{"name":"limit","default_value":"nil","external_name":"limit","restriction":"Int32 | ::Nil"},{"name":"batch_size","default_value":"nil","external_name":"batch_size","restriction":"Int32 | ::Nil"},{"name":"single_batch","default_value":"nil","external_name":"single_batch","restriction":"Bool | ::Nil"},{"name":"comment","default_value":"nil","external_name":"comment","restriction":"String | ::Nil"},{"name":"max_time_ms","default_value":"nil","external_name":"max_time_ms","restriction":"Int64 | ::Nil"},{"name":"read_concern","default_value":"nil","external_name":"read_concern","restriction":"Mongo::ReadConcern | ::Nil"},{"name":"max","default_value":"nil","external_name":"max","restriction":""},{"name":"min","default_value":"nil","external_name":"min","restriction":""},{"name":"return_key","default_value":"nil","external_name":"return_key","restriction":"Bool | ::Nil"},{"name":"show_record_id","default_value":"nil","external_name":"show_record_id","restriction":"Bool | ::Nil"},{"name":"tailable","default_value":"nil","external_name":"tailable","restriction":"Bool | ::Nil"},{"name":"oplog_replay","default_value":"nil","external_name":"oplog_replay","restriction":"Bool | ::Nil"},{"name":"no_cursor_timeout","default_value":"nil","external_name":"no_cursor_timeout","restriction":"Bool | ::Nil"},{"name":"await_data","default_value":"nil","external_name":"await_data","restriction":"Bool | ::Nil"},{"name":"allow_partial_results","default_value":"nil","external_name":"allow_partial_results","restriction":"Bool | ::Nil"},{"name":"allow_disk_use","default_value":"nil","external_name":"allow_disk_use","restriction":"Bool | ::Nil"},{"name":"collation","default_value":"nil","external_name":"collation","restriction":"Mongo::Collation | ::Nil"},{"name":"read_preference","default_value":"nil","external_name":"read_preference","restriction":"Mongo::ReadPreference | ::Nil"},{"name":"session","default_value":"nil","external_name":"session","restriction":"Mongo::Session::ClientSession | ::Nil"}],"splat_index":1,"return_type":"String | ::Nil","visibility":"Public","body":"if @@meta.not_nil![:\"migrat_model?\"]\nelse\n  raise(DynFork::Errors::Panic.new(\"Model : `#{@@full_model_name}` > Param: `migrat_model?` => \" + \"This Model is not migrated to the database!\"))\nend\ncollection : Mongo::Collection = DynFork::Globals.mongo_database[@@meta.not_nil![:collection_name]]\njson : String = \"[\"\ncursor : Mongo::Cursor = collection.find(filter: filter, sort: sort, projection: projection, hint: hint, skip: skip, limit: limit || @@meta.not_nil![:db_query_docs_limit], batch_size: batch_size, single_batch: single_batch, comment: comment, max_time_ms: max_time_ms, read_concern: read_concern, max: max, min: min, return_key: return_key, show_record_id: show_record_id, tailable: tailable, oplog_replay: oplog_replay, no_cursor_timeout: no_cursor_timeout, await_data: await_data, allow_partial_results: allow_partial_results, allow_disk_use: allow_disk_use, collation: collation, read_preference: read_preference, session: session)\nfield_name_params_list = @@meta.not_nil![:field_name_params_list]\nfield_name_params_list_ptr = pointerof(field_name_params_list)\ncursor.each do |document|\n  json = json + (self.document_to_hash(pointerof(document), field_name_params_list_ptr)).to_json\nend\nif json.size > 1\n  json = json + \"]\"\n  return json\nend\n"}}]},{"html_id":"dynfork/DynFork/QCommons/One","path":"DynFork/QCommons/One.html","kind":"module","full_name":"DynFork::QCommons::One","name":"One","abstract":false,"locations":[{"filename":"src/dynfork/commons/one.cr","line_number":2,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/commons/one.cr#L2"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"extended_modules":[{"html_id":"dynfork/DynFork/QCommons/One","kind":"module","full_name":"DynFork::QCommons::One","name":"One"}],"including_types":[{"html_id":"dynfork/DynFork/QCommons","kind":"module","full_name":"DynFork::QCommons","name":"QCommons"}],"namespace":{"html_id":"dynfork/DynFork/QCommons","kind":"module","full_name":"DynFork::QCommons","name":"QCommons"},"doc":"Requests like `find one`.","summary":"<p>Requests like <code>find one</code>.</p>","instance_methods":[{"html_id":"delete_one(filter,*,collation:Mongo::Collation|Nil=nil,hint:String|Hash|NamedTuple|Nil=nil,ordered:Bool|Nil=nil,write_concern:Mongo::WriteConcern|Nil=nil,session:Mongo::Session::ClientSession|Nil=nil):Mongo::Commands::Common::DeleteResult|Nil-instance-method","name":"delete_one","doc":"Deletes one document.\nNOTE: For more details, please check the official <a href=\"https://docs.mongodb.com/manual/reference/command/delete/\" target=\"_blank\">documentation</a>.\nNOTE: For more details, please check the cryomongo <a href=\"https://elbywan.github.io/cryomongo/Mongo/Collection.html\" target=\"_blank\">documentation</a>.","summary":"<p>Deletes one document.</p>","abstract":false,"args":[{"name":"filter","external_name":"filter","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"collation","default_value":"nil","external_name":"collation","restriction":"Mongo::Collation | ::Nil"},{"name":"hint","default_value":"nil","external_name":"hint","restriction":"String | Hash | NamedTuple | ::Nil"},{"name":"ordered","default_value":"nil","external_name":"ordered","restriction":"Bool | ::Nil"},{"name":"write_concern","default_value":"nil","external_name":"write_concern","restriction":"Mongo::WriteConcern | ::Nil"},{"name":"session","default_value":"nil","external_name":"session","restriction":"Mongo::Session::ClientSession | ::Nil"}],"args_string":"(filter, *, collation : Mongo::Collation | Nil = nil, hint : String | Hash | NamedTuple | Nil = nil, ordered : Bool | Nil = nil, write_concern : Mongo::WriteConcern | Nil = nil, session : Mongo::Session::ClientSession | Nil = nil) : Mongo::Commands::Common::DeleteResult | Nil","args_html":"(filter, *, collation : Mongo::Collation | Nil = <span class=\"n\">nil</span>, hint : String | Hash | NamedTuple | Nil = <span class=\"n\">nil</span>, ordered : Bool | Nil = <span class=\"n\">nil</span>, write_concern : Mongo::WriteConcern | Nil = <span class=\"n\">nil</span>, session : Mongo::Session::ClientSession | Nil = <span class=\"n\">nil</span>) : Mongo::Commands::Common::DeleteResult | Nil","location":{"filename":"src/dynfork/commons/one.cr","line_number":212,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/commons/one.cr#L212"},"def":{"name":"delete_one","args":[{"name":"filter","external_name":"filter","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"collation","default_value":"nil","external_name":"collation","restriction":"Mongo::Collation | ::Nil"},{"name":"hint","default_value":"nil","external_name":"hint","restriction":"String | Hash | NamedTuple | ::Nil"},{"name":"ordered","default_value":"nil","external_name":"ordered","restriction":"Bool | ::Nil"},{"name":"write_concern","default_value":"nil","external_name":"write_concern","restriction":"Mongo::WriteConcern | ::Nil"},{"name":"session","default_value":"nil","external_name":"session","restriction":"Mongo::Session::ClientSession | ::Nil"}],"splat_index":1,"return_type":"Mongo::Commands::Common::DeleteResult | ::Nil","visibility":"Public","body":"if @@meta.not_nil![:\"migrat_model?\"]\nelse\n  raise(DynFork::Errors::Panic.new(\"Model : `#{@@full_model_name}` > Param: `migrat_model?` => \" + \"This Model is not migrated to the database!\"))\nend\ncollection : Mongo::Collection = DynFork::Globals.mongo_database[@@meta.not_nil![:collection_name]]\ncollection.delete_one(filter: filter, collation: collation, hint: hint, ordered: ordered, write_concern: write_concern, session: session)\n"}},{"html_id":"find_one_and_delete(filter,*,sort=nil,fields=nil,bypass_document_validation:Bool|Nil=nil,write_concern:Mongo::WriteConcern|Nil=nil,collation:Mongo::Collation|Nil=nil,hint:String|Hash|NamedTuple|Nil=nil,max_time_ms:Int64|Nil=nil,session:Mongo::Session::ClientSession|Nil=nil):self|Nil-instance-method","name":"find_one_and_delete","doc":"Finds a single document and deletes it, returning the original.\nThe document to return may be nil.\nNOTE: For more details, please check the official <a href=\"https://docs.mongodb.com/manual/reference/command/findAndModify/\" target=\"_blank\">documentation</a>.\nNOTE: For more details, please check the cryomongo <a href=\"https://elbywan.github.io/cryomongo/Mongo/Collection.html\" target=\"_blank\">documentation</a>.\n\nExample:\n```\nmodel_name : ModelName? = ModelName.find_one_and_delete({_id: id})\n```\n","summary":"<p>Finds a single document and deletes it, returning the original.</p>","abstract":false,"args":[{"name":"filter","external_name":"filter","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":""},{"name":"fields","default_value":"nil","external_name":"fields","restriction":""},{"name":"bypass_document_validation","default_value":"nil","external_name":"bypass_document_validation","restriction":"Bool | ::Nil"},{"name":"write_concern","default_value":"nil","external_name":"write_concern","restriction":"Mongo::WriteConcern | ::Nil"},{"name":"collation","default_value":"nil","external_name":"collation","restriction":"Mongo::Collation | ::Nil"},{"name":"hint","default_value":"nil","external_name":"hint","restriction":"String | Hash | NamedTuple | ::Nil"},{"name":"max_time_ms","default_value":"nil","external_name":"max_time_ms","restriction":"Int64 | ::Nil"},{"name":"session","default_value":"nil","external_name":"session","restriction":"Mongo::Session::ClientSession | ::Nil"}],"args_string":"(filter, *, sort = nil, fields = nil, bypass_document_validation : Bool | Nil = nil, write_concern : Mongo::WriteConcern | Nil = nil, collation : Mongo::Collation | Nil = nil, hint : String | Hash | NamedTuple | Nil = nil, max_time_ms : Int64 | Nil = nil, session : Mongo::Session::ClientSession | Nil = nil) : self | Nil","args_html":"(filter, *, sort = <span class=\"n\">nil</span>, fields = <span class=\"n\">nil</span>, bypass_document_validation : Bool | Nil = <span class=\"n\">nil</span>, write_concern : Mongo::WriteConcern | Nil = <span class=\"n\">nil</span>, collation : Mongo::Collation | Nil = <span class=\"n\">nil</span>, hint : String | Hash | NamedTuple | Nil = <span class=\"n\">nil</span>, max_time_ms : Int64 | Nil = <span class=\"n\">nil</span>, session : Mongo::Session::ClientSession | Nil = <span class=\"n\">nil</span>) : <span class=\"k\">self</span> | Nil","location":{"filename":"src/dynfork/commons/one.cr","line_number":252,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/commons/one.cr#L252"},"def":{"name":"find_one_and_delete","args":[{"name":"filter","external_name":"filter","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":""},{"name":"fields","default_value":"nil","external_name":"fields","restriction":""},{"name":"bypass_document_validation","default_value":"nil","external_name":"bypass_document_validation","restriction":"Bool | ::Nil"},{"name":"write_concern","default_value":"nil","external_name":"write_concern","restriction":"Mongo::WriteConcern | ::Nil"},{"name":"collation","default_value":"nil","external_name":"collation","restriction":"Mongo::Collation | ::Nil"},{"name":"hint","default_value":"nil","external_name":"hint","restriction":"String | Hash | NamedTuple | ::Nil"},{"name":"max_time_ms","default_value":"nil","external_name":"max_time_ms","restriction":"Int64 | ::Nil"},{"name":"session","default_value":"nil","external_name":"session","restriction":"Mongo::Session::ClientSession | ::Nil"}],"splat_index":1,"return_type":"self | ::Nil","visibility":"Public","body":"if @@meta.not_nil![:\"migrat_model?\"]\nelse\n  raise(DynFork::Errors::Panic.new(\"Model : `#{@@full_model_name}` > Param: `migrat_model?` => \" + \"This Model is not migrated to the database!\"))\nend\ncollection : Mongo::Collection = DynFork::Globals.mongo_database[@@meta.not_nil![:collection_name]]\nif doc : BSON | ::Nil = collection.find_one_and_delete(filter: filter, sort: sort, fields: fields, bypass_document_validation: bypass_document_validation, write_concern: write_concern, collation: collation, hint: hint, max_time_ms: max_time_ms, session: session)\n  instance = self.new\n  instance.refrash_fields(pointerof(doc))\n  return instance\nend\n"}},{"html_id":"find_one_to_hash(filter=BSON.new,*,sort=nil,projection=nil,hint:String|Hash|NamedTuple|Nil=nil,skip:Int32|Nil=nil,comment:String|Nil=nil,max_time_ms:Int64|Nil=nil,read_concern:Mongo::ReadConcern|Nil=nil,max=nil,min=nil,return_key:Bool|Nil=nil,show_record_id:Bool|Nil=nil,oplog_replay:Bool|Nil=nil,no_cursor_timeout:Bool|Nil=nil,allow_partial_results:Bool|Nil=nil,collation:Mongo::Collation|Nil=nil,read_preference:Mongo::ReadPreference|Nil=nil,session:Mongo::Session::ClientSession|Nil=nil):Hash(String,DynFork::Globals::FieldValueTypes)|Nil-instance-method","name":"find_one_to_hash","doc":"Find the document and convert it to a Hash object.\nNOTE: For more details, please check the official <a href=\"https://docs.mongodb.com/manual/reference/command/find/\" target=\"_blank\">documentation</a>.\nNOTE: For more details, please check the cryomongo <a href=\"https://elbywan.github.io/cryomongo/Mongo/Collection.html\" target=\"_blank\">documentation</a>.\n\nExample:\n```\ndoc_hash : Hash(String, DynFork::Globals::FieldValueTypes)? = ModelName.find_one_to_hash({_id: id})\n```\n","summary":"<p>Find the document and convert it to a Hash object.</p>","abstract":false,"args":[{"name":"filter","default_value":"BSON.new","external_name":"filter","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":""},{"name":"projection","default_value":"nil","external_name":"projection","restriction":""},{"name":"hint","default_value":"nil","external_name":"hint","restriction":"String | Hash | NamedTuple | ::Nil"},{"name":"skip","default_value":"nil","external_name":"skip","restriction":"Int32 | ::Nil"},{"name":"comment","default_value":"nil","external_name":"comment","restriction":"String | ::Nil"},{"name":"max_time_ms","default_value":"nil","external_name":"max_time_ms","restriction":"Int64 | ::Nil"},{"name":"read_concern","default_value":"nil","external_name":"read_concern","restriction":"Mongo::ReadConcern | ::Nil"},{"name":"max","default_value":"nil","external_name":"max","restriction":""},{"name":"min","default_value":"nil","external_name":"min","restriction":""},{"name":"return_key","default_value":"nil","external_name":"return_key","restriction":"Bool | ::Nil"},{"name":"show_record_id","default_value":"nil","external_name":"show_record_id","restriction":"Bool | ::Nil"},{"name":"oplog_replay","default_value":"nil","external_name":"oplog_replay","restriction":"Bool | ::Nil"},{"name":"no_cursor_timeout","default_value":"nil","external_name":"no_cursor_timeout","restriction":"Bool | ::Nil"},{"name":"allow_partial_results","default_value":"nil","external_name":"allow_partial_results","restriction":"Bool | ::Nil"},{"name":"collation","default_value":"nil","external_name":"collation","restriction":"Mongo::Collation | ::Nil"},{"name":"read_preference","default_value":"nil","external_name":"read_preference","restriction":"Mongo::ReadPreference | ::Nil"},{"name":"session","default_value":"nil","external_name":"session","restriction":"Mongo::Session::ClientSession | ::Nil"}],"args_string":"(filter = BSON.new, *, sort = nil, projection = nil, hint : String | Hash | NamedTuple | Nil = nil, skip : Int32 | Nil = nil, comment : String | Nil = nil, max_time_ms : Int64 | Nil = nil, read_concern : Mongo::ReadConcern | Nil = nil, max = nil, min = nil, return_key : Bool | Nil = nil, show_record_id : Bool | Nil = nil, oplog_replay : Bool | Nil = nil, no_cursor_timeout : Bool | Nil = nil, allow_partial_results : Bool | Nil = nil, collation : Mongo::Collation | Nil = nil, read_preference : Mongo::ReadPreference | Nil = nil, session : Mongo::Session::ClientSession | Nil = nil) : Hash(String, DynFork::Globals::FieldValueTypes) | Nil","args_html":"(filter = <span class=\"t\">BSON</span>.new, *, sort = <span class=\"n\">nil</span>, projection = <span class=\"n\">nil</span>, hint : String | Hash | NamedTuple | Nil = <span class=\"n\">nil</span>, skip : Int32 | Nil = <span class=\"n\">nil</span>, comment : String | Nil = <span class=\"n\">nil</span>, max_time_ms : Int64 | Nil = <span class=\"n\">nil</span>, read_concern : Mongo::ReadConcern | Nil = <span class=\"n\">nil</span>, max = <span class=\"n\">nil</span>, min = <span class=\"n\">nil</span>, return_key : Bool | Nil = <span class=\"n\">nil</span>, show_record_id : Bool | Nil = <span class=\"n\">nil</span>, oplog_replay : Bool | Nil = <span class=\"n\">nil</span>, no_cursor_timeout : Bool | Nil = <span class=\"n\">nil</span>, allow_partial_results : Bool | Nil = <span class=\"n\">nil</span>, collation : Mongo::Collation | Nil = <span class=\"n\">nil</span>, read_preference : Mongo::ReadPreference | Nil = <span class=\"n\">nil</span>, session : Mongo::Session::ClientSession | Nil = <span class=\"n\">nil</span>) : Hash(String, <a href=\"../../DynFork/Globals/Aliases/FieldValueTypes.html\">DynFork::Globals::FieldValueTypes</a>) | Nil","location":{"filename":"src/dynfork/commons/one.cr","line_number":81,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/commons/one.cr#L81"},"def":{"name":"find_one_to_hash","args":[{"name":"filter","default_value":"BSON.new","external_name":"filter","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":""},{"name":"projection","default_value":"nil","external_name":"projection","restriction":""},{"name":"hint","default_value":"nil","external_name":"hint","restriction":"String | Hash | NamedTuple | ::Nil"},{"name":"skip","default_value":"nil","external_name":"skip","restriction":"Int32 | ::Nil"},{"name":"comment","default_value":"nil","external_name":"comment","restriction":"String | ::Nil"},{"name":"max_time_ms","default_value":"nil","external_name":"max_time_ms","restriction":"Int64 | ::Nil"},{"name":"read_concern","default_value":"nil","external_name":"read_concern","restriction":"Mongo::ReadConcern | ::Nil"},{"name":"max","default_value":"nil","external_name":"max","restriction":""},{"name":"min","default_value":"nil","external_name":"min","restriction":""},{"name":"return_key","default_value":"nil","external_name":"return_key","restriction":"Bool | ::Nil"},{"name":"show_record_id","default_value":"nil","external_name":"show_record_id","restriction":"Bool | ::Nil"},{"name":"oplog_replay","default_value":"nil","external_name":"oplog_replay","restriction":"Bool | ::Nil"},{"name":"no_cursor_timeout","default_value":"nil","external_name":"no_cursor_timeout","restriction":"Bool | ::Nil"},{"name":"allow_partial_results","default_value":"nil","external_name":"allow_partial_results","restriction":"Bool | ::Nil"},{"name":"collation","default_value":"nil","external_name":"collation","restriction":"Mongo::Collation | ::Nil"},{"name":"read_preference","default_value":"nil","external_name":"read_preference","restriction":"Mongo::ReadPreference | ::Nil"},{"name":"session","default_value":"nil","external_name":"session","restriction":"Mongo::Session::ClientSession | ::Nil"}],"splat_index":1,"return_type":"Hash(String, DynFork::Globals::FieldValueTypes) | ::Nil","visibility":"Public","body":"if @@meta.not_nil![:\"migrat_model?\"]\nelse\n  raise(DynFork::Errors::Panic.new(\"Model : `#{@@full_model_name}` > Param: `migrat_model?` => \" + \"This Model is not migrated to the database!\"))\nend\ncollection : Mongo::Collection = DynFork::Globals.mongo_database[@@meta.not_nil![:collection_name]]\nif doc : BSON | ::Nil = collection.find_one(filter: filter, sort: sort, projection: projection, hint: hint, skip: skip, comment: comment, max_time_ms: max_time_ms, read_concern: read_concern, max: max, min: min, return_key: return_key, show_record_id: show_record_id, oplog_replay: oplog_replay, no_cursor_timeout: no_cursor_timeout, allow_partial_results: allow_partial_results, collation: collation, read_preference: read_preference, session: session)\n  doc_bson : BSON = doc.not_nil!\n  field_name_params_list = @@meta.not_nil![:field_name_params_list]\n  field_name_params_list_ptr = pointerof(field_name_params_list)\n  doc_hash = self.document_to_hash(pointerof(doc_bson), field_name_params_list_ptr)\n  return doc_hash\nend\n"}},{"html_id":"find_one_to_instance(filter=BSON.new,*,sort=nil,projection=nil,hint:String|Hash|NamedTuple|Nil=nil,skip:Int32|Nil=nil,comment:String|Nil=nil,max_time_ms:Int64|Nil=nil,read_concern:Mongo::ReadConcern|Nil=nil,max=nil,min=nil,return_key:Bool|Nil=nil,show_record_id:Bool|Nil=nil,oplog_replay:Bool|Nil=nil,no_cursor_timeout:Bool|Nil=nil,allow_partial_results:Bool|Nil=nil,collation:Mongo::Collation|Nil=nil,read_preference:Mongo::ReadPreference|Nil=nil,session:Mongo::Session::ClientSession|Nil=nil):self|Nil-instance-method","name":"find_one_to_instance","doc":"Finds the document and converts it to a Model instance.\nNOTE: For more details, please check the official <a href=\"https://docs.mongodb.com/manual/reference/command/find/\" target=\"_blank\">documentation</a>.\nNOTE: For more details, please check the cryomongo <a href=\"https://elbywan.github.io/cryomongo/Mongo/Collection.html\" target=\"_blank\">documentation</a>.\n\nExample:\n```\nmodel_name : ModelName? = ModelName.find_one_to_instance({_id: id})\n```\n","summary":"<p>Finds the document and converts it to a Model instance.</p>","abstract":false,"args":[{"name":"filter","default_value":"BSON.new","external_name":"filter","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":""},{"name":"projection","default_value":"nil","external_name":"projection","restriction":""},{"name":"hint","default_value":"nil","external_name":"hint","restriction":"String | Hash | NamedTuple | ::Nil"},{"name":"skip","default_value":"nil","external_name":"skip","restriction":"Int32 | ::Nil"},{"name":"comment","default_value":"nil","external_name":"comment","restriction":"String | ::Nil"},{"name":"max_time_ms","default_value":"nil","external_name":"max_time_ms","restriction":"Int64 | ::Nil"},{"name":"read_concern","default_value":"nil","external_name":"read_concern","restriction":"Mongo::ReadConcern | ::Nil"},{"name":"max","default_value":"nil","external_name":"max","restriction":""},{"name":"min","default_value":"nil","external_name":"min","restriction":""},{"name":"return_key","default_value":"nil","external_name":"return_key","restriction":"Bool | ::Nil"},{"name":"show_record_id","default_value":"nil","external_name":"show_record_id","restriction":"Bool | ::Nil"},{"name":"oplog_replay","default_value":"nil","external_name":"oplog_replay","restriction":"Bool | ::Nil"},{"name":"no_cursor_timeout","default_value":"nil","external_name":"no_cursor_timeout","restriction":"Bool | ::Nil"},{"name":"allow_partial_results","default_value":"nil","external_name":"allow_partial_results","restriction":"Bool | ::Nil"},{"name":"collation","default_value":"nil","external_name":"collation","restriction":"Mongo::Collation | ::Nil"},{"name":"read_preference","default_value":"nil","external_name":"read_preference","restriction":"Mongo::ReadPreference | ::Nil"},{"name":"session","default_value":"nil","external_name":"session","restriction":"Mongo::Session::ClientSession | ::Nil"}],"args_string":"(filter = BSON.new, *, sort = nil, projection = nil, hint : String | Hash | NamedTuple | Nil = nil, skip : Int32 | Nil = nil, comment : String | Nil = nil, max_time_ms : Int64 | Nil = nil, read_concern : Mongo::ReadConcern | Nil = nil, max = nil, min = nil, return_key : Bool | Nil = nil, show_record_id : Bool | Nil = nil, oplog_replay : Bool | Nil = nil, no_cursor_timeout : Bool | Nil = nil, allow_partial_results : Bool | Nil = nil, collation : Mongo::Collation | Nil = nil, read_preference : Mongo::ReadPreference | Nil = nil, session : Mongo::Session::ClientSession | Nil = nil) : self | Nil","args_html":"(filter = <span class=\"t\">BSON</span>.new, *, sort = <span class=\"n\">nil</span>, projection = <span class=\"n\">nil</span>, hint : String | Hash | NamedTuple | Nil = <span class=\"n\">nil</span>, skip : Int32 | Nil = <span class=\"n\">nil</span>, comment : String | Nil = <span class=\"n\">nil</span>, max_time_ms : Int64 | Nil = <span class=\"n\">nil</span>, read_concern : Mongo::ReadConcern | Nil = <span class=\"n\">nil</span>, max = <span class=\"n\">nil</span>, min = <span class=\"n\">nil</span>, return_key : Bool | Nil = <span class=\"n\">nil</span>, show_record_id : Bool | Nil = <span class=\"n\">nil</span>, oplog_replay : Bool | Nil = <span class=\"n\">nil</span>, no_cursor_timeout : Bool | Nil = <span class=\"n\">nil</span>, allow_partial_results : Bool | Nil = <span class=\"n\">nil</span>, collation : Mongo::Collation | Nil = <span class=\"n\">nil</span>, read_preference : Mongo::ReadPreference | Nil = <span class=\"n\">nil</span>, session : Mongo::Session::ClientSession | Nil = <span class=\"n\">nil</span>) : <span class=\"k\">self</span> | Nil","location":{"filename":"src/dynfork/commons/one.cr","line_number":14,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/commons/one.cr#L14"},"def":{"name":"find_one_to_instance","args":[{"name":"filter","default_value":"BSON.new","external_name":"filter","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":""},{"name":"projection","default_value":"nil","external_name":"projection","restriction":""},{"name":"hint","default_value":"nil","external_name":"hint","restriction":"String | Hash | NamedTuple | ::Nil"},{"name":"skip","default_value":"nil","external_name":"skip","restriction":"Int32 | ::Nil"},{"name":"comment","default_value":"nil","external_name":"comment","restriction":"String | ::Nil"},{"name":"max_time_ms","default_value":"nil","external_name":"max_time_ms","restriction":"Int64 | ::Nil"},{"name":"read_concern","default_value":"nil","external_name":"read_concern","restriction":"Mongo::ReadConcern | ::Nil"},{"name":"max","default_value":"nil","external_name":"max","restriction":""},{"name":"min","default_value":"nil","external_name":"min","restriction":""},{"name":"return_key","default_value":"nil","external_name":"return_key","restriction":"Bool | ::Nil"},{"name":"show_record_id","default_value":"nil","external_name":"show_record_id","restriction":"Bool | ::Nil"},{"name":"oplog_replay","default_value":"nil","external_name":"oplog_replay","restriction":"Bool | ::Nil"},{"name":"no_cursor_timeout","default_value":"nil","external_name":"no_cursor_timeout","restriction":"Bool | ::Nil"},{"name":"allow_partial_results","default_value":"nil","external_name":"allow_partial_results","restriction":"Bool | ::Nil"},{"name":"collation","default_value":"nil","external_name":"collation","restriction":"Mongo::Collation | ::Nil"},{"name":"read_preference","default_value":"nil","external_name":"read_preference","restriction":"Mongo::ReadPreference | ::Nil"},{"name":"session","default_value":"nil","external_name":"session","restriction":"Mongo::Session::ClientSession | ::Nil"}],"splat_index":1,"return_type":"self | ::Nil","visibility":"Public","body":"if @@meta.not_nil![:\"migrat_model?\"]\nelse\n  raise(DynFork::Errors::Panic.new(\"Model : `#{@@full_model_name}` > Param: `migrat_model?` => \" + \"This Model is not migrated to the database!\"))\nend\ncollection : Mongo::Collection = DynFork::Globals.mongo_database[@@meta.not_nil![:collection_name]]\nif doc : BSON | ::Nil = collection.find_one(filter: filter, sort: sort, projection: projection, hint: hint, skip: skip, comment: comment, max_time_ms: max_time_ms, read_concern: read_concern, max: max, min: min, return_key: return_key, show_record_id: show_record_id, oplog_replay: oplog_replay, no_cursor_timeout: no_cursor_timeout, allow_partial_results: allow_partial_results, collation: collation, read_preference: read_preference, session: session)\n  instance = self.new\n  instance.refrash_fields(pointerof(doc))\n  return instance\nend\n"}},{"html_id":"find_one_to_json(filter=BSON.new,*,sort=nil,projection=nil,hint:String|Hash|NamedTuple|Nil=nil,skip:Int32|Nil=nil,comment:String|Nil=nil,max_time_ms:Int64|Nil=nil,read_concern:Mongo::ReadConcern|Nil=nil,max=nil,min=nil,return_key:Bool|Nil=nil,show_record_id:Bool|Nil=nil,oplog_replay:Bool|Nil=nil,no_cursor_timeout:Bool|Nil=nil,allow_partial_results:Bool|Nil=nil,collation:Mongo::Collation|Nil=nil,read_preference:Mongo::ReadPreference|Nil=nil,session:Mongo::Session::ClientSession|Nil=nil):String|Nil-instance-method","name":"find_one_to_json","doc":"Finds the document and converts it to a json string.\nNOTE: For more details, please check the official <a href=\"https://docs.mongodb.com/manual/reference/command/find/\" target=\"_blank\">documentation</a>.\nNOTE: For more details, please check the cryomongo <a href=\"https://elbywan.github.io/cryomongo/Mongo/Collection.html\" target=\"_blank\">documentation</a>.\n\nExample:\n```\njson_str : String? = ModelName.find_one_to_json({_id: id})\n```\n","summary":"<p>Finds the document and converts it to a json string.</p>","abstract":false,"args":[{"name":"filter","default_value":"BSON.new","external_name":"filter","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":""},{"name":"projection","default_value":"nil","external_name":"projection","restriction":""},{"name":"hint","default_value":"nil","external_name":"hint","restriction":"String | Hash | NamedTuple | ::Nil"},{"name":"skip","default_value":"nil","external_name":"skip","restriction":"Int32 | ::Nil"},{"name":"comment","default_value":"nil","external_name":"comment","restriction":"String | ::Nil"},{"name":"max_time_ms","default_value":"nil","external_name":"max_time_ms","restriction":"Int64 | ::Nil"},{"name":"read_concern","default_value":"nil","external_name":"read_concern","restriction":"Mongo::ReadConcern | ::Nil"},{"name":"max","default_value":"nil","external_name":"max","restriction":""},{"name":"min","default_value":"nil","external_name":"min","restriction":""},{"name":"return_key","default_value":"nil","external_name":"return_key","restriction":"Bool | ::Nil"},{"name":"show_record_id","default_value":"nil","external_name":"show_record_id","restriction":"Bool | ::Nil"},{"name":"oplog_replay","default_value":"nil","external_name":"oplog_replay","restriction":"Bool | ::Nil"},{"name":"no_cursor_timeout","default_value":"nil","external_name":"no_cursor_timeout","restriction":"Bool | ::Nil"},{"name":"allow_partial_results","default_value":"nil","external_name":"allow_partial_results","restriction":"Bool | ::Nil"},{"name":"collation","default_value":"nil","external_name":"collation","restriction":"Mongo::Collation | ::Nil"},{"name":"read_preference","default_value":"nil","external_name":"read_preference","restriction":"Mongo::ReadPreference | ::Nil"},{"name":"session","default_value":"nil","external_name":"session","restriction":"Mongo::Session::ClientSession | ::Nil"}],"args_string":"(filter = BSON.new, *, sort = nil, projection = nil, hint : String | Hash | NamedTuple | Nil = nil, skip : Int32 | Nil = nil, comment : String | Nil = nil, max_time_ms : Int64 | Nil = nil, read_concern : Mongo::ReadConcern | Nil = nil, max = nil, min = nil, return_key : Bool | Nil = nil, show_record_id : Bool | Nil = nil, oplog_replay : Bool | Nil = nil, no_cursor_timeout : Bool | Nil = nil, allow_partial_results : Bool | Nil = nil, collation : Mongo::Collation | Nil = nil, read_preference : Mongo::ReadPreference | Nil = nil, session : Mongo::Session::ClientSession | Nil = nil) : String | Nil","args_html":"(filter = <span class=\"t\">BSON</span>.new, *, sort = <span class=\"n\">nil</span>, projection = <span class=\"n\">nil</span>, hint : String | Hash | NamedTuple | Nil = <span class=\"n\">nil</span>, skip : Int32 | Nil = <span class=\"n\">nil</span>, comment : String | Nil = <span class=\"n\">nil</span>, max_time_ms : Int64 | Nil = <span class=\"n\">nil</span>, read_concern : Mongo::ReadConcern | Nil = <span class=\"n\">nil</span>, max = <span class=\"n\">nil</span>, min = <span class=\"n\">nil</span>, return_key : Bool | Nil = <span class=\"n\">nil</span>, show_record_id : Bool | Nil = <span class=\"n\">nil</span>, oplog_replay : Bool | Nil = <span class=\"n\">nil</span>, no_cursor_timeout : Bool | Nil = <span class=\"n\">nil</span>, allow_partial_results : Bool | Nil = <span class=\"n\">nil</span>, collation : Mongo::Collation | Nil = <span class=\"n\">nil</span>, read_preference : Mongo::ReadPreference | Nil = <span class=\"n\">nil</span>, session : Mongo::Session::ClientSession | Nil = <span class=\"n\">nil</span>) : String | Nil","location":{"filename":"src/dynfork/commons/one.cr","line_number":150,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/commons/one.cr#L150"},"def":{"name":"find_one_to_json","args":[{"name":"filter","default_value":"BSON.new","external_name":"filter","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"sort","default_value":"nil","external_name":"sort","restriction":""},{"name":"projection","default_value":"nil","external_name":"projection","restriction":""},{"name":"hint","default_value":"nil","external_name":"hint","restriction":"String | Hash | NamedTuple | ::Nil"},{"name":"skip","default_value":"nil","external_name":"skip","restriction":"Int32 | ::Nil"},{"name":"comment","default_value":"nil","external_name":"comment","restriction":"String | ::Nil"},{"name":"max_time_ms","default_value":"nil","external_name":"max_time_ms","restriction":"Int64 | ::Nil"},{"name":"read_concern","default_value":"nil","external_name":"read_concern","restriction":"Mongo::ReadConcern | ::Nil"},{"name":"max","default_value":"nil","external_name":"max","restriction":""},{"name":"min","default_value":"nil","external_name":"min","restriction":""},{"name":"return_key","default_value":"nil","external_name":"return_key","restriction":"Bool | ::Nil"},{"name":"show_record_id","default_value":"nil","external_name":"show_record_id","restriction":"Bool | ::Nil"},{"name":"oplog_replay","default_value":"nil","external_name":"oplog_replay","restriction":"Bool | ::Nil"},{"name":"no_cursor_timeout","default_value":"nil","external_name":"no_cursor_timeout","restriction":"Bool | ::Nil"},{"name":"allow_partial_results","default_value":"nil","external_name":"allow_partial_results","restriction":"Bool | ::Nil"},{"name":"collation","default_value":"nil","external_name":"collation","restriction":"Mongo::Collation | ::Nil"},{"name":"read_preference","default_value":"nil","external_name":"read_preference","restriction":"Mongo::ReadPreference | ::Nil"},{"name":"session","default_value":"nil","external_name":"session","restriction":"Mongo::Session::ClientSession | ::Nil"}],"splat_index":1,"return_type":"String | ::Nil","visibility":"Public","body":"if @@meta.not_nil![:\"migrat_model?\"]\nelse\n  raise(DynFork::Errors::Panic.new(\"Model : `#{@@full_model_name}` > Param: `migrat_model?` => \" + \"This Model is not migrated to the database!\"))\nend\ncollection : Mongo::Collection = DynFork::Globals.mongo_database[@@meta.not_nil![:collection_name]]\nif doc : BSON | ::Nil = collection.find_one(filter: filter, sort: sort, projection: projection, hint: hint, skip: skip, comment: comment, max_time_ms: max_time_ms, read_concern: read_concern, max: max, min: min, return_key: return_key, show_record_id: show_record_id, oplog_replay: oplog_replay, no_cursor_timeout: no_cursor_timeout, allow_partial_results: allow_partial_results, collation: collation, read_preference: read_preference, session: session)\n  instance = self.new\n  instance.refrash_fields(pointerof(doc))\n  json : String = instance.to_json\n  return json\nend\n"}}]},{"html_id":"dynfork/DynFork/QCommons/UnitsManagement","path":"DynFork/QCommons/UnitsManagement.html","kind":"module","full_name":"DynFork::QCommons::UnitsManagement","name":"UnitsManagement","abstract":false,"locations":[{"filename":"src/dynfork/commons/unit.cr","line_number":3,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/commons/unit.cr#L3"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"extended_modules":[{"html_id":"dynfork/DynFork/QCommons/UnitsManagement","kind":"module","full_name":"DynFork::QCommons::UnitsManagement","name":"UnitsManagement"}],"including_types":[{"html_id":"dynfork/DynFork/QCommons","kind":"module","full_name":"DynFork::QCommons","name":"QCommons"}],"namespace":{"html_id":"dynfork/DynFork/QCommons","kind":"module","full_name":"DynFork::QCommons","name":"QCommons"},"doc":"Units Management.\nNOTE: Management for `choices` parameter in dynamic field types.","summary":"<p>Units Management.</p>","instance_methods":[{"html_id":"unit_manager(unit:DynFork::Globals::Unit):Nil-instance-method","name":"unit_manager","doc":"For insert or delete units.\nNOTE: Management for `choices` parameter in dynamic field types.\n\nExample:\n```\n@[DynFork::Meta(service_name: \"TestModel\")]\nstruct ModelName < DynFork::Model\n  getter choice_text_dyn = DynFork::Fields::ChoiceTextDynField.new\n  getter choice_text_mult_dyn = DynFork::Fields::ChoiceTextMultDynField.new\n  getter choice_i64_dyn = DynFork::Fields::ChoiceI64DynField.new\n  getter choice_i64_mult_dyn = DynFork::Fields::ChoiceI64MultDynField.new\n  getter choice_f64_dyn = DynFork::Fields::ChoiceF64DynField.new\n  getter choice_f64_mult_dyn = DynFork::Fields::ChoiceF64MultDynField.new\nend\n\nunit = DynFork::Globals::Unit.new(\n  field: \"field_name\",\n  title: \"Title\",\n  value: \"value\", # String | Int64 | Float64\n  delete: false   # default is the same as `false`\n)\n\nModelName.unit_manager unit\n```\n","summary":"<p>For insert or delete units.</p>","abstract":false,"args":[{"name":"unit","external_name":"unit","restriction":"DynFork::Globals::Unit"}],"args_string":"(unit : DynFork::Globals::Unit) : Nil","args_html":"(unit : <a href=\"../../DynFork/Globals/Types/Unit.html\">DynFork::Globals::Unit</a>) : Nil","location":{"filename":"src/dynfork/commons/unit.cr","line_number":31,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/commons/unit.cr#L31"},"def":{"name":"unit_manager","args":[{"name":"unit","external_name":"unit","restriction":"DynFork::Globals::Unit"}],"return_type":"Nil","visibility":"Public","body":"if @@meta.not_nil![:\"migrat_model?\"]\nelse\n  raise(DynFork::Errors::Panic.new(\"Model : `#{@@full_model_name}` > Param: `migrat_model?` => \" + \"This Model is not migrated to the database!\"))\nend\nif unit.field.empty?\n  self.error_empty_field(\"field\")\nend\nif unit.title.empty?\n  self.error_empty_field(\"title\")\nend\nif unit.value.is_a?(String) && unit.value.to_s.empty?\n  self.error_empty_field(\"value\")\nend\nsuper_collection = DynFork::Globals.mongo_database[DynFork::Globals.super_collection_name]\nmodel_state : DynFork::Migration::ModelState = (document = super_collection.find_one(filter: {collection_name: @@meta.not_nil![:collection_name]})\nDynFork::Migration::ModelState.from_bson(document.not_nil!))\nif model_state.data_dynamic_fields.has_key?(unit.field)\nelse\n  self.error_field_missing(unit.field)\nend\ndyn_field_type : String = model_state.field_name_and_type_list[unit.field]\ndata_df_json : String = model_state.data_dynamic_fields[unit.field]\nkey_exists? : Bool = false\nvalue_match? : Bool = true\nchoices : Array(Tuple(Float64 | Int64 | String, String)) = (if dyn_field_type.includes?(\"Text\")\n  choices_text = Array(Tuple(String, String)).from_json(data_df_json)\n  key_exists? = (choices_text.map do |item|\n    item[1]\n  end).includes?(unit.title)\n  if unit.delete?\n    (value_match? = choices_text.includes?({unit.value.to_s, unit.title}))\n  end\n  choices_text.map do |item|\n    {item[0].as(Float64 | Int64 | String), item[1]}\n  end\nelse\n  if dyn_field_type.includes?(\"I64\")\n    choices_i64 = Array(Tuple(Int64, String)).from_json(data_df_json)\n    key_exists? = (choices_i64.map do |item|\n      item[1]\n    end).includes?(unit.title)\n    if unit.delete?\n      (value_match? = choices_i64.includes?({unit.value.to_i64, unit.title}))\n    end\n    choices_i64.map do |item|\n      {item[0].as(Float64 | Int64 | String), item[1]}\n    end\n  else\n    if dyn_field_type.includes?(\"F64\")\n      choices_f64 = Array(Tuple(Float64, String)).from_json(data_df_json)\n      key_exists? = (choices_f64.map do |item|\n        item[1]\n      end).includes?(unit.title)\n      if unit.delete?\n        (value_match? = choices_f64.includes?({unit.value.to_f64, unit.title}))\n      end\n      choices_f64.map do |item|\n        {item[0].as(Float64 | Int64 | String), item[1]}\n      end\n    else\n      self.error_invalid_field_type(dyn_field_type)\n    end\n  end\nend)\nchoices_json : String = \"\"\nif !unit.delete?\n  if key_exists?\n    self.error_key_already_exists(unit.title)\n  end\n  choices << {unit.value, unit.title}\n  choices_json = choices.to_json\n  model_state.data_dynamic_fields[unit.field] = choices_json\nelse\n  if key_exists?\n  else\n    self.error_key_missing(unit.title)\n  end\n  if value_match?\n  else\n    self.error_value_not_match(unit.title, unit.value)\n  end\n  choices.select! do |item|\n    item[1] != unit.title\n  end\n  choices_json = choices.to_json\n  model_state.data_dynamic_fields[unit.field] = choices_json\nend\nsuper_collection.replace_one(filter: {collection_name: model_state.collection_name}, replacement: model_state.to_bson)\n@@meta.not_nil![:data_dynamic_fields][unit.field] = choices_json\nif unit.delete?\n  collection : Mongo::Collection = DynFork::Globals.mongo_database[@@meta.not_nil![:collection_name]]\n  cursor : Mongo::Cursor = collection.find\n  cursor.each do |doc|\n    doc_h = doc.to_h\n    if !(value = doc_h[unit.field]).nil?\n      if dyn_field_type.includes?(\"Mult\")\n        if dyn_field_type.includes?(\"Text\")\n          arr = (value.as(Array(BSON::RecursiveValue))).map do |item|\n            item.as(String)\n          end\n          arr.delete(unit.value.to_s)\n          doc[unit.field] = !arr.empty? ? arr : nil\n        else\n          if dyn_field_type.includes?(\"I64\")\n            arr = (value.as(Array(BSON::RecursiveValue))).map do |item|\n              item.as(Int64)\n            end\n            arr.delete(unit.value.to_i64)\n            doc[unit.field] = !arr.empty? ? arr : nil\n          else\n            if dyn_field_type.includes?(\"F64\")\n              arr = (value.as(Array(BSON::RecursiveValue))).map do |item|\n                item.as(Float64)\n              end\n              arr.delete(unit.value.to_f64)\n              doc[unit.field] = !arr.empty? ? arr : nil\n            else\n              self.error_invalid_field_type(dyn_field_type)\n            end\n          end\n        end\n      else\n        doc[unit.field] = nil\n      end\n    end\n    collection.replace_one(filter: {_id: doc[\"_id\"]}, replacement: doc)\n  end\nend\n"}}]}]},{"html_id":"dynfork/DynFork/QPaladins","path":"DynFork/QPaladins.html","kind":"module","full_name":"DynFork::QPaladins","name":"QPaladins","abstract":false,"ancestors":[{"html_id":"dynfork/DynFork/QPaladins/Fixtures","kind":"module","full_name":"DynFork::QPaladins::Fixtures","name":"Fixtures"},{"html_id":"dynfork/DynFork/QPaladins/Save","kind":"module","full_name":"DynFork::QPaladins::Save","name":"Save"},{"html_id":"dynfork/DynFork/QPaladins/Password","kind":"module","full_name":"DynFork::QPaladins::Password","name":"Password"},{"html_id":"dynfork/DynFork/QPaladins/Check","kind":"module","full_name":"DynFork::QPaladins::Check","name":"Check"},{"html_id":"dynfork/DynFork/QPaladins/Groups","kind":"module","full_name":"DynFork::QPaladins::Groups","name":"Groups"},{"html_id":"dynfork/DynFork/QPaladins/Caching","kind":"module","full_name":"DynFork::QPaladins::Caching","name":"Caching"},{"html_id":"dynfork/DynFork/QPaladins/Tools","kind":"module","full_name":"DynFork::QPaladins::Tools","name":"Tools"}],"locations":[{"filename":"src/dynfork/paladins/paladins.cr","line_number":9,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/paladins/paladins.cr#L9"},{"filename":"src/dynfork/paladins/tools.cr","line_number":2,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/paladins/tools.cr#L2"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"dynfork/DynFork/QPaladins/Caching","kind":"module","full_name":"DynFork::QPaladins::Caching","name":"Caching"},{"html_id":"dynfork/DynFork/QPaladins/Check","kind":"module","full_name":"DynFork::QPaladins::Check","name":"Check"},{"html_id":"dynfork/DynFork/QPaladins/Fixtures","kind":"module","full_name":"DynFork::QPaladins::Fixtures","name":"Fixtures"},{"html_id":"dynfork/DynFork/QPaladins/Password","kind":"module","full_name":"DynFork::QPaladins::Password","name":"Password"},{"html_id":"dynfork/DynFork/QPaladins/Save","kind":"module","full_name":"DynFork::QPaladins::Save","name":"Save"},{"html_id":"dynfork/DynFork/QPaladins/Tools","kind":"module","full_name":"DynFork::QPaladins::Tools","name":"Tools"}],"including_types":[{"html_id":"dynfork/DynFork/Model","kind":"struct","full_name":"DynFork::Model","name":"Model"}],"namespace":{"html_id":"dynfork/DynFork","kind":"module","full_name":"DynFork","name":"DynFork"},"doc":"Paladins - Model instance methods.","summary":"<p>Paladins - Model instance methods.</p>","types":[{"html_id":"dynfork/DynFork/QPaladins/Caching","path":"DynFork/QPaladins/Caching.html","kind":"module","full_name":"DynFork::QPaladins::Caching","name":"Caching","abstract":false,"locations":[{"filename":"src/dynfork/paladins/caching.cr","line_number":2,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/paladins/caching.cr#L2"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"dynfork/DynFork/QPaladins","kind":"module","full_name":"DynFork::QPaladins","name":"QPaladins"}],"namespace":{"html_id":"dynfork/DynFork/QPaladins","kind":"module","full_name":"DynFork::QPaladins","name":"QPaladins"},"doc":"For caching Model metadata.","summary":"<p>For caching Model metadata.</p>"},{"html_id":"dynfork/DynFork/QPaladins/Check","path":"DynFork/QPaladins/Check.html","kind":"module","full_name":"DynFork::QPaladins::Check","name":"Check","abstract":false,"ancestors":[{"html_id":"dynfork/DynFork/QPaladins/Groups","kind":"module","full_name":"DynFork::QPaladins::Groups","name":"Groups"}],"locations":[{"filename":"src/dynfork/paladins/check.cr","line_number":6,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/paladins/check.cr#L6"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"dynfork/DynFork/QPaladins/Groups","kind":"module","full_name":"DynFork::QPaladins::Groups","name":"Groups"}],"including_types":[{"html_id":"dynfork/DynFork/QPaladins","kind":"module","full_name":"DynFork::QPaladins","name":"QPaladins"}],"namespace":{"html_id":"dynfork/DynFork/QPaladins","kind":"module","full_name":"DynFork::QPaladins","name":"QPaladins"},"doc":"1.Validation of Model data before saving to the database.\n<br>\n2.Web form validation. It is recommended to use the _saving_docs?=true_ model parameter.","summary":"<p>1.Validation of Model data before saving to the database.</p>","instance_methods":[{"html_id":"check(collection_ptr:Pointer(Mongo::Collection),save?:Bool=false):DynFork::Globals::OutputData-instance-method","name":"check","doc":"Validation of Model data.\nNOTE: This method is used within the `DynFork::QPaladins::Tools#valid?` and `DynFork::QPaladins::Save#save` methods.","summary":"<p>Validation of Model data.</p>","abstract":false,"args":[{"name":"collection_ptr","external_name":"collection_ptr","restriction":"Pointer(Mongo::Collection)"},{"name":"save?","default_value":"false","external_name":"save?","restriction":"Bool"}],"args_string":"(collection_ptr : Pointer(Mongo::Collection), save? : Bool = false) : DynFork::Globals::OutputData","args_html":"(collection_ptr : Pointer(Mongo::Collection), save? : Bool = <span class=\"n\">false</span>) : <a href=\"../../DynFork/Globals/Types/OutputData.html\">DynFork::Globals::OutputData</a>","location":{"filename":"src/dynfork/paladins/check.cr","line_number":11,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/paladins/check.cr#L11"},"def":{"name":"check","args":[{"name":"collection_ptr","external_name":"collection_ptr","restriction":"Pointer(Mongo::Collection)"},{"name":"save?","default_value":"false","external_name":"save?","restriction":"Bool"}],"return_type":"DynFork::Globals::OutputData","visibility":"Public","body":"result_map : Hash(String, DynFork::Globals::ResultMapType) = Hash(String, DynFork::Globals::ResultMapType).new\nresult_map_ptr : Pointer(Hash(String, DynFork::Globals::ResultMapType)) = pointerof(result_map)\nid : BSON::ObjectId | ::Nil = self.object_id\nid_ptr : Pointer(BSON::ObjectId | ::Nil) = pointerof(id)\nupdate? : Bool = !id.nil?\nif !update?\n  100.times do |idx|\n    id = BSON::ObjectId.new\n    if (collection_ptr.value.count_documents({_id: id})) == 0\n      break\n    end\n    if idx == 99\n      raise(DynFork::Errors::Model::FailedGenerateUniqueID.new(@@full_model_name))\n    end\n  end\nend\nif save?\n  if !update?\n    (@hash.value = id.to_s)\n  end\n  result_map[\"_id\"] = id\nend\nerror_symptom? : Bool = false\nerror_symptom_ptr? : Pointer(Bool) = pointerof(error_symptom?)\nerror_map : Hash(String, String) = self.add_validation\nerr_msg : String | ::Nil\n{% for field in @type.instance_vars %}\n      # Reset a field errors to exclude duplicates.\n      @{{ field }}.errors = Array(String).new\n      # Check additional validation.\n      unless (err_msg = error_map[{{ field.name.stringify }}]?).nil?\n          @{{ field }}.errors << err_msg\n          (error_symptom? = true) unless error_symptom?\n          err_msg = nil\n      end\n      #\n      unless @{{ field }}.ignored?\n        case @{{ field }}.group\n        when 1\n          # Validation of `text` type fields:\n          # <br>\n          # ColorField | EmailField | PasswordField | PhoneField\n          # | TextField | HashField | URLField | IPField\n          self.group_01(\n            pointerof(@{{ field }}),\n            error_symptom_ptr?,\n            update?,\n            save?,\n            result_map_ptr,\n            collection_ptr,\n            id_ptr,\n          )\n        when 2\n          # Validation of `date` type fields:\n          # <br>\n          # DateField | DateTimeField\n          self.group_02(\n            pointerof(@{{ field }}),\n            error_symptom_ptr?,\n            save?,\n            result_map_ptr,\n            collection_ptr,\n          )\n        when 3\n          # Validation of `choice` type fields:\n          # <br>\n          # ChoiceTextField | ChoiceTextMultField\n          # | ChoiceTextDynField | ChoiceTextMultDynField\n          # | ChoiceI64Field | ChoiceI64MultField\n          # | ChoiceI64DynField | ChoiceI64MultDynField\n          # | ChoiceF64Field | ChoiceF64MultField\n          # | ChoiceF64DynField | ChoiceF64MultDynField\n          self.group_03(\n            pointerof(@{{ field }}),\n            error_symptom_ptr?,\n            save?,\n            result_map_ptr,\n            collection_ptr,\n          )\n        when 4\n          # Validation of fields of type FileField.\n          self.group_04(\n            pointerof(@{{ field }}),\n            error_symptom_ptr?,\n            update?,\n            save?,\n            result_map_ptr,\n          )\n        when 5\n          # Validation of fields of type ImageField.\n          self.group_05(\n            pointerof(@{{ field }}),\n            error_symptom_ptr?,\n            update?,\n            save?,\n            result_map_ptr,\n          )\n        when 6\n          # Validation of fields of type I64Field.\n          self.group_06(\n            pointerof(@{{ field }}),\n            error_symptom_ptr?,\n            save?,\n            result_map_ptr,\n            collection_ptr,\n            id_ptr,\n          )\n        when 7\n          # Validation of fields of type F64Field.\n          self.group_07(\n            pointerof(@{{ field }}),\n            error_symptom_ptr?,\n            save?,\n            result_map_ptr,\n            collection_ptr,\n            id_ptr,\n          )\n        when 8\n          # Validation of fields of type BoolField.\n          self.group_08(\n            pointerof(@{{ field }}),\n            save?,\n            result_map_ptr,\n          )\n        when 9\n          # Create string for SlugField.\n          if save?\n            self.group_09(\n              pointerof(@{{ field }}),\n              result_map_ptr,\n            )\n          end\n        else\n          raise DynFork::Errors::Model::InvalidGroupNumber\n            .new(@@full_model_name, {{ field.name.stringify }})\n        end\n      end\n    {% end %}\nif error_symptom?\n  if save? && (!update?)\n    (@hash.value = nil)\n  end\nend\nDynFork::Globals::OutputData.new(data: result_map, valid: !error_symptom?, update: update?)\n"}}]},{"html_id":"dynfork/DynFork/QPaladins/Fixtures","path":"DynFork/QPaladins/Fixtures.html","kind":"module","full_name":"DynFork::QPaladins::Fixtures","name":"Fixtures","abstract":false,"locations":[{"filename":"src/dynfork/paladins/fixtures.cr","line_number":6,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/paladins/fixtures.cr#L6"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"dynfork/DynFork/QPaladins","kind":"module","full_name":"DynFork::QPaladins","name":"QPaladins"}],"namespace":{"html_id":"dynfork/DynFork/QPaladins","kind":"module","full_name":"DynFork::QPaladins","name":"QPaladins"},"doc":"**Fixtures** - To populate the database with pre-created data.\n<br>\n**config/fixtures** - Directory for creating fixtures.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/fixtures\" target=\"_blank\">example</a>.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/multy_doc_fixture\" target=\"_blank\">example</a>.","summary":"<p><strong>Fixtures</strong> - To populate the database with pre-created data.</p>","instance_methods":[{"html_id":"apply_fixture(fixture_name:String|Nil,collection_ptr:Pointer(Mongo::Collection)):Nil-instance-method","name":"apply_fixture","doc":"Apply fixture for current Model.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/fixtures\" target=\"_blank\">example</a>.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/multy_doc_fixture\" target=\"_blank\">example</a>.\nWARNING: Runs automatically during Model migration.","summary":"<p>Apply fixture for current Model.</p>","abstract":false,"args":[{"name":"fixture_name","external_name":"fixture_name","restriction":"String | ::Nil"},{"name":"collection_ptr","external_name":"collection_ptr","restriction":"Pointer(Mongo::Collection)"}],"args_string":"(fixture_name : String | Nil, collection_ptr : Pointer(Mongo::Collection)) : Nil","args_html":"(fixture_name : String | Nil, collection_ptr : Pointer(Mongo::Collection)) : Nil","location":{"filename":"src/dynfork/paladins/fixtures.cr","line_number":11,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/paladins/fixtures.cr#L11"},"def":{"name":"apply_fixture","args":[{"name":"fixture_name","external_name":"fixture_name","restriction":"String | ::Nil"},{"name":"collection_ptr","external_name":"collection_ptr","restriction":"Pointer(Mongo::Collection)"}],"return_type":"Nil","visibility":"Public","body":"fixture_path : String = \"config/fixtures/#{fixture_name}.yml\"\nyaml_arr = YAML.parse_all(File.read(fixture_path))\nyaml_arr.each do |yaml|\n  {% for field in @type.instance_vars %}\n        @{{ field }}.value = nil\n        unless @{{ field }}.ignored?\n          unless (value = yaml[@{{ field }}.name]?).nil?\n            field_type = @{{ field }}.field_type\n            case @{{ field }}.group\n            when 1\n              # ColorField | EmailField | PasswordField | PhoneField\n              # | TextField | HashField | URLField | IPField\n              if !(val = value.as_s?).nil?\n                @{{ field }}.refrash_val_str(val)\n              end\n            when 2\n              # DateField | DateTimeField\n              if field_type.includes?(\"Time\")\n                if !(val = value.as_s?).nil?\n                  dt = self.datetime_parse(val)\n                  @{{ field }}.refrash_val_datetime(dt)\n                end\n              else\n                if !(val = value.as_s?).nil?\n                  dt = self.date_parse(val)\n                  @{{ field }}.refrash_val_date(dt)\n                end\n              end\n            when 3\n              # ChoiceTextField | ChoiceI64Field\n              # | ChoiceF64Field | ChoiceTextMultField\n              # | ChoiceI64MultField | ChoiceF64MultField\n              # | ChoiceTextMultField | ChoiceI64MultField\n              # | ChoiceF64MultField | ChoiceTextMultDynField\n              # | ChoiceI64MultDynField | ChoiceF64MultDynField\n              if field_type.includes?(\"Text\")\n                if field_type.includes?(\"Mult\")\n                  if !(val = value.as_a?).nil?\n                    arr = val.map { |item| item.as_s}\n                    @{{ field }}.refrash_val_arr_str(arr)\n                  end\n                else\n                  if !(val = value.as_s?).nil?\n                    @{{ field }}.refrash_val_str(val)\n                  end\n                end\n              elsif field_type.includes?(\"I64\")\n                if field_type.includes?(\"Mult\")\n                  if !(val = value.as_a?).nil?\n                    arr = val.map { |item| item.as_i64}\n                    @{{ field }}.refrash_val_arr_i64(arr)\n                  end\n                else\n                  if !(val = value.as_i64?).nil?\n                    @{{ field }}.refrash_val_i64(val)\n                  end\n                end\n              elsif field_type.includes?(\"F64\")\n                if field_type.includes?(\"Mult\")\n                  if !(val = value.as_a?).nil?\n                    arr = val.map { |item| item.as_f}\n                    @{{ field }}.refrash_val_arr_f64(arr)\n                  end\n                else\n                  if !(val = value.as_f?).nil?\n                    @{{ field }}.refrash_val_f64(val)\n                  end\n                end\n              end\n            when 4\n              # FileField\n              if !(val = value.as_s?).nil?\n                @{{ field }}.from_path(val)\n              end\n            when 5\n              if !(val = value.as_s?).nil?\n                @{{ field }}.from_path(val)\n              end\n            when 6\n              # I64Field\n              if !(val = value.as_i64?).nil?\n                @{{ field }}.refrash_val_i64(val)\n              end\n            when 7\n              # F64Field\n              if !(val = value.as_f?).nil?\n                @{{ field }}.refrash_val_f64(val)\n              end\n            when 8\n              # BoolField\n              if !(val = value.as_bool?).nil?\n                @{{ field }}.refrash_val_bool(val)\n              end\n            when 9\n              # SlugField\n              if !(val = value.as_s?).nil?\n                @{{ field }}.refrash_val_str(val)\n              end\n            else\n              raise DynFork::Errors::Model::InvalidGroupNumber\n                .new(@@full_model_name, {{ field.name.stringify }})\n            end\n          end\n        end\n      {% end %}\n  output_data : DynFork::Globals::OutputData = self.check(collection_ptr: collection_ptr, \"save?\": true)\n  if output_data.valid?\n    data : Hash(String, DynFork::Globals::ResultMapType) = output_data.data\n    datetime : Time = Time.utc\n    data[\"created_at\"] = datetime\n    data[\"updated_at\"] = datetime\n    self.pre_create\n    collection_ptr.value.insert_one(data)\n    self.post_create\n  else\n    print((\"\\nFIXTURE: \".colorize.fore(:red)).mode(:bold))\n    print((fixture_path.colorize.fore(:blue)).mode(:bold))\n    self.print_err\n    raise(\"\")\n  end\nend\n"}}]},{"html_id":"dynfork/DynFork/QPaladins/Groups","path":"DynFork/QPaladins/Groups.html","kind":"module","full_name":"DynFork::QPaladins::Groups","name":"Groups","abstract":false,"locations":[{"filename":"src/dynfork/paladins/groups/group_01.cr","line_number":1,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/paladins/groups/group_01.cr#L1"},{"filename":"src/dynfork/paladins/groups/group_02.cr","line_number":1,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/paladins/groups/group_02.cr#L1"},{"filename":"src/dynfork/paladins/groups/group_03.cr","line_number":1,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/paladins/groups/group_03.cr#L1"},{"filename":"src/dynfork/paladins/groups/group_04.cr","line_number":1,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/paladins/groups/group_04.cr#L1"},{"filename":"src/dynfork/paladins/groups/group_05.cr","line_number":1,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/paladins/groups/group_05.cr#L1"},{"filename":"src/dynfork/paladins/groups/group_06.cr","line_number":1,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/paladins/groups/group_06.cr#L1"},{"filename":"src/dynfork/paladins/groups/group_07.cr","line_number":1,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/paladins/groups/group_07.cr#L1"},{"filename":"src/dynfork/paladins/groups/group_08.cr","line_number":1,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/paladins/groups/group_08.cr#L1"},{"filename":"src/dynfork/paladins/groups/group_09.cr","line_number":1,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/paladins/groups/group_09.cr#L1"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"dynfork/DynFork/QPaladins/Check","kind":"module","full_name":"DynFork::QPaladins::Check","name":"Check"}],"namespace":{"html_id":"dynfork/DynFork/QPaladins","kind":"module","full_name":"DynFork::QPaladins","name":"QPaladins"},"instance_methods":[{"html_id":"group_01(field_ptr:Pointer(DynFork::Globals::FieldTypes),error_symptom_ptr?:Pointer(Bool),update?:Bool,save?:Bool,result_map_ptr:Pointer(Hash(String,DynFork::Globals::ResultMapType)),collection_ptr:Pointer(Mongo::Collection),id_ptr:Pointer(BSON::ObjectId|Nil)):Nil-instance-method","name":"group_01","doc":"Validation of `text` type fields:\n<br>\nColorField | EmailField | PasswordField | PhoneField\n| TextField | HashField | URLField | IPField\nNOTE: This method is used within the `DynFork::QPaladins::Check#check` method.","summary":"<p>Validation of <code>text</code> type fields: <br> ColorField | EmailField | PasswordField | PhoneField | TextField | HashField | URLField | IPField NOTE: This method is used within the <code><a href=\"../../DynFork/QPaladins/Check.html#check%28collection_ptr%3APointer%28Mongo%3A%3ACollection%29%2Csave%3F%3ABool%3Dfalse%29%3ADynFork%3A%3AGlobals%3A%3AOutputData-instance-method\">DynFork::QPaladins::Check#check</a></code> method.</p>","abstract":false,"args":[{"name":"field_ptr","external_name":"field_ptr","restriction":"Pointer(DynFork::Globals::FieldTypes)"},{"name":"error_symptom_ptr?","external_name":"error_symptom_ptr?","restriction":"Pointer(Bool)"},{"name":"update?","external_name":"update?","restriction":"Bool"},{"name":"save?","external_name":"save?","restriction":"Bool"},{"name":"result_map_ptr","external_name":"result_map_ptr","restriction":"Pointer(Hash(String, DynFork::Globals::ResultMapType))"},{"name":"collection_ptr","external_name":"collection_ptr","restriction":"Pointer(Mongo::Collection)"},{"name":"id_ptr","external_name":"id_ptr","restriction":"Pointer(BSON::ObjectId | ::Nil)"}],"args_string":"(field_ptr : Pointer(DynFork::Globals::FieldTypes), error_symptom_ptr? : Pointer(Bool), update? : Bool, save? : Bool, result_map_ptr : Pointer(Hash(String, DynFork::Globals::ResultMapType)), collection_ptr : Pointer(Mongo::Collection), id_ptr : Pointer(BSON::ObjectId | Nil)) : Nil","args_html":"(field_ptr : Pointer(<a href=\"../../DynFork/Globals/Aliases/FieldTypes.html\">DynFork::Globals::FieldTypes</a>), error_symptom_ptr? : Pointer(Bool), update? : Bool, save? : Bool, result_map_ptr : Pointer(Hash(String, <a href=\"../../DynFork/Globals/Aliases/ResultMapType.html\">DynFork::Globals::ResultMapType</a>)), collection_ptr : Pointer(Mongo::Collection), id_ptr : Pointer(BSON::ObjectId | Nil)) : Nil","location":{"filename":"src/dynfork/paladins/groups/group_01.cr","line_number":7,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/paladins/groups/group_01.cr#L7"},"def":{"name":"group_01","args":[{"name":"field_ptr","external_name":"field_ptr","restriction":"Pointer(DynFork::Globals::FieldTypes)"},{"name":"error_symptom_ptr?","external_name":"error_symptom_ptr?","restriction":"Pointer(Bool)"},{"name":"update?","external_name":"update?","restriction":"Bool"},{"name":"save?","external_name":"save?","restriction":"Bool"},{"name":"result_map_ptr","external_name":"result_map_ptr","restriction":"Pointer(Hash(String, DynFork::Globals::ResultMapType))"},{"name":"collection_ptr","external_name":"collection_ptr","restriction":"Pointer(Mongo::Collection)"},{"name":"id_ptr","external_name":"id_ptr","restriction":"Pointer(BSON::ObjectId | ::Nil)"}],"return_type":"Nil","visibility":"Public","body":"if update? && (field_ptr.value.field_type == \"PasswordField\")\n  field_ptr.value.value = nil\n  return\nend\ncurrent_value : String = (value : DynFork::Globals::FieldValueTypes = field_ptr.value.value? || field_ptr.value.default?\nif value.nil? || value.to_s.empty?\n  if field_ptr.value.required?\n    self.accumulate_error(I18n.t(:required_field), field_ptr, error_symptom_ptr?)\n  end\n  if save?\n    (result_map_ptr.value[field_ptr.value.name] = nil)\n  end\n  return\nend\nvalue.to_s)\nif (pattern = field_ptr.value.regex?).nil?\nelse\n  if (/#{pattern}/).matches?(current_value)\n  else\n    self.accumulate_error(field_ptr.value.regex_err_msg.to_s, field_ptr, error_symptom_ptr?)\n  end\nend\nif (maxlength = field_ptr.value.maxlength?).nil?\nelse\n  if current_value.size > maxlength.to_i32\n    err_msg = I18n.t(\"number_not_greater_max.interpolation\", curr_num: current_value.size, max_num: maxlength)\n    self.accumulate_error(err_msg, field_ptr, error_symptom_ptr?)\n  end\nend\nif (minlength = field_ptr.value.minlength?).nil?\nelse\n  if current_value.size < minlength.to_i32\n    err_msg = I18n.t(\"number_not_less_min.interpolation\", curr_num: current_value.size, min_num: minlength)\n    self.accumulate_error(err_msg, field_ptr, error_symptom_ptr?)\n  end\nend\nif (field_ptr.value.unique? && (field_ptr.value.field_type != \"PasswordField\")) && (!(self.check_uniqueness?(current_value, collection_ptr, field_ptr, id_ptr)))\n  self.accumulate_error(I18n.t(:not_unique), field_ptr, error_symptom_ptr?)\nend\ncase field_ptr.value.field_type\nwhen \"EmailField\"\n  if Valid.email?(current_value)\n  else\n    self.accumulate_error(I18n.t(:invalid_email), field_ptr, error_symptom_ptr?)\n  end\nwhen \"URLField\"\n  if Valid.url?(current_value)\n  else\n    self.accumulate_error(I18n.t(:invalid_url), field_ptr, error_symptom_ptr?)\n  end\nwhen \"IPField\"\n  if Valid.ip?(current_value)\n  else\n    self.accumulate_error(I18n.t(:invalid_ip), field_ptr, error_symptom_ptr?)\n  end\nwhen \"ColorField\"\n  if Valid.color_code?(current_value)\n  else\n    self.accumulate_error(I18n.t(:invalid_color_code), field_ptr, error_symptom_ptr?)\n  end\nwhen \"PasswordField\"\n  if field_ptr.value.regex?.nil?\n    if Valid.password?(current_value)\n    else\n      self.accumulate_error(I18n.t(\"allowed_chars.interpolation\", chars: \"a-z A-Z 0-9 - . _ ! \\\" ` ' # % & , : ; < > = @ { } ~ $ ( ) * + / \\\\ ? [ ] ^ |\"), field_ptr, error_symptom_ptr?)\n    end\n  end\nend\nif save?\n  if field_ptr.value.field_type == \"PasswordField\"\n    current_value = (Crypto::Bcrypt::Password.create(current_value)).to_s\n  end\n  result_map_ptr.value[field_ptr.value.name] = current_value\nend\n"}},{"html_id":"group_02(field_ptr:Pointer(DynFork::Globals::FieldTypes),error_symptom_ptr?:Pointer(Bool),save?:Bool,result_map_ptr:Pointer(Hash(String,DynFork::Globals::ResultMapType)),collection_ptr:Pointer(Mongo::Collection)):Nil-instance-method","name":"group_02","doc":"Validation of `date` type fields:\n<br>\nDateField | DateTimeField\nNOTE: This method is used within the `DynFork::QPaladins::Check#check` method.","summary":"<p>Validation of <code>date</code> type fields: <br> DateField | DateTimeField NOTE: This method is used within the <code><a href=\"../../DynFork/QPaladins/Check.html#check%28collection_ptr%3APointer%28Mongo%3A%3ACollection%29%2Csave%3F%3ABool%3Dfalse%29%3ADynFork%3A%3AGlobals%3A%3AOutputData-instance-method\">DynFork::QPaladins::Check#check</a></code> method.</p>","abstract":false,"args":[{"name":"field_ptr","external_name":"field_ptr","restriction":"Pointer(DynFork::Globals::FieldTypes)"},{"name":"error_symptom_ptr?","external_name":"error_symptom_ptr?","restriction":"Pointer(Bool)"},{"name":"save?","external_name":"save?","restriction":"Bool"},{"name":"result_map_ptr","external_name":"result_map_ptr","restriction":"Pointer(Hash(String, DynFork::Globals::ResultMapType))"},{"name":"collection_ptr","external_name":"collection_ptr","restriction":"Pointer(Mongo::Collection)"}],"args_string":"(field_ptr : Pointer(DynFork::Globals::FieldTypes), error_symptom_ptr? : Pointer(Bool), save? : Bool, result_map_ptr : Pointer(Hash(String, DynFork::Globals::ResultMapType)), collection_ptr : Pointer(Mongo::Collection)) : Nil","args_html":"(field_ptr : Pointer(<a href=\"../../DynFork/Globals/Aliases/FieldTypes.html\">DynFork::Globals::FieldTypes</a>), error_symptom_ptr? : Pointer(Bool), save? : Bool, result_map_ptr : Pointer(Hash(String, <a href=\"../../DynFork/Globals/Aliases/ResultMapType.html\">DynFork::Globals::ResultMapType</a>)), collection_ptr : Pointer(Mongo::Collection)) : Nil","location":{"filename":"src/dynfork/paladins/groups/group_02.cr","line_number":6,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/paladins/groups/group_02.cr#L6"},"def":{"name":"group_02","args":[{"name":"field_ptr","external_name":"field_ptr","restriction":"Pointer(DynFork::Globals::FieldTypes)"},{"name":"error_symptom_ptr?","external_name":"error_symptom_ptr?","restriction":"Pointer(Bool)"},{"name":"save?","external_name":"save?","restriction":"Bool"},{"name":"result_map_ptr","external_name":"result_map_ptr","restriction":"Pointer(Hash(String, DynFork::Globals::ResultMapType))"},{"name":"collection_ptr","external_name":"collection_ptr","restriction":"Pointer(Mongo::Collection)"}],"return_type":"Nil","visibility":"Public","body":"time_objects : NamedTuple(default: Time | ::Nil, max: Time | ::Nil, min: Time | ::Nil) = @@meta.not_nil![:time_object_list][field_ptr.value.name]\ncurrent_value : Time = (value : DynFork::Globals::FieldValueTypes | Time = field_ptr.value.value? || field_ptr.value.default?\nif value.nil? || value.to_s.empty?\n  if field_ptr.value.required?\n    self.accumulate_error(I18n.t(:required_field), field_ptr, error_symptom_ptr?)\n  end\n  if save?\n    (result_map_ptr.value[field_ptr.value.name] = nil)\n  end\n  return\nend\nif !(value = field_ptr.value.value?).nil?\n  err_msg = nil\n  case field_ptr.value.field_type\n  when \"DateField\"\n    begin\n      value = self.date_parse(value.to_s)\n    rescue ex\n      err_msg = ex.message\n    end\n  when \"DateTimeField\"\n    begin\n      value = self.datetime_parse(value.to_s)\n    rescue ex\n      err_msg = ex.message\n    end\n  end\n  if err_msg.nil?\n  else\n    self.accumulate_error(err_msg, field_ptr, error_symptom_ptr?)\n    return\n  end\nelse\n  value = time_objects[:default]\nend\nvalue.as(Time))\nif (max : Time | ::Nil = time_objects[:max]).nil?\nelse\n  if (current_value <=> max.not_nil!) == 1\n    err_msg = I18n.t(\"date_not_greater_max.interpolation\", curr_date: field_ptr.value.value? || field_ptr.value.default?, max_date: field_ptr.value.max?)\n    self.accumulate_error(err_msg, field_ptr, error_symptom_ptr?)\n  end\nend\nif (min : Time | ::Nil = time_objects[:min]).nil?\nelse\n  if (current_value <=> min.not_nil!) == 1\n    err_msg = I18n.t(\"data_not_less_min.interpolation\", curr_date: field_ptr.value.value? || field_ptr.value.default?, min_date: field_ptr.value.min?)\n    self.accumulate_error(err_msg, field_ptr, error_symptom_ptr?)\n  end\nend\nif save?\n  (result_map_ptr.value[field_ptr.value.name] = current_value)\nend\n"}},{"html_id":"group_03(field_ptr:Pointer(DynFork::Globals::FieldTypes),error_symptom_ptr?:Pointer(Bool),save?:Bool,result_map_ptr:Pointer(Hash(String,DynFork::Globals::ResultMapType)),collection_ptr:Pointer(Mongo::Collection)):Nil-instance-method","name":"group_03","doc":"Validation of `choice` type fields:\n<br>\nChoiceTextField | ChoiceTextMultField\n| ChoiceTextDynField | ChoiceTextMultDynField\n| ChoiceI64Field | ChoiceI64MultField\n| ChoiceI64DynField | ChoiceI64MultDynField\n| ChoiceF64Field | ChoiceF64MultField\n| ChoiceF64DynField | ChoiceF64MultDynField\nNOTE: This method is used within the `DynFork::QPaladins::Check#check` method.","summary":"<p>Validation of <code>choice</code> type fields: <br> ChoiceTextField | ChoiceTextMultField | ChoiceTextDynField | ChoiceTextMultDynField | ChoiceI64Field | ChoiceI64MultField | ChoiceI64DynField | ChoiceI64MultDynField | ChoiceF64Field | ChoiceF64MultField | ChoiceF64DynField | ChoiceF64MultDynField NOTE: This method is used within the <code><a href=\"../../DynFork/QPaladins/Check.html#check%28collection_ptr%3APointer%28Mongo%3A%3ACollection%29%2Csave%3F%3ABool%3Dfalse%29%3ADynFork%3A%3AGlobals%3A%3AOutputData-instance-method\">DynFork::QPaladins::Check#check</a></code> method.</p>","abstract":false,"args":[{"name":"field_ptr","external_name":"field_ptr","restriction":"Pointer(DynFork::Globals::FieldTypes)"},{"name":"error_symptom_ptr?","external_name":"error_symptom_ptr?","restriction":"Pointer(Bool)"},{"name":"save?","external_name":"save?","restriction":"Bool"},{"name":"result_map_ptr","external_name":"result_map_ptr","restriction":"Pointer(Hash(String, DynFork::Globals::ResultMapType))"},{"name":"collection_ptr","external_name":"collection_ptr","restriction":"Pointer(Mongo::Collection)"}],"args_string":"(field_ptr : Pointer(DynFork::Globals::FieldTypes), error_symptom_ptr? : Pointer(Bool), save? : Bool, result_map_ptr : Pointer(Hash(String, DynFork::Globals::ResultMapType)), collection_ptr : Pointer(Mongo::Collection)) : Nil","args_html":"(field_ptr : Pointer(<a href=\"../../DynFork/Globals/Aliases/FieldTypes.html\">DynFork::Globals::FieldTypes</a>), error_symptom_ptr? : Pointer(Bool), save? : Bool, result_map_ptr : Pointer(Hash(String, <a href=\"../../DynFork/Globals/Aliases/ResultMapType.html\">DynFork::Globals::ResultMapType</a>)), collection_ptr : Pointer(Mongo::Collection)) : Nil","location":{"filename":"src/dynfork/paladins/groups/group_03.cr","line_number":11,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/paladins/groups/group_03.cr#L11"},"def":{"name":"group_03","args":[{"name":"field_ptr","external_name":"field_ptr","restriction":"Pointer(DynFork::Globals::FieldTypes)"},{"name":"error_symptom_ptr?","external_name":"error_symptom_ptr?","restriction":"Pointer(Bool)"},{"name":"save?","external_name":"save?","restriction":"Bool"},{"name":"result_map_ptr","external_name":"result_map_ptr","restriction":"Pointer(Hash(String, DynFork::Globals::ResultMapType))"},{"name":"collection_ptr","external_name":"collection_ptr","restriction":"Pointer(Mongo::Collection)"}],"return_type":"Nil","visibility":"Public","body":"current_value : DynFork::Globals::FieldValueTypes = (value : DynFork::Globals::FieldValueTypes = field_ptr.value.value? || field_ptr.value.default?\nif value.nil?\n  if field_ptr.value.required?\n    self.accumulate_error(I18n.t(:required_field), field_ptr, error_symptom_ptr?)\n  end\n  if save?\n    (result_map_ptr.value[field_ptr.value.name] = nil)\n  end\n  return\nend\nvalue)\nif field_ptr.value.has_value?\nelse\n  self.accumulate_error(I18n.t(:value_does_not_match), field_ptr, error_symptom_ptr?)\nend\nif save?\n  (result_map_ptr.value[field_ptr.value.name] = current_value)\nend\n"}},{"html_id":"group_04(field_ptr:Pointer(DynFork::Globals::FieldTypes),error_symptom_ptr?:Pointer(Bool),update?:Bool,save?:Bool,result_map_ptr:Pointer(Hash(String,DynFork::Globals::ResultMapType))):Nil-instance-method","name":"group_04","doc":"Validation of fields of type FileField.\nNOTE: This method is used within the `DynFork::QPaladins::Check#check` method.","summary":"<p>Validation of fields of type FileField.</p>","abstract":false,"args":[{"name":"field_ptr","external_name":"field_ptr","restriction":"Pointer(DynFork::Globals::FieldTypes)"},{"name":"error_symptom_ptr?","external_name":"error_symptom_ptr?","restriction":"Pointer(Bool)"},{"name":"update?","external_name":"update?","restriction":"Bool"},{"name":"save?","external_name":"save?","restriction":"Bool"},{"name":"result_map_ptr","external_name":"result_map_ptr","restriction":"Pointer(Hash(String, DynFork::Globals::ResultMapType))"}],"args_string":"(field_ptr : Pointer(DynFork::Globals::FieldTypes), error_symptom_ptr? : Pointer(Bool), update? : Bool, save? : Bool, result_map_ptr : Pointer(Hash(String, DynFork::Globals::ResultMapType))) : Nil","args_html":"(field_ptr : Pointer(<a href=\"../../DynFork/Globals/Aliases/FieldTypes.html\">DynFork::Globals::FieldTypes</a>), error_symptom_ptr? : Pointer(Bool), update? : Bool, save? : Bool, result_map_ptr : Pointer(Hash(String, <a href=\"../../DynFork/Globals/Aliases/ResultMapType.html\">DynFork::Globals::ResultMapType</a>))) : Nil","location":{"filename":"src/dynfork/paladins/groups/group_04.cr","line_number":4,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/paladins/groups/group_04.cr#L4"},"def":{"name":"group_04","args":[{"name":"field_ptr","external_name":"field_ptr","restriction":"Pointer(DynFork::Globals::FieldTypes)"},{"name":"error_symptom_ptr?","external_name":"error_symptom_ptr?","restriction":"Pointer(Bool)"},{"name":"update?","external_name":"update?","restriction":"Bool"},{"name":"save?","external_name":"save?","restriction":"Bool"},{"name":"result_map_ptr","external_name":"result_map_ptr","restriction":"Pointer(Hash(String, DynFork::Globals::ResultMapType))"}],"return_type":"Nil","visibility":"Public","body":"if ((!update?) && field_ptr.value.value?.nil?) && field_ptr.value.default?.nil?\n  if field_ptr.value.required?\n    self.accumulate_error(I18n.t(:required_field), field_ptr, error_symptom_ptr?)\n  end\n  if save?\n    (result_map_ptr.value[field_ptr.value.name] = nil)\n  end\n  return\nend\n_current_value : DynFork::Globals::FileData | ::Nil = field_ptr.value.extract_file_data?\nif (!update?) && _current_value.nil?\n  if default = field_ptr.value.default?\n    field_ptr.value.from_path(default.to_s)\n    _current_value = field_ptr.value.extract_file_data?\n  end\nend\nif _current_value.nil?\n  return\nend\ncurrent_value : DynFork::Globals::FileData = _current_value.not_nil!\n_current_value = nil\nif current_value.delete? && current_value.path.empty?\n  if default = field_ptr.value.default?\n    field_ptr.value.from_path(default.to_s)\n    current_value = field_ptr.value.extract_file_data?.not_nil!\n  else\n    if !field_ptr.value.required?\n      if save?\n        (result_map_ptr.value[field_ptr.value.name] = nil)\n      end\n    else\n      self.accumulate_error(I18n.t(:required_field), field_ptr, error_symptom_ptr?)\n    end\n    return\n  end\nend\nif (!current_value.path.empty?) && (current_value.size > field_ptr.value.maxsize)\n  self.accumulate_error(I18n.t(:size_exceeds_max), field_ptr, error_symptom_ptr?)\n  return\nend\nif save?\nelse\n  return\nend\nif current_value.path.empty?\nelse\n  result_map_ptr.value[field_ptr.value.name] = current_value\nend\n"}},{"html_id":"group_05(field_ptr:Pointer(DynFork::Globals::FieldTypes),error_symptom_ptr?:Pointer(Bool),update?:Bool,save?:Bool,result_map_ptr:Pointer(Hash(String,DynFork::Globals::ResultMapType))):Nil-instance-method","name":"group_05","doc":"Validation of fields of type ImageField.\nNOTE: This method is used within the `DynFork::QPaladins::Check#check` method.","summary":"<p>Validation of fields of type ImageField.</p>","abstract":false,"args":[{"name":"field_ptr","external_name":"field_ptr","restriction":"Pointer(DynFork::Globals::FieldTypes)"},{"name":"error_symptom_ptr?","external_name":"error_symptom_ptr?","restriction":"Pointer(Bool)"},{"name":"update?","external_name":"update?","restriction":"Bool"},{"name":"save?","external_name":"save?","restriction":"Bool"},{"name":"result_map_ptr","external_name":"result_map_ptr","restriction":"Pointer(Hash(String, DynFork::Globals::ResultMapType))"}],"args_string":"(field_ptr : Pointer(DynFork::Globals::FieldTypes), error_symptom_ptr? : Pointer(Bool), update? : Bool, save? : Bool, result_map_ptr : Pointer(Hash(String, DynFork::Globals::ResultMapType))) : Nil","args_html":"(field_ptr : Pointer(<a href=\"../../DynFork/Globals/Aliases/FieldTypes.html\">DynFork::Globals::FieldTypes</a>), error_symptom_ptr? : Pointer(Bool), update? : Bool, save? : Bool, result_map_ptr : Pointer(Hash(String, <a href=\"../../DynFork/Globals/Aliases/ResultMapType.html\">DynFork::Globals::ResultMapType</a>))) : Nil","location":{"filename":"src/dynfork/paladins/groups/group_05.cr","line_number":4,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/paladins/groups/group_05.cr#L4"},"def":{"name":"group_05","args":[{"name":"field_ptr","external_name":"field_ptr","restriction":"Pointer(DynFork::Globals::FieldTypes)"},{"name":"error_symptom_ptr?","external_name":"error_symptom_ptr?","restriction":"Pointer(Bool)"},{"name":"update?","external_name":"update?","restriction":"Bool"},{"name":"save?","external_name":"save?","restriction":"Bool"},{"name":"result_map_ptr","external_name":"result_map_ptr","restriction":"Pointer(Hash(String, DynFork::Globals::ResultMapType))"}],"return_type":"Nil","visibility":"Public","body":"if ((!update?) && field_ptr.value.value?.nil?) && field_ptr.value.default?.nil?\n  if field_ptr.value.required?\n    self.accumulate_error(I18n.t(:required_field), field_ptr, error_symptom_ptr?)\n  end\n  if save?\n    (result_map_ptr.value[field_ptr.value.name] = nil)\n  end\n  return\nend\n_current_value : DynFork::Globals::ImageData | ::Nil = field_ptr.value.extract_img_data?\nif (!update?) && _current_value.nil?\n  if default = field_ptr.value.default\n    field_ptr.value.from_path(default.to_s)\n    _current_value = field_ptr.value.extract_img_data?\n  end\nend\nif _current_value.nil?\n  return\nend\ncurrent_value : DynFork::Globals::ImageData = _current_value.not_nil!\n_current_value = nil\nif current_value.delete? && current_value.path.empty?\n  if default = field_ptr.value.default?\n    field_ptr.value.from_path(default.to_s)\n    current_value = field_ptr.value.extract_img_data?.not_nil!\n  else\n    if !field_ptr.value.required?\n      if save?\n        (result_map_ptr.value[field_ptr.value.name] = nil)\n      end\n    else\n      self.accumulate_error(I18n.t(:required_field), field_ptr, error_symptom_ptr?)\n    end\n    return\n  end\nend\nif (!current_value.path.empty?) && (current_value.size > field_ptr.value.maxsize)\n  self.accumulate_error(I18n.t(:size_exceeds_max), field_ptr, error_symptom_ptr?)\n  return\nend\nif save?\nelse\n  return\nend\nif current_value.path.empty?\nelse\n  images_dir_path : String = current_value.images_dir_path\n  images_dir_url : String = current_value.images_dir_url\n  path : String = current_value.path\n  perm : File::Permissions = File::Permissions.new(420)\n  if (thumbnails = field_ptr.value.thumbnails?).nil?\n  else\n    thumbnails.sort! do |item, item2|\n      item2[1] <=> item[1]\n    end\n    extension : String = current_value.extension\n    image : Pluto::ImageRGBA = if [\".jpg\", \".jpeg\"].includes?(extension)\n      File.open(path) do |file|\n        Pluto::ImageRGBA.from_jpeg(file)\n      end\n    else\n      if extension == \".png\"\n        File.open(path) do |file|\n          Pluto::ImageRGBA.from_png(file)\n        end\n      else\n        if extension == \".webp\"\n          File.open(path) do |file|\n            Pluto::ImageRGBA.from_webp(file)\n          end\n        else\n          err_msg = I18n.t(\"invalid_file_type.interpolation\", type: extension.upcase)\n          self.accumulate_error(err_msg, field_ptr, error_symptom_ptr?)\n          return\n        end\n      end\n    end\n    image_ptr = pointerof(image)\n    current_value.width = image.width\n    current_value.height = image.height\n    thumbnails.each do |__temp_99|\n      size_name, max_size = __temp_99\n      case size_name\n      when \"lg\"\n        current_value.path_lg = \"#{images_dir_path}/lg#{extension}\"\n        current_value.url_lg = \"#{images_dir_url}/lg#{extension}\"\n        io = self.image_to_io_memory(image_ptr, extension, max_size)\n        io.rewind\n        File.write(filename: current_value.path_lg, content: io, perm: perm)\n      when \"md\"\n        current_value.path_md = \"#{images_dir_path}/md#{extension}\"\n        current_value.url_md = \"#{images_dir_url}/md#{extension}\"\n        io = self.image_to_io_memory(image_ptr, extension, max_size)\n        io.rewind\n        File.write(filename: current_value.path_md, content: io, perm: perm)\n      when \"sm\"\n        current_value.path_sm = \"#{images_dir_path}/sm#{extension}\"\n        current_value.url_sm = \"#{images_dir_url}/sm#{extension}\"\n        io = self.image_to_io_memory(image_ptr, extension, max_size)\n        io.rewind\n        File.write(filename: current_value.path_sm, content: io, perm: perm)\n      when \"xs\"\n        current_value.path_xs = \"#{images_dir_path}/xs#{extension}\"\n        current_value.url_xs = \"#{images_dir_url}/xs#{extension}\"\n        io = self.image_to_io_memory(image_ptr, extension, max_size)\n        io.rewind\n        File.write(filename: current_value.path_xs, content: io, perm: perm)\n      end\n    end\n  end\n  result_map_ptr.value[field_ptr.value.name] = current_value\nend\n"}},{"html_id":"group_06(field_ptr:Pointer(DynFork::Globals::FieldTypes),error_symptom_ptr?:Pointer(Bool),save?:Bool,result_map_ptr:Pointer(Hash(String,DynFork::Globals::ResultMapType)),collection_ptr:Pointer(Mongo::Collection),id_ptr:Pointer(BSON::ObjectId|Nil)):Nil-instance-method","name":"group_06","doc":"Validation of fields of type I64Field.\nNOTE: This method is used within the `DynFork::QPaladins::Check#check` method.","summary":"<p>Validation of fields of type I64Field.</p>","abstract":false,"args":[{"name":"field_ptr","external_name":"field_ptr","restriction":"Pointer(DynFork::Globals::FieldTypes)"},{"name":"error_symptom_ptr?","external_name":"error_symptom_ptr?","restriction":"Pointer(Bool)"},{"name":"save?","external_name":"save?","restriction":"Bool"},{"name":"result_map_ptr","external_name":"result_map_ptr","restriction":"Pointer(Hash(String, DynFork::Globals::ResultMapType))"},{"name":"collection_ptr","external_name":"collection_ptr","restriction":"Pointer(Mongo::Collection)"},{"name":"id_ptr","external_name":"id_ptr","restriction":"Pointer(BSON::ObjectId | ::Nil)"}],"args_string":"(field_ptr : Pointer(DynFork::Globals::FieldTypes), error_symptom_ptr? : Pointer(Bool), save? : Bool, result_map_ptr : Pointer(Hash(String, DynFork::Globals::ResultMapType)), collection_ptr : Pointer(Mongo::Collection), id_ptr : Pointer(BSON::ObjectId | Nil)) : Nil","args_html":"(field_ptr : Pointer(<a href=\"../../DynFork/Globals/Aliases/FieldTypes.html\">DynFork::Globals::FieldTypes</a>), error_symptom_ptr? : Pointer(Bool), save? : Bool, result_map_ptr : Pointer(Hash(String, <a href=\"../../DynFork/Globals/Aliases/ResultMapType.html\">DynFork::Globals::ResultMapType</a>)), collection_ptr : Pointer(Mongo::Collection), id_ptr : Pointer(BSON::ObjectId | Nil)) : Nil","location":{"filename":"src/dynfork/paladins/groups/group_06.cr","line_number":4,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/paladins/groups/group_06.cr#L4"},"def":{"name":"group_06","args":[{"name":"field_ptr","external_name":"field_ptr","restriction":"Pointer(DynFork::Globals::FieldTypes)"},{"name":"error_symptom_ptr?","external_name":"error_symptom_ptr?","restriction":"Pointer(Bool)"},{"name":"save?","external_name":"save?","restriction":"Bool"},{"name":"result_map_ptr","external_name":"result_map_ptr","restriction":"Pointer(Hash(String, DynFork::Globals::ResultMapType))"},{"name":"collection_ptr","external_name":"collection_ptr","restriction":"Pointer(Mongo::Collection)"},{"name":"id_ptr","external_name":"id_ptr","restriction":"Pointer(BSON::ObjectId | ::Nil)"}],"return_type":"Nil","visibility":"Public","body":"current_value : Int64 = (value : Int64 | ::Nil = field_ptr.value.extract_val_i64? || field_ptr.value.extract_default_i64?\nif value.nil?\n  if field_ptr.value.required?\n    self.accumulate_error(I18n.t(:required_field), field_ptr, error_symptom_ptr?)\n  end\n  if save?\n    (result_map_ptr.value[field_ptr.value.name] = nil)\n  end\n  return\nend\nvalue.as(Int64))\nif (max = field_ptr.value.max?).nil?\nelse\n  if current_value > max.to_i64\n    err_msg = I18n.t(\"number_not_greater_max.interpolation\", curr_num: current_value, max_num: max)\n    self.accumulate_error(err_msg, field_ptr, error_symptom_ptr?)\n  end\nend\nif (min = field_ptr.value.min?).nil?\nelse\n  if current_value < min.to_i64\n    err_msg = I18n.t(\"number_not_less_min.interpolation\", curr_num: current_value, min_num: min)\n    self.accumulate_error(err_msg, field_ptr, error_symptom_ptr?)\n  end\nend\nif field_ptr.value.unique? && (!(self.check_uniqueness?(current_value, collection_ptr, field_ptr, id_ptr)))\n  self.accumulate_error(I18n.t(:not_unique), field_ptr, error_symptom_ptr?)\nend\nif save?\n  (result_map_ptr.value[field_ptr.value.name] = current_value)\nend\n"}},{"html_id":"group_07(field_ptr:Pointer(DynFork::Globals::FieldTypes),error_symptom_ptr?:Pointer(Bool),save?:Bool,result_map_ptr:Pointer(Hash(String,DynFork::Globals::ResultMapType)),collection_ptr:Pointer(Mongo::Collection),id_ptr:Pointer(BSON::ObjectId|Nil)):Nil-instance-method","name":"group_07","doc":"Validation of fields of type F64Field.\nNOTE: This method is used within the `DynFork::QPaladins::Check#check` method.","summary":"<p>Validation of fields of type F64Field.</p>","abstract":false,"args":[{"name":"field_ptr","external_name":"field_ptr","restriction":"Pointer(DynFork::Globals::FieldTypes)"},{"name":"error_symptom_ptr?","external_name":"error_symptom_ptr?","restriction":"Pointer(Bool)"},{"name":"save?","external_name":"save?","restriction":"Bool"},{"name":"result_map_ptr","external_name":"result_map_ptr","restriction":"Pointer(Hash(String, DynFork::Globals::ResultMapType))"},{"name":"collection_ptr","external_name":"collection_ptr","restriction":"Pointer(Mongo::Collection)"},{"name":"id_ptr","external_name":"id_ptr","restriction":"Pointer(BSON::ObjectId | ::Nil)"}],"args_string":"(field_ptr : Pointer(DynFork::Globals::FieldTypes), error_symptom_ptr? : Pointer(Bool), save? : Bool, result_map_ptr : Pointer(Hash(String, DynFork::Globals::ResultMapType)), collection_ptr : Pointer(Mongo::Collection), id_ptr : Pointer(BSON::ObjectId | Nil)) : Nil","args_html":"(field_ptr : Pointer(<a href=\"../../DynFork/Globals/Aliases/FieldTypes.html\">DynFork::Globals::FieldTypes</a>), error_symptom_ptr? : Pointer(Bool), save? : Bool, result_map_ptr : Pointer(Hash(String, <a href=\"../../DynFork/Globals/Aliases/ResultMapType.html\">DynFork::Globals::ResultMapType</a>)), collection_ptr : Pointer(Mongo::Collection), id_ptr : Pointer(BSON::ObjectId | Nil)) : Nil","location":{"filename":"src/dynfork/paladins/groups/group_07.cr","line_number":4,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/paladins/groups/group_07.cr#L4"},"def":{"name":"group_07","args":[{"name":"field_ptr","external_name":"field_ptr","restriction":"Pointer(DynFork::Globals::FieldTypes)"},{"name":"error_symptom_ptr?","external_name":"error_symptom_ptr?","restriction":"Pointer(Bool)"},{"name":"save?","external_name":"save?","restriction":"Bool"},{"name":"result_map_ptr","external_name":"result_map_ptr","restriction":"Pointer(Hash(String, DynFork::Globals::ResultMapType))"},{"name":"collection_ptr","external_name":"collection_ptr","restriction":"Pointer(Mongo::Collection)"},{"name":"id_ptr","external_name":"id_ptr","restriction":"Pointer(BSON::ObjectId | ::Nil)"}],"return_type":"Nil","visibility":"Public","body":"current_value : Float64 = (value : Float64 | ::Nil = field_ptr.value.extract_val_f64? || field_ptr.value.extract_default_f64?\nif value.nil?\n  if field_ptr.value.required?\n    self.accumulate_error(I18n.t(:required_field), field_ptr, error_symptom_ptr?)\n  end\n  if save?\n    (result_map_ptr.value[field_ptr.value.name] = nil)\n  end\n  return\nend\nvalue.as(Float64))\nif (max = field_ptr.value.max?).nil?\nelse\n  if current_value > max.to_f64\n    err_msg = I18n.t(\"number_not_greater_max.interpolation\", curr_num: current_value, max_num: max)\n    self.accumulate_error(err_msg, field_ptr, error_symptom_ptr?)\n  end\nend\nif (min = field_ptr.value.min?).nil?\nelse\n  if current_value < min.to_f64\n    err_msg = I18n.t(\"number_not_less_min.interpolation\", curr_num: current_value, min_num: min)\n    self.accumulate_error(err_msg, field_ptr, error_symptom_ptr?)\n  end\nend\nif field_ptr.value.unique? && (!(self.check_uniqueness?(current_value, collection_ptr, field_ptr, id_ptr)))\n  self.accumulate_error(I18n.t(:not_unique), field_ptr, error_symptom_ptr?)\nend\nif save?\n  (result_map_ptr.value[field_ptr.value.name] = current_value)\nend\n"}},{"html_id":"group_08(field_ptr:Pointer(DynFork::Globals::FieldTypes),save?:Bool,result_map_ptr:Pointer(Hash(String,DynFork::Globals::ResultMapType))):Nil-instance-method","name":"group_08","doc":"Validation of fields of type BoolField.\nNOTE: This method is used within the `DynFork::QPaladins::Check#check` method.","summary":"<p>Validation of fields of type BoolField.</p>","abstract":false,"args":[{"name":"field_ptr","external_name":"field_ptr","restriction":"Pointer(DynFork::Globals::FieldTypes)"},{"name":"save?","external_name":"save?","restriction":"Bool"},{"name":"result_map_ptr","external_name":"result_map_ptr","restriction":"Pointer(Hash(String, DynFork::Globals::ResultMapType))"}],"args_string":"(field_ptr : Pointer(DynFork::Globals::FieldTypes), save? : Bool, result_map_ptr : Pointer(Hash(String, DynFork::Globals::ResultMapType))) : Nil","args_html":"(field_ptr : Pointer(<a href=\"../../DynFork/Globals/Aliases/FieldTypes.html\">DynFork::Globals::FieldTypes</a>), save? : Bool, result_map_ptr : Pointer(Hash(String, <a href=\"../../DynFork/Globals/Aliases/ResultMapType.html\">DynFork::Globals::ResultMapType</a>))) : Nil","location":{"filename":"src/dynfork/paladins/groups/group_08.cr","line_number":4,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/paladins/groups/group_08.cr#L4"},"def":{"name":"group_08","args":[{"name":"field_ptr","external_name":"field_ptr","restriction":"Pointer(DynFork::Globals::FieldTypes)"},{"name":"save?","external_name":"save?","restriction":"Bool"},{"name":"result_map_ptr","external_name":"result_map_ptr","restriction":"Pointer(Hash(String, DynFork::Globals::ResultMapType))"}],"return_type":"Nil","visibility":"Public","body":"current_value : Bool = false\nif !(val = field_ptr.value.extract_val_bool?).nil?\n  current_value = val.not_nil!\nelse\n  if !(val = field_ptr.value.extract_default_bool?).nil?\n    current_value = val.not_nil!\n  end\nend\nif save?\n  (result_map_ptr.value[field_ptr.value.name] = current_value)\nend\n"}},{"html_id":"group_09(field_ptr:Pointer(DynFork::Globals::FieldTypes),result_map_ptr:Pointer(Hash(String,DynFork::Globals::ResultMapType))):Nil-instance-method","name":"group_09","doc":"Create string for SlugField.\nNOTE: This method is used within the `DynFork::QPaladins::Check#check` method.","summary":"<p>Create string for SlugField.</p>","abstract":false,"args":[{"name":"field_ptr","external_name":"field_ptr","restriction":"Pointer(DynFork::Globals::FieldTypes)"},{"name":"result_map_ptr","external_name":"result_map_ptr","restriction":"Pointer(Hash(String, DynFork::Globals::ResultMapType))"}],"args_string":"(field_ptr : Pointer(DynFork::Globals::FieldTypes), result_map_ptr : Pointer(Hash(String, DynFork::Globals::ResultMapType))) : Nil","args_html":"(field_ptr : Pointer(<a href=\"../../DynFork/Globals/Aliases/FieldTypes.html\">DynFork::Globals::FieldTypes</a>), result_map_ptr : Pointer(Hash(String, <a href=\"../../DynFork/Globals/Aliases/ResultMapType.html\">DynFork::Globals::ResultMapType</a>))) : Nil","location":{"filename":"src/dynfork/paladins/groups/group_09.cr","line_number":4,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/paladins/groups/group_09.cr#L4"},"def":{"name":"group_09","args":[{"name":"field_ptr","external_name":"field_ptr","restriction":"Pointer(DynFork::Globals::FieldTypes)"},{"name":"result_map_ptr","external_name":"result_map_ptr","restriction":"Pointer(Hash(String, DynFork::Globals::ResultMapType))"}],"return_type":"Nil","visibility":"Public","body":"raw_str_arr : Array(String) = Array(String).new\nslug_sources : Array(String) = field_ptr.value.slug_sources\n{% for field in @type.instance_vars %}\n      if slug_sources.includes?({{ field.name.stringify }})\n        if !(value = @{{ field }}.value? || @{{ field }}.default?).nil?\n            raw_str_arr << value.to_s\n        else\n          msg = \"Model: `#{@@full_model_name}` > \" +\n                \"Field: `#{field_ptr.value.name}` => \" +\n                \"`#{@{{ field }}.name}` - \" +\n                \"This field is specified in slug_sources. \" +\n                \"It requires a value or default value.\"\n          raise DynFork::Errors::Panic.new msg\n        end\n      end\n    {% end %}\nresult_map_ptr.value[field_ptr.value.name] = Iom::WebSlug.slug(raw_str_arr.join(\"-\"))\n"}}]},{"html_id":"dynfork/DynFork/QPaladins/Password","path":"DynFork/QPaladins/Password.html","kind":"module","full_name":"DynFork::QPaladins::Password","name":"Password","abstract":false,"locations":[{"filename":"src/dynfork/paladins/password.cr","line_number":1,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/paladins/password.cr#L1"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"dynfork/DynFork/QPaladins","kind":"module","full_name":"DynFork::QPaladins","name":"QPaladins"}],"namespace":{"html_id":"dynfork/DynFork/QPaladins","kind":"module","full_name":"DynFork::QPaladins","name":"QPaladins"},"instance_methods":[{"html_id":"update_password(old_password:String,new_password:String,field_name:String=\"password\"):Nil-instance-method","name":"update_password","doc":"For replace or recover password.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/password\" target=\"_blank\">example</a>.","summary":"<p>For replace or recover password.</p>","abstract":false,"args":[{"name":"old_password","external_name":"old_password","restriction":"String"},{"name":"new_password","external_name":"new_password","restriction":"String"},{"name":"field_name","default_value":"\"password\"","external_name":"field_name","restriction":"String"}],"args_string":"(old_password : String, new_password : String, field_name : String = \"password\") : Nil","args_html":"(old_password : String, new_password : String, field_name : String = <span class=\"s\">&quot;password&quot;</span>) : Nil","location":{"filename":"src/dynfork/paladins/password.cr","line_number":36,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/paladins/password.cr#L36"},"def":{"name":"update_password","args":[{"name":"old_password","external_name":"old_password","restriction":"String"},{"name":"new_password","external_name":"new_password","restriction":"String"},{"name":"field_name","default_value":"\"password\"","external_name":"field_name","restriction":"String"}],"return_type":"Nil","visibility":"Public","body":"if self.verify_password(old_password, field_name)\nelse\n  raise(DynFork::Errors::Password::OldPassNotMatch.new)\nend\ncollection : Mongo::Collection = DynFork::Globals.mongo_database[@@meta.not_nil![:collection_name]]\npassword_hash : String = (Crypto::Bcrypt::Password.create(new_password)).to_s\nfilter = {_id: self.object_id}\nupdate = {\"$set\": {field_name => password_hash}}\ncollection.update_one(filter, update)\n"}},{"html_id":"verify_password(password:String,field_name:String=\"password\"):Bool-instance-method","name":"verify_password","doc":"For password verification.\nNOTE: How to use, see <a href=\"https://github.com/kebasyaty/dynfork/tree/main/examples/password\" target=\"_blank\">example</a>.","summary":"<p>For password verification.</p>","abstract":false,"args":[{"name":"password","external_name":"password","restriction":"String"},{"name":"field_name","default_value":"\"password\"","external_name":"field_name","restriction":"String"}],"args_string":"(password : String, field_name : String = \"password\") : Bool","args_html":"(password : String, field_name : String = <span class=\"s\">&quot;password&quot;</span>) : Bool","location":{"filename":"src/dynfork/paladins/password.cr","line_number":4,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/paladins/password.cr#L4"},"def":{"name":"verify_password","args":[{"name":"password","external_name":"password","restriction":"String"},{"name":"field_name","default_value":"\"password\"","external_name":"field_name","restriction":"String"}],"return_type":"Bool","visibility":"Public","body":"if @@meta.not_nil![:\"migrat_model?\"]\nelse\n  raise(DynFork::Errors::Panic.new(\"Model : `#{@@full_model_name}` > Param: `migrat_model?` => \" + \"This Model is not migrated to the database!\"))\nend\nif id : BSON::ObjectId | ::Nil = self.object_id\n  collection : Mongo::Collection = DynFork::Globals.mongo_database[@@meta.not_nil![:collection_name]]\n  if doc = collection.find_one({_id: id})\n    return (Crypto::Bcrypt::Password.new(doc[field_name].as(String))).verify(password)\n  end\n  msg = (\"Model: `#{@@full_model_name}` > \" + \"Field: `#{field_name}` | Method: `#verify_password` => \") + \"There is no document with ID `#{@hash.value}` in the database.\"\n  raise(DynFork::Errors::Panic.new(msg))\nend\nmsg = (\"Model: `#{@@full_model_name}` > \" + \"Field: `#{field_name}` | Method: `#verify_password` => \") + \"Cannot get document ID - Hash field is empty.\"\nraise(DynFork::Errors::Panic.new(msg))\n"}}]},{"html_id":"dynfork/DynFork/QPaladins/Save","path":"DynFork/QPaladins/Save.html","kind":"module","full_name":"DynFork::QPaladins::Save","name":"Save","abstract":false,"locations":[{"filename":"src/dynfork/paladins/save.cr","line_number":2,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/paladins/save.cr#L2"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"dynfork/DynFork/QPaladins","kind":"module","full_name":"DynFork::QPaladins","name":"QPaladins"}],"namespace":{"html_id":"dynfork/DynFork/QPaladins","kind":"module","full_name":"DynFork::QPaladins","name":"QPaladins"},"doc":"Creating and updating documents in the database.","summary":"<p>Creating and updating documents in the database.</p>","instance_methods":[{"html_id":"save:Bool-instance-method","name":"save","doc":"Creating and updating documents in the database.\n<br>\nThis method pre-uses the _check_ method.\n\nSimple example:\n```\n@[DynFork::Meta(service_name: \"Accounts\")]\nstruct User < DynFork::Model\n  getter username = DynFork::Fields::TextField.new\n  getter birthday = DynFork::Fields::DateField.new\nend\n\nuser = User.new\nuser.username.value = \"username\"\nuser.birthday.value = \"1970-01-01\"\n\nuser.print_err unless user.save\n# print_err - convenient during development.\n```\n","summary":"<p>Creating and updating documents in the database.</p>","abstract":false,"location":{"filename":"src/dynfork/paladins/save.cr","line_number":23,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/paladins/save.cr#L23"},"def":{"name":"save","return_type":"Bool","visibility":"Public","body":"if @@meta.not_nil![:\"migrat_model?\"]\nelse\n  raise(DynFork::Errors::Panic.new(\"Model : `#{@@full_model_name}` > Param: `migrat_model?` => \" + \"This Model is not migrated to the database!\"))\nend\ncollection : Mongo::Collection = DynFork::Globals.mongo_database[@@meta.not_nil![:collection_name]]\noutput_data : DynFork::Globals::OutputData = self.check(collection_ptr: pointerof(collection), \"save?\": true)\n@hash.alerts = Array(String).new\nif (!output_data.update?) && (!@@meta.not_nil![:\"create_doc?\"])\n  @hash.alerts << (I18n.t(:forbidden_creating_docs))\n  output_data.valid = false\nend\nif output_data.update? && (!@@meta.not_nil![:\"update_doc?\"])\n  @hash.alerts << (I18n.t(:forbidden_updating_docs))\n  output_data.valid = false\nend\nif output_data.valid?\nelse\n  self.restor_ignored_fields(output_data.update?)\n  return false\nend\ndata : Hash(String, DynFork::Globals::ResultMapType) = output_data.data\nif output_data.update?\n  data[\"updated_at\"] = Time.utc\n  self.pre_update\n  if doc : BSON | ::Nil = collection.find_one_and_update(filter: {_id: data[\"_id\"]}, update: {\"$set\": data}, new: true)\n    self.post_update\n    self.refrash_fields(pointerof(doc))\n  end\nelse\n  datetime : Time = Time.utc\n  data[\"created_at\"] = datetime\n  data[\"updated_at\"] = datetime\n  self.pre_create\n  collection.insert_one(data)\n  self.post_create\n  if doc = collection.find_one({_id: data[\"_id\"]})\n    self.refrash_fields(pointerof(doc))\n  else\n    raise(DynFork::Errors::Panic.new(\"Model : `#{@@full_model_name}` => The document was not created.\"))\n  end\nend\ntrue\n"}}]},{"html_id":"dynfork/DynFork/QPaladins/Tools","path":"DynFork/QPaladins/Tools.html","kind":"module","full_name":"DynFork::QPaladins::Tools","name":"Tools","abstract":false,"locations":[{"filename":"src/dynfork/paladins/tools.cr","line_number":2,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/paladins/tools.cr#L2"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"dynfork/DynFork/QPaladins","kind":"module","full_name":"DynFork::QPaladins","name":"QPaladins"}],"namespace":{"html_id":"dynfork/DynFork/QPaladins","kind":"module","full_name":"DynFork::QPaladins","name":"QPaladins"},"doc":"Tools - A set of additional auxiliary methods for Paladins.","summary":"<p>Tools - A set of additional auxiliary methods for Paladins.</p>","instance_methods":[{"html_id":"delete:Nil-instance-method","name":"delete","doc":"Delete a document from a collection in a database.","summary":"<p>Delete a document from a collection in a database.</p>","abstract":false,"location":{"filename":"src/dynfork/paladins/tools.cr","line_number":155,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/paladins/tools.cr#L155"},"def":{"name":"delete","return_type":"Nil","visibility":"Public","body":"if @@meta.not_nil![:\"migrat_model?\"]\nelse\n  raise(DynFork::Errors::Panic.new(\"Model : `#{@@full_model_name}` > Param: `migrat_model?` => \" + \"This Model is not migrated to the database!\"))\nend\nif @@meta.not_nil![:\"delete_doc?\"]\nelse\n  raise(DynFork::Errors::Meta::ForbiddenDeletingDocs.new)\nend\ncollection : Mongo::Collection = DynFork::Globals.mongo_database[@@meta.not_nil![:collection_name]]\nif id : BSON::ObjectId | ::Nil = self.object_id\n  self.pre_delete\n  collection.delete_one({_id: id})\n  {% for field in @type.instance_vars %}\n        @{{ field }}.value =  nil\n      {% end %}\n  self.post_delete\nelse\n  raise(DynFork::Errors::Panic.new(\"Model : `#{@@full_model_name}` > Field: `hash` > \" + \"Param: `value` => Hash is missing.\"))\nend\n"}},{"html_id":"print_err:Nil-instance-method","name":"print_err","doc":"Printing errors to the console.\nConvenient to use during development.\n\nExample:\n```\n@[DynFork::Meta(service_name: \"Accounts\")]\nstruct User < DynFork::Model\n  getter username = DynFork::Fields::TextField.new\n  getter birthday = DynFork::Fields::DateField.new\nend\n\nuser = User.new\nuser.print_err unless user.valid?\n```\n","summary":"<p>Printing errors to the console.</p>","abstract":false,"location":{"filename":"src/dynfork/paladins/tools.cr","line_number":42,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/paladins/tools.cr#L42"},"def":{"name":"print_err","return_type":"Nil","visibility":"Public","body":"err? : Bool = false\n{% for field in @type.instance_vars %}\n      unless @{{ field }}.errors.empty?\n        # title - # ERRORS\n        (\n          puts \"\\nERRORS:\".colorize.fore(:red).mode(:bold)\n          puts \"Model: `#{@@full_model_name}`\".colorize.fore(:blue).mode(:bold)\n          err? = true\n        ) unless err?\n        # field name\n        print \"#{{{ field.name.stringify }}}\".colorize.fore(:green).mode(:bold)\n        print \" => \".colorize.fore(:blue).mode(:bold)\n        # error messages\n        print @{{ field }}.errors.join(\" || \").colorize.fore(:red)\n        # line break\n        print \"\\n\"\n      end\n    {% end %}\nif @hash.alerts.empty?\nelse\n  puts((\"AlERTS:\".colorize.fore(:yellow)).mode(:bold))\n  puts((@hash.alerts.join(\"\\n\")).colorize.fore(:yellow))\n  print(\"\\n\\n\")\nend\n"}},{"html_id":"refrash_fields(doc_ptr:Pointer(BSON|Nil)):Nil-instance-method","name":"refrash_fields","doc":"Refrash field values ​​after creating or updating a document.","summary":"<p>Refrash field values ​​after creating or updating a document.</p>","abstract":false,"args":[{"name":"doc_ptr","external_name":"doc_ptr","restriction":"Pointer(BSON | ::Nil)"}],"args_string":"(doc_ptr : Pointer(BSON | Nil)) : Nil","args_html":"(doc_ptr : Pointer(BSON | Nil)) : Nil","location":{"filename":"src/dynfork/paladins/tools.cr","line_number":200,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/paladins/tools.cr#L200"},"def":{"name":"refrash_fields","args":[{"name":"doc_ptr","external_name":"doc_ptr","restriction":"Pointer(BSON | ::Nil)"}],"return_type":"Nil","visibility":"Public","body":"if doc_ptr.value.nil?\n  {% for field in @type.instance_vars %}\n        @{{ field }}.value =  nil\n      {% end %}\n  return\nend\nfield_type : String = \"\"\nname : String = \"\"\ndoc_hash = doc_ptr.value.not_nil!.to_h\n@hash.value = (doc_hash[\"_id\"].as(BSON::ObjectId)).to_s\n{% for field in @type.instance_vars %}\n      name = @{{ field }}.name\n      #\n      if !@{{ field }}.ignored?\n        field_type = @{{ field }}.field_type\n        if !(value = doc_hash[name]).nil?\n          case @{{ field }}.group\n          when 1\n            # ColorField | EmailField | PasswordField | PhoneField\n            # | TextField | HashField | URLField | IPField\n            if field_type != \"PasswordField\"\n              @{{ field }}.refrash_val_str(value.as(String))\n            else\n              @{{ field }}.value =  nil\n            end\n          when 2\n            # DateField | DateTimeField\n            if field_type.includes?(\"Time\")\n              @{{ field }}.refrash_val_datetime(value.as(Time))\n            else\n              @{{ field }}.refrash_val_date(value.as(Time))\n            end\n          when 3\n            # ChoiceTextField | ChoiceTextMultField\n            # | ChoiceTextDynField | ChoiceTextMultDynField\n            # | ChoiceI64Field | ChoiceI64MultField\n            # | ChoiceI64DynField | ChoiceI64MultDynField\n            # | ChoiceF64Field | ChoiceF64MultField\n            # | ChoiceF64DynField | ChoiceF64MultDynField\n            if field_type.includes?(\"Text\")\n              if field_type.includes?(\"Mult\")\n                arr = value.as(Array(BSON::RecursiveValue)).map { |item| item.as(String)}\n                @{{ field }}.refrash_val_arr_str(arr)\n              else\n                @{{ field }}.refrash_val_str(value.as(String))\n              end\n            elsif field_type.includes?(\"I64\")\n              if field_type.includes?(\"Mult\")\n                arr = value.as(Array(BSON::RecursiveValue)).map { |item| item.as(Int64)}\n                @{{ field }}.refrash_val_arr_i64(arr)\n              else\n                @{{ field }}.refrash_val_i64(value.as(Int64))\n              end\n            elsif field_type.includes?(\"F64\")\n              if field_type.includes?(\"Mult\")\n                arr = value.as(Array(BSON::RecursiveValue)).map { |item| item.as(Float64)}\n                @{{ field }}.refrash_val_arr_f64(arr)\n              else\n                @{{ field }}.refrash_val_f64(value.as(Float64))\n              end\n            end\n          when 4\n            # FileField\n            bson = BSON.new\n            value.as(Hash(String, BSON::RecursiveValue)).each { |key, val| bson[key] = val }\n            @{{ field }}.refrash_val_file_data(\n              DynFork::Globals::FileData.from_bson(bson))\n          when 5\n            # ImageField\n            bson = BSON.new\n            value.as(Hash(String, BSON::RecursiveValue)).each { |key, val| bson[key] = val }\n            @{{ field }}.refrash_val_img_data(\n              DynFork::Globals::ImageData.from_bson(bson))\n          when 6\n            # I64Field\n            @{{ field }}.refrash_val_i64(value.as(Int64))\n          when 7\n            # F64Field\n            @{{ field }}.refrash_val_f64(value.as(Float64))\n          when 8\n            # BoolField\n            @{{ field }}.refrash_val_bool(value.as(Bool))\n          when 9\n            # SlugField\n            @{{ field }}.refrash_val_str(value.as(String))\n          else\n            raise DynFork::Errors::Model::InvalidGroupNumber\n              .new(@@full_model_name, {{ field.name.stringify }})\n          end\n        else\n            @{{ field }}.value =  nil\n        end\n      else\n          (@{{ field }}.value = nil) if name != \"hash\"\n      end\n    {% end %}\n"}},{"html_id":"valid?:Bool-instance-method","name":"valid?","doc":"Check data validity.\nNOTE: the main use is to check data from web forms.\n\nExample:\n```\n@[DynFork::Meta(service_name: \"Accounts\")]\nstruct User < DynFork::Model\n  getter username = DynFork::Fields::TextField.new\n  getter birthday = DynFork::Fields::DateField.new\nend\n\nuser = User.new\nif user.valid?\n  # your code...\nend\n```\n","summary":"<p>Check data validity.</p>","abstract":false,"location":{"filename":"src/dynfork/paladins/tools.cr","line_number":20,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork/paladins/tools.cr#L20"},"def":{"name":"valid?","return_type":"Bool","visibility":"Public","body":"collection : Mongo::Collection = DynFork::Globals.mongo_database[@@meta.not_nil![:collection_name]]\n(self.check(pointerof(collection))).valid?\n"}}]}]}]},{"html_id":"dynfork/Validator","path":"Validator.html","kind":"module","full_name":"Validator","name":"Validator","abstract":false,"locations":[{"filename":"lib/validator/src/validator.cr","line_number":116,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/lib/validator/src/validator.cr#L116"},{"filename":"lib/validator/src/validators/alpha_num.cr","line_number":8,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/lib/validator/src/validators/alpha_num.cr#L8"},{"filename":"lib/validator/src/validators/case_sensitive.cr","line_number":8,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/lib/validator/src/validators/case_sensitive.cr#L8"},{"filename":"lib/validator/src/validators/comparisons.cr","line_number":8,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/lib/validator/src/validators/comparisons.cr#L8"},{"filename":"lib/validator/src/validators/format.cr","line_number":8,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/lib/validator/src/validators/format.cr#L8"},{"filename":"lib/validator/src/validators/geo.cr","line_number":8,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/lib/validator/src/validators/geo.cr#L8"},{"filename":"lib/validator/src/validators/presence.cr","line_number":8,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/lib/validator/src/validators/presence.cr#L8"},{"filename":"lib/validator/src/validators/uri.cr","line_number":8,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/lib/validator/src/validators/uri.cr#L8"},{"filename":"src/dynfork.cr","line_number":57,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork.cr#L57"}],"repository_name":"dynfork","program":false,"enum":false,"alias":false,"const":false,"doc":"∠(・.-)―〉 →◎ `validator` is a [Crystal](https://crystal-lang.org) data validation module.\nVery simple and efficient, all validations return `true` or `false`.\n\nAlso [validator/check](https://nicolab.github.io/crystal-validator/Check.html)\n(not exposed by default) provides error message handling intended for the end user.\n\nThere are 2 main ways to use *validator*:\n\n- As a simple validator to check rules (eg: email, url, min, max, presence, in, ...) which return a boolean.\n- As a more advanced validation system which will check a series of rules\n and returns all validation errors encountered with custom or standard messages.\n\nBy default the **validator** module expose only `Validator` and `Valid` (alias) in the scope:\n\n```\nrequire \"validator\"\n\nValid.email? \"contact@example.org\"                        # => true\nValid.url? \"https://github.com/Nicolab/crystal-validator\" # => true\nValid.my_validator? \"value to validate\", \"hello\", 42      # => true\n```\n\nAn (optional) expressive validation flavor, `is` available as an alternative.  \\\nNot exposed by default, it must be imported:\n\n```\nrequire \"validator/is\"\n\nis :email?, \"contact@example.org\"                        # => true\nis :url?, \"https://github.com/Nicolab/crystal-validator\" # => true\nis :my_validator?, \"value to validate\", \"hello\", 42      # => true\n\n# raises an error if the email is not valid\nis! :email?, \"contact@@example..org\" # => Validator::Error\n```\n\n`is` is a macro, no overhead during the runtime 🚀\n By the nature of the macros, you can't pass the *validator* name dynamically\n with a variable like that `is(validator_name, \"my value to validate\", arg)`.\n But of course you can pass arguments with variables `is(:validator_name?, arg1, arg2)`.\n\n\n## Check\n\nMake a series of checks, with a customized error message for each case.\n\n```\nrequire \"validator/check\"\n\ncheck = Check.new\n\ncheck(\"email\", \"The email is required.\", is :absence?, \"email\", user)\n```\n## Custom validator\n\nJust add your own method to register a custom *validator* or to overload an existing *validator*.\n\n```\nmodule Validator\n  # My custom validator\n  def self.my_validator?(value, arg : String, another_arg : Int32) : Bool\n    # write here the logic of your validator...\n    return true\n  end\nend\n\n# Call it\nputs Valid.my_validator?(\"value to validate\", \"hello\", 42) # => true\n\n# or with the `is` flavor\nputs is :my_validator?, \"value to validate\", \"hello\", 42 # => true\n```\n\n`Check` is a simple and lightweight wrapper, let your imagination run wild to add your logic around it.\n\nUsing the custom validator with the validation rules:\n\n```\nrequire \"validator/check\"\n\nclass Article\n  # Mixin\n  Check.checkable\n\n  property title : String\n  property content : String\n\n  Check.rules(\n    content: {\n      # Now the custom validator is available\n      check: {\n        my_validator: {\"My validator error message\"},\n        between:      {\"The article content must be between 10 and 20 000 characters\", 10, 20_000},\n        # ...\n      },\n    },\n  )\nend\n\n# Triggered with all data\nv, article = Article.check(input_data)\n\n# Triggered with one value\nv, content = Article.check_content(input_data[\"content\"]?)\n```","summary":"<p>∠(・.-)―〉 →◎ <code>validator</code> is a <a href=\"https://crystal-lang.org\">Crystal</a> data validation module.</p>","class_methods":[{"html_id":"color_code?(value:String):Bool-class-method","name":"color_code?","doc":"Custom validator for checking color code.\n<br>\n_Examples: #fff | #f2f2f2 | #f2f2f200 | rgb(255,0,24) | rgba(255,0,24,0.5) |\nrgba(#fff,0.5) | hsl(120,100%,50%) | hsla(170,23%,25%,0.2) | 0x00ffff_#","summary":"<p>Custom validator for checking color code.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(value : String) : Bool","args_html":"(value : String) : Bool","location":{"filename":"src/dynfork.cr","line_number":62,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork.cr#L62"},"def":{"name":"color_code?","args":[{"name":"value","external_name":"value","restriction":"String"}],"return_type":"Bool","visibility":"Public","body":"DynFork::Globals.regex[:color_code].matches?(value)"}},{"html_id":"password?(value:String):Bool-class-method","name":"password?","doc":"Custom validator to validate the password string.","summary":"<p>Custom validator to validate the password string.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(value : String) : Bool","args_html":"(value : String) : Bool","location":{"filename":"src/dynfork.cr","line_number":67,"url":"https://github.com/kebasyaty/dynfork/blob/f08c9bd81eb67eab49f3a18a1464119c7e88f6d8/src/dynfork.cr#L67"},"def":{"name":"password?","args":[{"name":"value","external_name":"value","restriction":"String"}],"return_type":"Bool","visibility":"Public","body":"DynFork::Globals.regex[:password].matches?(value)"}}]}]}}